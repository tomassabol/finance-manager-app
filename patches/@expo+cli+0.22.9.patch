diff --git a/node_modules/@expo/cli/.DS_Store b/node_modules/@expo/cli/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/@expo/cli/build/bin/cli b/node_modules/@expo/cli/build/bin/cli
index 9568883..c2284a7 100755
--- a/node_modules/@expo/cli/build/bin/cli
+++ b/node_modules/@expo/cli/build/bin/cli
@@ -121,7 +121,7 @@ const args = (0, _arg().default)({
 });
 if (args["--version"]) {
     // Version is added in the build script.
-    console.log("0.22.9");
+    console.log("0.21.8");
     process.exit(0);
 }
 if (args["--non-interactive"]) {
diff --git a/node_modules/@expo/cli/build/src/api/rest/client.js b/node_modules/@expo/cli/build/src/api/rest/client.js
index 1e04a3a..a29cfd0 100644
--- a/node_modules/@expo/cli/build/src/api/rest/client.js
+++ b/node_modules/@expo/cli/build/src/api/rest/client.js
@@ -17,13 +17,6 @@ _export(exports, {
     createCachedFetch: ()=>createCachedFetch,
     fetchAsync: ()=>fetchAsync
 });
-function _getUserState() {
-    const data = require("@expo/config/build/getUserState");
-    _getUserState = function() {
-        return data;
-    };
-    return data;
-}
 function _path() {
     const data = /*#__PURE__*/ _interopRequireDefault(require("path"));
     _path = function() {
@@ -148,7 +141,7 @@ function createCachedFetch({ fetch =fetchWithCredentials , cacheDirectory , ttl
     }
     const { FileSystemResponseCache  } = require("./cache/FileSystemResponseCache");
     return (0, _wrapFetchWithCache.wrapFetchWithCache)(fetch, new FileSystemResponseCache({
-        cacheDirectory: _path().default.join((0, _getUserState().getExpoHomeDirectory)(), cacheDirectory),
+        cacheDirectory: _path().default.join((0, _userSettings.getExpoHomeDirectory)(), cacheDirectory),
         ttl
     }));
 }
diff --git a/node_modules/@expo/cli/build/src/api/rest/client.js.map b/node_modules/@expo/cli/build/src/api/rest/client.js.map
index de51a75..44a4820 100644
--- a/node_modules/@expo/cli/build/src/api/rest/client.js.map
+++ b/node_modules/@expo/cli/build/src/api/rest/client.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/api/rest/client.ts"],"sourcesContent":["import { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport type { JSONValue } from '@expo/json-file';\nimport path from 'path';\n\nimport { wrapFetchWithCache } from './cache/wrapFetchWithCache';\nimport type { FetchLike } from './client.types';\nimport { wrapFetchWithBaseUrl } from './wrapFetchWithBaseUrl';\nimport { wrapFetchWithOffline } from './wrapFetchWithOffline';\nimport { wrapFetchWithProgress } from './wrapFetchWithProgress';\nimport { wrapFetchWithProxy } from './wrapFetchWithProxy';\nimport { wrapFetchWithUserAgent } from './wrapFetchWithUserAgent';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { fetch } from '../../utils/fetch';\nimport { getExpoApiBaseUrl } from '../endpoint';\nimport { disableNetwork } from '../settings';\nimport { getAccessToken, getSession } from '../user/UserSettings';\n\nexport class ApiV2Error extends Error {\n  readonly name = 'ApiV2Error';\n  readonly code: string;\n  readonly expoApiV2ErrorCode: string;\n  readonly expoApiV2ErrorDetails?: JSONValue;\n  readonly expoApiV2ErrorServerStack?: string;\n  readonly expoApiV2ErrorMetadata?: object;\n\n  constructor(response: {\n    message: string;\n    code: string;\n    stack?: string;\n    details?: JSONValue;\n    metadata?: object;\n  }) {\n    super(response.message);\n    this.code = response.code;\n    this.expoApiV2ErrorCode = response.code;\n    this.expoApiV2ErrorDetails = response.details;\n    this.expoApiV2ErrorServerStack = response.stack;\n    this.expoApiV2ErrorMetadata = response.metadata;\n  }\n}\n\n/**\n * An Expo server error that didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the server.\n */\nexport class UnexpectedServerError extends Error {\n  readonly name = 'UnexpectedServerError';\n}\n\n/**\n * An error defining that the server didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the client.\n */\nexport class UnexpectedServerData extends Error {\n  readonly name = 'UnexpectedServerData';\n}\n\n/** Validate the response json contains `.data` property, or throw an unexpected server data error */\nexport function getResponseDataOrThrow<T = any>(json: unknown): T {\n  if (!!json && typeof json === 'object' && 'data' in json) {\n    return json.data as T;\n  }\n\n  throw new UnexpectedServerData(\n    !!json && typeof json === 'object' ? JSON.stringify(json) : 'Unknown data received from server.'\n  );\n}\n\n/**\n * @returns a `fetch` function that will inject user authentication information and handle errors from the Expo API.\n */\nexport function wrapFetchWithCredentials(fetchFunction: FetchLike): FetchLike {\n  return async function fetchWithCredentials(url, options = {}) {\n    if (Array.isArray(options.headers)) {\n      throw new Error('request headers must be in object form');\n    }\n\n    const resolvedHeaders = options.headers ?? ({} as any);\n\n    const token = getAccessToken();\n    if (token) {\n      resolvedHeaders.authorization = `Bearer ${token}`;\n    } else {\n      const sessionSecret = getSession()?.sessionSecret;\n      if (sessionSecret) {\n        resolvedHeaders['expo-session'] = sessionSecret;\n      }\n    }\n\n    try {\n      const response = await fetchFunction(url, {\n        ...options,\n        headers: resolvedHeaders,\n      });\n\n      // Handle expected API errors (4xx)\n      if (response.status >= 400 && response.status < 500) {\n        const body = await response.text();\n        try {\n          const data = JSON.parse(body);\n          if (data?.errors?.length) {\n            throw new ApiV2Error(data.errors[0]);\n          }\n        } catch (error: any) {\n          // Server returned non-json response.\n          if (error.message.includes('in JSON at position')) {\n            throw new UnexpectedServerError(body);\n          }\n          throw error;\n        }\n      }\n\n      return response;\n    } catch (error: any) {\n      // When running `expo start`, but wifi or internet has issues\n      if (\n        isNetworkError(error) || // node-fetch error handling\n        ('cause' in error && isNetworkError(error.cause)) // undici error handling\n      ) {\n        disableNetwork();\n\n        throw new CommandError(\n          'OFFLINE',\n          'Network connection is unreliable. Try again with the environment variable `EXPO_OFFLINE=1` to skip network requests.'\n        );\n      }\n\n      throw error;\n    }\n  };\n}\n\n/**\n * Determine if the provided error is related to a network issue.\n * When this returns true, offline mode should be enabled.\n *   - `ENOTFOUND` is thrown when the DNS lookup failed\n *   - `EAI_AGAIN` is thrown when DNS lookup failed due to a server-side error\n *   - `UND_ERR_CONNECT_TIMEOUT` is thrown after DNS is resolved, but server can't be reached\n *\n * @see https://nodejs.org/api/errors.html\n * @see https://github.com/nodejs/undici#network-address-family-autoselection\n */\nfunction isNetworkError(error: Error & { code?: string }) {\n  return (\n    'code' in error &&\n    error.code &&\n    ['ENOTFOUND', 'EAI_AGAIN', 'UND_ERR_CONNECT_TIMEOUT'].includes(error.code)\n  );\n}\n\nconst fetchWithOffline = wrapFetchWithOffline(wrapFetchWithUserAgent(fetch));\n\nconst fetchWithBaseUrl = wrapFetchWithBaseUrl(fetchWithOffline, getExpoApiBaseUrl() + '/v2/');\n\nconst fetchWithProxy = wrapFetchWithProxy(fetchWithBaseUrl);\n\nconst fetchWithCredentials = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n\n/**\n * Create an instance of the fully qualified fetch command (auto authentication and api) but with caching in the '~/.expo' directory.\n * Caching is disabled automatically if the EXPO_NO_CACHE or EXPO_BETA environment variables are enabled.\n */\nexport function createCachedFetch({\n  fetch = fetchWithCredentials,\n  cacheDirectory,\n  ttl,\n  skipCache,\n}: {\n  fetch?: FetchLike;\n  cacheDirectory: string;\n  ttl?: number;\n  skipCache?: boolean;\n}): FetchLike {\n  // Disable all caching in EXPO_BETA.\n  if (skipCache || env.EXPO_BETA || env.EXPO_NO_CACHE) {\n    return fetch;\n  }\n\n  const { FileSystemResponseCache } =\n    require('./cache/FileSystemResponseCache') as typeof import('./cache/FileSystemResponseCache');\n\n  return wrapFetchWithCache(\n    fetch,\n    new FileSystemResponseCache({\n      cacheDirectory: path.join(getExpoHomeDirectory(), cacheDirectory),\n      ttl,\n    })\n  );\n}\n\n/** Instance of fetch with automatic base URL pointing to the Expo API, user credential injection, and API error handling. Caching not included.  */\nexport const fetchAsync = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n"],"names":["ApiV2Error","UnexpectedServerError","UnexpectedServerData","getResponseDataOrThrow","wrapFetchWithCredentials","createCachedFetch","fetchAsync","Error","name","constructor","response","message","code","expoApiV2ErrorCode","expoApiV2ErrorDetails","details","expoApiV2ErrorServerStack","stack","expoApiV2ErrorMetadata","metadata","json","data","JSON","stringify","fetchFunction","fetchWithCredentials","url","options","Array","isArray","headers","resolvedHeaders","token","getAccessToken","authorization","getSession","sessionSecret","status","body","text","parse","errors","length","error","includes","isNetworkError","cause","disableNetwork","CommandError","fetchWithOffline","wrapFetchWithOffline","wrapFetchWithUserAgent","fetch","fetchWithBaseUrl","wrapFetchWithBaseUrl","getExpoApiBaseUrl","fetchWithProxy","wrapFetchWithProxy","wrapFetchWithProgress","cacheDirectory","ttl","skipCache","env","EXPO_BETA","EXPO_NO_CACHE","FileSystemResponseCache","require","wrapFetchWithCache","path","join","getExpoHomeDirectory"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/api/rest/client.ts"],"sourcesContent":["import type { JSONValue } from '@expo/json-file';\nimport path from 'path';\n\nimport { wrapFetchWithCache } from './cache/wrapFetchWithCache';\nimport type { FetchLike } from './client.types';\nimport { wrapFetchWithBaseUrl } from './wrapFetchWithBaseUrl';\nimport { wrapFetchWithOffline } from './wrapFetchWithOffline';\nimport { wrapFetchWithProgress } from './wrapFetchWithProgress';\nimport { wrapFetchWithProxy } from './wrapFetchWithProxy';\nimport { wrapFetchWithUserAgent } from './wrapFetchWithUserAgent';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { fetch } from '../../utils/fetch';\nimport { getExpoApiBaseUrl } from '../endpoint';\nimport { disableNetwork } from '../settings';\nimport { getAccessToken, getExpoHomeDirectory, getSession } from '../user/UserSettings';\n\nexport class ApiV2Error extends Error {\n  readonly name = 'ApiV2Error';\n  readonly code: string;\n  readonly expoApiV2ErrorCode: string;\n  readonly expoApiV2ErrorDetails?: JSONValue;\n  readonly expoApiV2ErrorServerStack?: string;\n  readonly expoApiV2ErrorMetadata?: object;\n\n  constructor(response: {\n    message: string;\n    code: string;\n    stack?: string;\n    details?: JSONValue;\n    metadata?: object;\n  }) {\n    super(response.message);\n    this.code = response.code;\n    this.expoApiV2ErrorCode = response.code;\n    this.expoApiV2ErrorDetails = response.details;\n    this.expoApiV2ErrorServerStack = response.stack;\n    this.expoApiV2ErrorMetadata = response.metadata;\n  }\n}\n\n/**\n * An Expo server error that didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the server.\n */\nexport class UnexpectedServerError extends Error {\n  readonly name = 'UnexpectedServerError';\n}\n\n/**\n * An error defining that the server didn't return the expected error JSON information.\n * The only 'expected' place for this is in testing, all other cases are bugs with the client.\n */\nexport class UnexpectedServerData extends Error {\n  readonly name = 'UnexpectedServerData';\n}\n\n/** Validate the response json contains `.data` property, or throw an unexpected server data error */\nexport function getResponseDataOrThrow<T = any>(json: unknown): T {\n  if (!!json && typeof json === 'object' && 'data' in json) {\n    return json.data as T;\n  }\n\n  throw new UnexpectedServerData(\n    !!json && typeof json === 'object' ? JSON.stringify(json) : 'Unknown data received from server.'\n  );\n}\n\n/**\n * @returns a `fetch` function that will inject user authentication information and handle errors from the Expo API.\n */\nexport function wrapFetchWithCredentials(fetchFunction: FetchLike): FetchLike {\n  return async function fetchWithCredentials(url, options = {}) {\n    if (Array.isArray(options.headers)) {\n      throw new Error('request headers must be in object form');\n    }\n\n    const resolvedHeaders = options.headers ?? ({} as any);\n\n    const token = getAccessToken();\n    if (token) {\n      resolvedHeaders.authorization = `Bearer ${token}`;\n    } else {\n      const sessionSecret = getSession()?.sessionSecret;\n      if (sessionSecret) {\n        resolvedHeaders['expo-session'] = sessionSecret;\n      }\n    }\n\n    try {\n      const response = await fetchFunction(url, {\n        ...options,\n        headers: resolvedHeaders,\n      });\n\n      // Handle expected API errors (4xx)\n      if (response.status >= 400 && response.status < 500) {\n        const body = await response.text();\n        try {\n          const data = JSON.parse(body);\n          if (data?.errors?.length) {\n            throw new ApiV2Error(data.errors[0]);\n          }\n        } catch (error: any) {\n          // Server returned non-json response.\n          if (error.message.includes('in JSON at position')) {\n            throw new UnexpectedServerError(body);\n          }\n          throw error;\n        }\n      }\n\n      return response;\n    } catch (error: any) {\n      // When running `expo start`, but wifi or internet has issues\n      if (\n        isNetworkError(error) || // node-fetch error handling\n        ('cause' in error && isNetworkError(error.cause)) // undici error handling\n      ) {\n        disableNetwork();\n\n        throw new CommandError(\n          'OFFLINE',\n          'Network connection is unreliable. Try again with the environment variable `EXPO_OFFLINE=1` to skip network requests.'\n        );\n      }\n\n      throw error;\n    }\n  };\n}\n\n/**\n * Determine if the provided error is related to a network issue.\n * When this returns true, offline mode should be enabled.\n *   - `ENOTFOUND` is thrown when the DNS lookup failed\n *   - `EAI_AGAIN` is thrown when DNS lookup failed due to a server-side error\n *   - `UND_ERR_CONNECT_TIMEOUT` is thrown after DNS is resolved, but server can't be reached\n *\n * @see https://nodejs.org/api/errors.html\n * @see https://github.com/nodejs/undici#network-address-family-autoselection\n */\nfunction isNetworkError(error: Error & { code?: string }) {\n  return (\n    'code' in error &&\n    error.code &&\n    ['ENOTFOUND', 'EAI_AGAIN', 'UND_ERR_CONNECT_TIMEOUT'].includes(error.code)\n  );\n}\n\nconst fetchWithOffline = wrapFetchWithOffline(wrapFetchWithUserAgent(fetch));\n\nconst fetchWithBaseUrl = wrapFetchWithBaseUrl(fetchWithOffline, getExpoApiBaseUrl() + '/v2/');\n\nconst fetchWithProxy = wrapFetchWithProxy(fetchWithBaseUrl);\n\nconst fetchWithCredentials = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n\n/**\n * Create an instance of the fully qualified fetch command (auto authentication and api) but with caching in the '~/.expo' directory.\n * Caching is disabled automatically if the EXPO_NO_CACHE or EXPO_BETA environment variables are enabled.\n */\nexport function createCachedFetch({\n  fetch = fetchWithCredentials,\n  cacheDirectory,\n  ttl,\n  skipCache,\n}: {\n  fetch?: FetchLike;\n  cacheDirectory: string;\n  ttl?: number;\n  skipCache?: boolean;\n}): FetchLike {\n  // Disable all caching in EXPO_BETA.\n  if (skipCache || env.EXPO_BETA || env.EXPO_NO_CACHE) {\n    return fetch;\n  }\n\n  const { FileSystemResponseCache } =\n    require('./cache/FileSystemResponseCache') as typeof import('./cache/FileSystemResponseCache');\n\n  return wrapFetchWithCache(\n    fetch,\n    new FileSystemResponseCache({\n      cacheDirectory: path.join(getExpoHomeDirectory(), cacheDirectory),\n      ttl,\n    })\n  );\n}\n\n/** Instance of fetch with automatic base URL pointing to the Expo API, user credential injection, and API error handling. Caching not included.  */\nexport const fetchAsync = wrapFetchWithProgress(wrapFetchWithCredentials(fetchWithProxy));\n"],"names":["ApiV2Error","UnexpectedServerError","UnexpectedServerData","getResponseDataOrThrow","wrapFetchWithCredentials","createCachedFetch","fetchAsync","Error","name","constructor","response","message","code","expoApiV2ErrorCode","expoApiV2ErrorDetails","details","expoApiV2ErrorServerStack","stack","expoApiV2ErrorMetadata","metadata","json","data","JSON","stringify","fetchFunction","fetchWithCredentials","url","options","Array","isArray","headers","resolvedHeaders","token","getAccessToken","authorization","getSession","sessionSecret","status","body","text","parse","errors","length","error","includes","isNetworkError","cause","disableNetwork","CommandError","fetchWithOffline","wrapFetchWithOffline","wrapFetchWithUserAgent","fetch","fetchWithBaseUrl","wrapFetchWithBaseUrl","getExpoApiBaseUrl","fetchWithProxy","wrapFetchWithProxy","wrapFetchWithProgress","cacheDirectory","ttl","skipCache","env","EXPO_BETA","EXPO_NO_CACHE","FileSystemResponseCache","require","wrapFetchWithCache","path","join","getExpoHomeDirectory"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/api/user/UserSettings.js b/node_modules/@expo/cli/build/src/api/user/UserSettings.js
index 65c7a1b..0371dfc 100644
--- a/node_modules/@expo/cli/build/src/api/user/UserSettings.js
+++ b/node_modules/@expo/cli/build/src/api/user/UserSettings.js
@@ -9,6 +9,7 @@ function _export(target, all) {
     });
 }
 _export(exports, {
+    getExpoHomeDirectory: ()=>getExpoHomeDirectory,
     getSettingsDirectory: ()=>getSettingsDirectory,
     getSettingsFilePath: ()=>getSettingsFilePath,
     getSettings: ()=>getSettings,
@@ -19,13 +20,6 @@ _export(exports, {
     getAnonymousIdAsync: ()=>getAnonymousIdAsync,
     getAnonymousId: ()=>getAnonymousId
 });
-function _getUserState() {
-    const data = require("@expo/config/build/getUserState");
-    _getUserState = function() {
-        return data;
-    };
-    return data;
-}
 function _jsonFile() {
     const data = /*#__PURE__*/ _interopRequireDefault(require("@expo/json-file"));
     _jsonFile = function() {
@@ -40,21 +34,93 @@ function _crypto() {
     };
     return data;
 }
+function _getenv() {
+    const data = require("getenv");
+    _getenv = function() {
+        return data;
+    };
+    return data;
+}
+function _os() {
+    const data = require("os");
+    _os = function() {
+        return data;
+    };
+    return data;
+}
+function _path() {
+    const data = /*#__PURE__*/ _interopRequireWildcard(require("path"));
+    _path = function() {
+        return data;
+    };
+    return data;
+}
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
     };
 }
+function _getRequireWildcardCache(nodeInterop) {
+    if (typeof WeakMap !== "function") return null;
+    var cacheBabelInterop = new WeakMap();
+    var cacheNodeInterop = new WeakMap();
+    return (_getRequireWildcardCache = function(nodeInterop) {
+        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
+    })(nodeInterop);
+}
+function _interopRequireWildcard(obj, nodeInterop) {
+    if (!nodeInterop && obj && obj.__esModule) {
+        return obj;
+    }
+    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
+        return {
+            default: obj
+        };
+    }
+    var cache = _getRequireWildcardCache(nodeInterop);
+    if (cache && cache.has(obj)) {
+        return cache.get(obj);
+    }
+    var newObj = {};
+    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
+    for(var key in obj){
+        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
+            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
+            if (desc && (desc.get || desc.set)) {
+                Object.defineProperty(newObj, key, desc);
+            } else {
+                newObj[key] = obj[key];
+            }
+        }
+    }
+    newObj.default = obj;
+    if (cache) {
+        cache.set(obj, newObj);
+    }
+    return newObj;
+}
+function getExpoHomeDirectory() {
+    const home = (0, _os().homedir)();
+    if (process.env.__UNSAFE_EXPO_HOME_DIRECTORY) {
+        return process.env.__UNSAFE_EXPO_HOME_DIRECTORY;
+    } else if ((0, _getenv().boolish)("EXPO_STAGING", false)) {
+        return _path().join(home, ".expo-staging");
+    } else if ((0, _getenv().boolish)("EXPO_LOCAL", false)) {
+        return _path().join(home, ".expo-local");
+    }
+    return _path().join(home, ".expo");
+}
 function getSettingsDirectory() {
-    return (0, _getUserState().getExpoHomeDirectory)();
+    return getExpoHomeDirectory();
 }
 function getSettingsFilePath() {
-    return (0, _getUserState().getUserStatePath)();
+    return _path().join(getExpoHomeDirectory(), "state.json");
 }
 function getSettings() {
     return new (_jsonFile()).default(getSettingsFilePath(), {
         ensureDir: true,
         jsonParseErrorDefault: {},
+        // This will ensure that an error isn't thrown if the file doesn't exist.
         cantReadFileDefault: {}
     });
 }
diff --git a/node_modules/@expo/cli/build/src/api/user/UserSettings.js.map b/node_modules/@expo/cli/build/src/api/user/UserSettings.js.map
index 3e10962..bc1b068 100644
--- a/node_modules/@expo/cli/build/src/api/user/UserSettings.js.map
+++ b/node_modules/@expo/cli/build/src/api/user/UserSettings.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/api/user/UserSettings.ts"],"sourcesContent":["import { getExpoHomeDirectory, getUserStatePath } from '@expo/config/build/getUserState';\nimport JsonFile from '@expo/json-file';\nimport crypto from 'crypto';\n\ntype SessionData = {\n  sessionSecret: string;\n  // These fields are potentially used by Expo CLI.\n  userId: string;\n  username: string;\n  currentConnection: 'Username-Password-Authentication' | 'Browser-Flow-Authentication';\n};\n\nexport type UserSettingsData = {\n  auth?: SessionData | null;\n  ignoreBundledBinaries?: string[];\n  PATH?: string;\n  /** Last development code signing ID used for `npx expo run:ios`. */\n  developmentCodeSigningId?: string;\n  /** Unique user ID which is generated anonymously and can be cleared locally. */\n  uuid?: string;\n};\n\n/** Return the user cache directory. */\nexport function getSettingsDirectory() {\n  return getExpoHomeDirectory();\n}\n\n/** Return the file path of the settings file */\nexport function getSettingsFilePath(): string {\n  return getUserStatePath();\n}\n\n/** Get a new JsonFile instance pointed towards the settings file */\nexport function getSettings(): JsonFile<UserSettingsData> {\n  return new JsonFile<UserSettingsData>(getSettingsFilePath(), {\n    ensureDir: true,\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {},\n  });\n}\n\nexport function getAccessToken(): string | null {\n  return process.env.EXPO_TOKEN ?? null;\n}\n\nexport function getSession() {\n  return getSettings().get('auth', null);\n}\n\nexport async function setSessionAsync(sessionData?: SessionData) {\n  await getSettings().setAsync('auth', sessionData, {\n    default: {},\n    ensureDir: true,\n  });\n}\n\n/**\n * Check if there are credentials available, without fetching the user information.\n * This can be used as a faster check to see if users are authenticated.\n * Note, this isn't checking the validity of the credentials.\n */\nexport function hasCredentials() {\n  return !!getAccessToken() || !!getSession();\n}\n\n/**\n * Get an anonymous and randomly generated identifier.\n * This is used to group telemetry event by unknown actor,\n * and cannot be used to identify a single user.\n */\nexport async function getAnonymousIdAsync(): Promise<string> {\n  const settings = getSettings();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = crypto.randomUUID();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\n/**\n * Get an anonymous and randomly generated identifier.\n * This is used to group telemetry event by unknown actor,\n * and cannot be used to identify a single user.\n */\nexport function getAnonymousId(): string {\n  const settings = getSettings();\n  let id = settings.get('uuid', null);\n\n  if (!id) {\n    id = crypto.randomUUID();\n    settings.set('uuid', id);\n  }\n\n  return id;\n}\n"],"names":["getSettingsDirectory","getSettingsFilePath","getSettings","getAccessToken","getSession","setSessionAsync","hasCredentials","getAnonymousIdAsync","getAnonymousId","getExpoHomeDirectory","getUserStatePath","JsonFile","ensureDir","jsonParseErrorDefault","cantReadFileDefault","process","env","EXPO_TOKEN","get","sessionData","setAsync","default","settings","id","getAsync","crypto","randomUUID","set"],"mappings":"AAAA;;;;;;;;;;;IAuBgBA,oBAAoB,MAApBA,oBAAoB;IAKpBC,mBAAmB,MAAnBA,mBAAmB;IAKnBC,WAAW,MAAXA,WAAW;IAQXC,cAAc,MAAdA,cAAc;IAIdC,UAAU,MAAVA,UAAU;IAIJC,eAAe,MAAfA,eAAe;IAYrBC,cAAc,MAAdA,cAAc;IASRC,mBAAmB,MAAnBA,mBAAmB;IAiBzBC,cAAc,MAAdA,cAAc;;;yBAvFyB,iCAAiC;;;;;;;8DACnE,iBAAiB;;;;;;;8DACnB,QAAQ;;;;;;;;;;;AAqBpB,SAASR,oBAAoB,GAAG;IACrC,OAAOS,IAAAA,aAAoB,EAAA,qBAAA,GAAE,CAAC;AAChC,CAAC;AAGM,SAASR,mBAAmB,GAAW;IAC5C,OAAOS,IAAAA,aAAgB,EAAA,iBAAA,GAAE,CAAC;AAC5B,CAAC;AAGM,SAASR,WAAW,GAA+B;IACxD,OAAO,IAAIS,CAAAA,SAAQ,EAAA,CAAA,QAAA,CAAmBV,mBAAmB,EAAE,EAAE;QAC3DW,SAAS,EAAE,IAAI;QACfC,qBAAqB,EAAE,EAAE;QACzBC,mBAAmB,EAAE,EAAE;KACxB,CAAC,CAAC;AACL,CAAC;AAEM,SAASX,cAAc,GAAkB;IAC9C,OAAOY,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,IAAI,CAAC;AACxC,CAAC;AAEM,SAASb,UAAU,GAAG;IAC3B,OAAOF,WAAW,EAAE,CAACgB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACzC,CAAC;AAEM,eAAeb,eAAe,CAACc,WAAyB,EAAE;IAC/D,MAAMjB,WAAW,EAAE,CAACkB,QAAQ,CAAC,MAAM,EAAED,WAAW,EAAE;QAChDE,OAAO,EAAE,EAAE;QACXT,SAAS,EAAE,IAAI;KAChB,CAAC,CAAC;AACL,CAAC;AAOM,SAASN,cAAc,GAAG;IAC/B,OAAO,CAAC,CAACH,cAAc,EAAE,IAAI,CAAC,CAACC,UAAU,EAAE,CAAC;AAC9C,CAAC;AAOM,eAAeG,mBAAmB,GAAoB;IAC3D,MAAMe,QAAQ,GAAGpB,WAAW,EAAE,AAAC;IAC/B,IAAIqB,EAAE,GAAG,MAAMD,QAAQ,CAACE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,AAAC;IAE/C,IAAI,CAACD,EAAE,EAAE;QACPA,EAAE,GAAGE,OAAM,EAAA,QAAA,CAACC,UAAU,EAAE,CAAC;QACzB,MAAMJ,QAAQ,CAACF,QAAQ,CAAC,MAAM,EAAEG,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,OAAOA,EAAE,CAAC;AACZ,CAAC;AAOM,SAASf,cAAc,GAAW;IACvC,MAAMc,QAAQ,GAAGpB,WAAW,EAAE,AAAC;IAC/B,IAAIqB,EAAE,GAAGD,QAAQ,CAACJ,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,AAAC;IAEpC,IAAI,CAACK,EAAE,EAAE;QACPA,EAAE,GAAGE,OAAM,EAAA,QAAA,CAACC,UAAU,EAAE,CAAC;QACzBJ,QAAQ,CAACK,GAAG,CAAC,MAAM,EAAEJ,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED,OAAOA,EAAE,CAAC;AACZ,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/api/user/UserSettings.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport crypto from 'crypto';\nimport { boolish } from 'getenv';\nimport { homedir } from 'os';\nimport * as path from 'path';\n\ntype SessionData = {\n  sessionSecret?: string;\n  userId?: string;\n  username?: string;\n  currentConnection?: 'Username-Password-Authentication' | 'Browser-Flow-Authentication';\n};\n\nexport type UserSettingsData = {\n  auth?: SessionData | null;\n  ignoreBundledBinaries?: string[];\n  PATH?: string;\n  /** Last development code signing ID used for `npx expo run:ios`. */\n  developmentCodeSigningId?: string;\n  /** Unique user ID which is generated anonymously and can be cleared locally. */\n  uuid?: string;\n};\n\n// The ~/.expo directory is used to store authentication sessions,\n// which are shared between EAS CLI and Expo CLI.\nexport function getExpoHomeDirectory() {\n  const home = homedir();\n\n  if (process.env.__UNSAFE_EXPO_HOME_DIRECTORY) {\n    return process.env.__UNSAFE_EXPO_HOME_DIRECTORY;\n  } else if (boolish('EXPO_STAGING', false)) {\n    return path.join(home, '.expo-staging');\n  } else if (boolish('EXPO_LOCAL', false)) {\n    return path.join(home, '.expo-local');\n  }\n  return path.join(home, '.expo');\n}\n\n/** Return the user cache directory. */\nexport function getSettingsDirectory() {\n  return getExpoHomeDirectory();\n}\n\n/** Return the file path of the settings file */\nexport function getSettingsFilePath(): string {\n  return path.join(getExpoHomeDirectory(), 'state.json');\n}\n\n/** Get a new JsonFile instance pointed towards the settings file */\nexport function getSettings(): JsonFile<UserSettingsData> {\n  return new JsonFile<UserSettingsData>(getSettingsFilePath(), {\n    ensureDir: true,\n    jsonParseErrorDefault: {},\n    // This will ensure that an error isn't thrown if the file doesn't exist.\n    cantReadFileDefault: {},\n  });\n}\n\nexport function getAccessToken(): string | null {\n  return process.env.EXPO_TOKEN ?? null;\n}\n\nexport function getSession() {\n  return getSettings().get('auth', null);\n}\n\nexport async function setSessionAsync(sessionData?: SessionData) {\n  await getSettings().setAsync('auth', sessionData, {\n    default: {},\n    ensureDir: true,\n  });\n}\n\n/**\n * Check if there are credentials available, without fetching the user information.\n * This can be used as a faster check to see if users are authenticated.\n * Note, this isn't checking the validity of the credentials.\n */\nexport function hasCredentials() {\n  return !!getAccessToken() || !!getSession();\n}\n\n/**\n * Get an anonymous and randomly generated identifier.\n * This is used to group telemetry event by unknown actor,\n * and cannot be used to identify a single user.\n */\nexport async function getAnonymousIdAsync(): Promise<string> {\n  const settings = getSettings();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = crypto.randomUUID();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\n/**\n * Get an anonymous and randomly generated identifier.\n * This is used to group telemetry event by unknown actor,\n * and cannot be used to identify a single user.\n */\nexport function getAnonymousId(): string {\n  const settings = getSettings();\n  let id = settings.get('uuid', null);\n\n  if (!id) {\n    id = crypto.randomUUID();\n    settings.set('uuid', id);\n  }\n\n  return id;\n}\n"],"names":["getExpoHomeDirectory","getSettingsDirectory","getSettingsFilePath","getSettings","getAccessToken","getSession","setSessionAsync","hasCredentials","getAnonymousIdAsync","getAnonymousId","home","homedir","process","env","__UNSAFE_EXPO_HOME_DIRECTORY","boolish","path","join","JsonFile","ensureDir","jsonParseErrorDefault","cantReadFileDefault","EXPO_TOKEN","get","sessionData","setAsync","default","settings","id","getAsync","crypto","randomUUID","set"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/embed/exportServer.js b/node_modules/@expo/cli/build/src/export/embed/exportServer.js
index 80e5b6c..fde8555 100644
--- a/node_modules/@expo/cli/build/src/export/embed/exportServer.js
+++ b/node_modules/@expo/cli/build/src/export/embed/exportServer.js
@@ -186,14 +186,18 @@ async function runServerDeployCommandAsync(projectRoot, { distDirectory , deploy
     if (!_env.env.EXPO_UNSTABLE_DEPLOY_SERVER) {
         return false;
     }
-    const globalBin = getCommandBin("eas");
-    if (!globalBin) {
-        // This should never happen from EAS Builds.
-        // Possible to happen when building locally with `npx expo run`
-        (0, _xcodeCompilerLogger.logMetroErrorInXcode)(projectRoot, `eas-cli is not installed globally, skipping server deployment. Install EAS CLI with 'npm install -g eas-cli'.`);
-        return false;
+    if (!_env.env.EAS_BUILD) {
+        // This check helps avoid running EAS if the user isn't a user of EAS.
+        // We only need to run it when building outside of EAS.
+        const globalBin = getCommandBin("eas");
+        if (!globalBin) {
+            // This should never happen from EAS Builds.
+            // Possible to happen when building locally with `npx expo run`
+            (0, _xcodeCompilerLogger.logMetroErrorInXcode)(projectRoot, `eas-cli is not installed globally, skipping server deployment. Install EAS CLI with 'npm install -g eas-cli'.`);
+            return false;
+        }
+        debug("Found eas-cli:", globalBin);
     }
-    debug("Found eas-cli:", globalBin);
     let json;
     try {
         let results;
@@ -215,8 +219,8 @@ async function runServerDeployCommandAsync(projectRoot, { distDirectory , deploy
         } else {
             (0, _xcodeCompilerLogger.logInXcode)("Deploying server to link with client");
             // results = DEPLOYMENT_SUCCESS_FIXTURE;
-            results = await (0, _spawnAsync().default)("node", [
-                globalBin,
+            results = await (0, _spawnAsync().default)("npx", [
+                "eas-cli",
                 "deploy",
                 "--non-interactive",
                 "--json",
diff --git a/node_modules/@expo/cli/build/src/export/embed/exportServer.js.map b/node_modules/@expo/cli/build/src/export/embed/exportServer.js.map
index d591a21..b64968b 100644
--- a/node_modules/@expo/cli/build/src/export/embed/exportServer.js.map
+++ b/node_modules/@expo/cli/build/src/export/embed/exportServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/embed/exportServer.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig, modifyConfigAsync, PackageJSONConfig } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { execSync } from 'node:child_process';\nimport path from 'path';\n\nimport { disableNetwork } from '../../api/settings';\nimport { Log } from '../../log';\nimport { isSpawnResultError } from '../../start/platforms/ios/xcrun';\nimport { MetroBundlerDevServer } from '../../start/server/metro/MetroBundlerDevServer';\nimport { removeAsync } from '../../utils/dir';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { exportApiRoutesStandaloneAsync } from '../exportStaticAsync';\nimport { copyPublicFolderAsync } from '../publicFolder';\nimport { ExportAssetMap, persistMetroFilesAsync } from '../saveAssets';\nimport { Options } from './resolveOptions';\nimport {\n  isExecutingFromXcodebuild,\n  logInXcode,\n  logMetroErrorInXcode,\n  warnInXcode,\n} from './xcodeCompilerLogger';\n\nconst debug = require('debug')('expo:export:server');\n\ntype ServerDeploymentResults = {\n  url: string;\n  dashboardUrl?: string;\n};\n\nexport async function exportStandaloneServerAsync(\n  projectRoot: string,\n  devServer: MetroBundlerDevServer,\n  {\n    exp,\n    pkg,\n    files,\n    options,\n  }: { exp: ExpoConfig; pkg: PackageJSONConfig; files: ExportAssetMap; options: Options }\n) {\n  if (!options.eager) {\n    await tryRemovingGeneratedOriginAsync(projectRoot, exp);\n  }\n\n  logInXcode('Exporting server');\n\n  // Store the server output in the project's .expo directory.\n  const serverOutput = path.join(projectRoot, '.expo/server', options.platform);\n\n  // Remove the previous server output to prevent stale files.\n  await removeAsync(serverOutput);\n\n  // Export the API routes for server rendering the React Server Components.\n  await exportApiRoutesStandaloneAsync(devServer, {\n    files,\n    platform: 'web',\n    apiRoutesOnly: true,\n  });\n\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n\n  // Copy over public folder items\n  await copyPublicFolderAsync(publicPath, serverOutput);\n\n  // Copy over the server output on top of the public folder.\n  await persistMetroFilesAsync(files, serverOutput);\n\n  [...files.entries()].forEach(([key, value]) => {\n    if (value.targetDomain === 'server') {\n      // Delete server resources to prevent them from being exposed in the binary.\n      files.delete(key);\n    }\n  });\n\n  // TODO: Deprecate this in favor of a built-in prop that users should avoid setting.\n  const userDefinedServerUrl = exp.extra?.router?.origin;\n  let serverUrl = userDefinedServerUrl;\n\n  const shouldSkipServerDeployment = (() => {\n    if (!options.eager) {\n      logInXcode('Skipping server deployment because the script is not running in eager mode.');\n      return true;\n    }\n\n    // Add an opaque flag to disable server deployment.\n    if (env.EXPO_NO_DEPLOY) {\n      warnInXcode('Skipping server deployment because environment variable EXPO_NO_DEPLOY is set.');\n      return true;\n    }\n\n    // Can't safely deploy from Xcode since the PATH isn't set up correctly. We could amend this in the future and allow users who customize the PATH to deploy from Xcode.\n    if (isExecutingFromXcodebuild()) {\n      // TODO: Don't warn when the eager bundle has been run.\n      warnInXcode(\n        'Skipping server deployment because the build is running from an Xcode run script. Build with Expo CLI or EAS Build to deploy the server automatically.'\n      );\n      return true;\n    }\n\n    return false;\n  })();\n\n  // Deploy the server output to a hosting provider.\n  const deployedServerUrl = shouldSkipServerDeployment\n    ? false\n    : await runServerDeployCommandAsync(projectRoot, {\n        distDirectory: serverOutput,\n        deployScript: getServerDeploymentScript(pkg.scripts, options.platform),\n      });\n\n  if (!deployedServerUrl) {\n    return;\n  }\n\n  if (serverUrl) {\n    logInXcode(\n      `Using custom server URL: ${serverUrl} (ignoring deployment URL: ${deployedServerUrl})`\n    );\n  }\n\n  // If the user-defined server URL is not defined, use the deployed server URL.\n  // This allows for overwriting the server URL in the project's native files.\n  serverUrl ||= deployedServerUrl;\n\n  // If the user hasn't manually defined the server URL, write the deployed server URL to the app.json.\n  if (userDefinedServerUrl) {\n    Log.log('Skip automatically linking server origin to native container');\n    return;\n  }\n  Log.log('Writing generated server URL to app.json');\n\n  // NOTE: Is is it possible to assert that the config needs to be modifiable before building the app?\n  const modification = await modifyConfigAsync(\n    projectRoot,\n    {\n      extra: {\n        ...(exp.extra ?? {}),\n        router: {\n          ...(exp.extra?.router ?? {}),\n          generatedOrigin: serverUrl,\n        },\n      },\n    },\n    {\n      skipSDKVersionRequirement: true,\n    }\n  );\n\n  if (modification.type !== 'success') {\n    throw new CommandError(\n      `Failed to write generated server origin to app.json because the file is dynamic and does not extend the static config. The client will not be able to make server requests to API routes or static files. You can disable server linking with EXPO_NO_DEPLOY=1 or by disabling server output in the app.json.`\n    );\n  }\n}\n\nasync function dumpDeploymentLogs(projectRoot: string, logs: string, name = 'deploy') {\n  const outputPath = path.join(projectRoot, `.expo/logs/${name}.log`);\n  await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n  debug('Dumping server deployment logs to: ' + outputPath);\n  await fs.promises.writeFile(outputPath, logs);\n  return outputPath;\n}\n\nfunction getCommandBin(command: string) {\n  try {\n    return execSync(`command -v ${command}`, { stdio: 'pipe' }).toString().trim();\n  } catch {\n    return null;\n  }\n}\n\nasync function runServerDeployCommandAsync(\n  projectRoot: string,\n  {\n    distDirectory,\n    deployScript,\n  }: { distDirectory: string; deployScript: { scriptName: string; script: string } | null }\n): Promise<string | false> {\n  const logOfflineError = () => {\n    const manualScript = deployScript\n      ? `npm run ${deployScript.scriptName}`\n      : `npx eas deploy --export-dir ${distDirectory}`;\n\n    logMetroErrorInXcode(\n      projectRoot,\n      chalk.red`Running CLI in offline mode, skipping server deployment. Deploy manually with: ${manualScript}`\n    );\n  };\n  if (env.EXPO_OFFLINE) {\n    logOfflineError();\n    return false;\n  }\n\n  // TODO: Only allow EAS deployments when staging is enabled, this is because the feature is still staging-only.\n  if (!env.EXPO_UNSTABLE_DEPLOY_SERVER) {\n    return false;\n  }\n\n  const globalBin = getCommandBin('eas');\n  if (!globalBin) {\n    // This should never happen from EAS Builds.\n    // Possible to happen when building locally with `npx expo run`\n    logMetroErrorInXcode(\n      projectRoot,\n      `eas-cli is not installed globally, skipping server deployment. Install EAS CLI with 'npm install -g eas-cli'.`\n    );\n    return false;\n  }\n  debug('Found eas-cli:', globalBin);\n\n  let json: any;\n  try {\n    let results: spawnAsync.SpawnResult;\n\n    const spawnOptions: spawnAsync.SpawnOptions = {\n      cwd: projectRoot,\n      // Ensures that errors can be caught.\n      stdio: 'pipe',\n    };\n    // TODO: Support absolute paths in EAS CLI\n    const exportDir = path.relative(projectRoot, distDirectory);\n    if (deployScript) {\n      logInXcode(`Using custom server deploy script: ${deployScript.scriptName}`);\n      // Amend the path to try and make the custom scripts work.\n\n      results = await spawnAsync(\n        'npm',\n        ['run', deployScript.scriptName, `--export-dir=${exportDir}`],\n        spawnOptions\n      );\n    } else {\n      logInXcode('Deploying server to link with client');\n\n      // results = DEPLOYMENT_SUCCESS_FIXTURE;\n      results = await spawnAsync(\n        'node',\n        [globalBin, 'deploy', '--non-interactive', '--json', `--export-dir=${exportDir}`],\n        spawnOptions\n      );\n\n      debug('Server deployment stdout:', results.stdout);\n\n      // Send stderr to stderr. stdout is parsed as JSON.\n      if (results.stderr) {\n        process.stderr.write(results.stderr);\n      }\n    }\n\n    const logPath = await dumpDeploymentLogs(projectRoot, results.output.join('\\n'));\n\n    try {\n      // {\n      //   \"dashboardUrl\": \"https://staging.expo.dev/projects/6460c11c-e1bc-4084-882a-fd9f57b825b1/hosting/deployments\",\n      //   \"identifier\": \"8a1pwbv6c5\",\n      //   \"url\": \"https://sep30--8a1pwbv6c5.staging.expo.app\"\n      // }\n      json = JSON.parse(results.stdout.trim());\n    } catch {\n      logMetroErrorInXcode(\n        projectRoot,\n        `Failed to parse server deployment JSON output. Check the logs for more information: ${logPath}`\n      );\n      return false;\n    }\n  } catch (error) {\n    if (isSpawnResultError(error)) {\n      const output = error.output.join('\\n').trim() || error.toString();\n      Log.log(\n        chalk.dim(\n          'An error occurred while deploying server. Logs stored at: ' +\n            (await dumpDeploymentLogs(projectRoot, output, 'deploy-error'))\n        )\n      );\n\n      // Likely a server offline or network error.\n      if (output.match(/ENOTFOUND/)) {\n        logOfflineError();\n        // Print the raw error message to help provide more context.\n        Log.log(chalk.dim(output));\n        // Prevent any other network requests (unlikely for this command).\n        disableNetwork();\n        return false;\n      }\n\n      logInXcode(output);\n      if (output.match(/spawn eas ENOENT/)) {\n        // EAS not installed.\n        logMetroErrorInXcode(\n          projectRoot,\n          `Server deployment failed because eas-cli cannot be accessed from the build script's environment (ENOENT). Install EAS CLI with 'npm install -g eas-cli'.`\n        );\n        return false;\n      }\n\n      if (error.stderr.match(/Must configure EAS project by running/)) {\n        // EAS not configured, this can happen when building a project locally before building in EAS.\n        // User must run `eas init`, `eas deploy`, or `eas build` first.\n\n        // TODO: Should we fail the build here or just warn users?\n        logMetroErrorInXcode(\n          projectRoot,\n          `Skipping server deployment because EAS is not configured. Run 'eas init' before trying again, or disable server output in the project.`\n        );\n        return false;\n      }\n    }\n\n    // Throw unhandled server deployment errors.\n    throw error;\n  }\n\n  // Assert json format\n  assertDeploymentJsonOutput(json);\n\n  // Warn about the URL not being valid. This should never happen, but might be possible with third-parties.\n  if (!canParseURL(json.url)) {\n    warnInXcode(`The server deployment URL is not a valid URL: ${json.url}`);\n  }\n\n  if (json.dashboardUrl) {\n    logInXcode(`Server dashboard: ${json.dashboardUrl}`);\n  }\n\n  logInXcode(`Server deployed to: ${json.url}`);\n\n  return json.url;\n}\n\nfunction canParseURL(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction assertDeploymentJsonOutput(json: any): asserts json is ServerDeploymentResults {\n  if (!json || typeof json !== 'object' || typeof json.url !== 'string') {\n    throw new Error(\n      'JSON output of server deployment command are not in the expected format: { url: \"https://...\" }'\n    );\n  }\n}\n\nfunction getServerDeploymentScript(\n  scripts: Record<string, string> | undefined,\n  platform: string\n): { scriptName: string; script: string } | null {\n  // Users can overwrite the default deployment script with:\n  // { scripts: { \"native:deploy\": \"eas deploy --json --non-interactive\" } }\n  // A quick search on GitHub showed that `native:deploy` is not used in any public repos yet.\n  // https://github.com/search?q=%22native%3Adeploy%22+path%3Apackage.json&type=code\n  const DEFAULT_SCRIPT_NAME = 'native:deploy';\n\n  const scriptNames = [\n    // DEFAULT_SCRIPT_NAME + ':' + platform,\n    DEFAULT_SCRIPT_NAME,\n  ];\n\n  for (const scriptName of scriptNames) {\n    if (scripts?.[scriptName]) {\n      return { scriptName, script: scripts[scriptName] };\n    }\n  }\n\n  return null;\n}\n\n/** We can try to remove the generated origin from the manifest when running outside of eager mode. Bundling is the last operation to run so the config will already be embedded with the origin. */\nasync function tryRemovingGeneratedOriginAsync(projectRoot: string, exp: ExpoConfig) {\n  if (env.CI) {\n    // Skip in CI since nothing is committed.\n    return;\n  }\n  if (exp.extra?.router?.generatedOrigin == null) {\n    debug('No generated origin needs removing');\n    return;\n  }\n\n  const modification = await modifyConfigAsync(\n    projectRoot,\n    {\n      extra: {\n        ...(exp.extra ?? {}),\n        router: {\n          ...(exp.extra?.router ?? {}),\n          generatedOrigin: undefined,\n        },\n      },\n    },\n    {\n      skipSDKVersionRequirement: true,\n    }\n  );\n\n  if (modification.type !== 'success') {\n    debug('Could not remove generated origin from manifest');\n  } else {\n    debug('Generated origin has been removed from manifest');\n  }\n}\n"],"names":["exportStandaloneServerAsync","debug","require","projectRoot","devServer","exp","pkg","files","options","eager","tryRemovingGeneratedOriginAsync","logInXcode","serverOutput","path","join","platform","removeAsync","exportApiRoutesStandaloneAsync","apiRoutesOnly","publicPath","resolve","env","EXPO_PUBLIC_FOLDER","copyPublicFolderAsync","persistMetroFilesAsync","entries","forEach","key","value","targetDomain","delete","userDefinedServerUrl","extra","router","origin","serverUrl","shouldSkipServerDeployment","EXPO_NO_DEPLOY","warnInXcode","isExecutingFromXcodebuild","deployedServerUrl","runServerDeployCommandAsync","distDirectory","deployScript","getServerDeploymentScript","scripts","Log","log","modification","modifyConfigAsync","generatedOrigin","skipSDKVersionRequirement","type","CommandError","dumpDeploymentLogs","logs","name","outputPath","fs","promises","mkdir","dirname","recursive","writeFile","getCommandBin","command","execSync","stdio","toString","trim","logOfflineError","manualScript","scriptName","logMetroErrorInXcode","chalk","red","EXPO_OFFLINE","EXPO_UNSTABLE_DEPLOY_SERVER","globalBin","json","results","spawnOptions","cwd","exportDir","relative","spawnAsync","stdout","stderr","process","write","logPath","output","JSON","parse","error","isSpawnResultError","dim","match","disableNetwork","assertDeploymentJsonOutput","canParseURL","url","dashboardUrl","URL","Error","DEFAULT_SCRIPT_NAME","scriptNames","script","CI","undefined"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/embed/exportServer.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig, modifyConfigAsync, PackageJSONConfig } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { execSync } from 'node:child_process';\nimport path from 'path';\n\nimport { disableNetwork } from '../../api/settings';\nimport { Log } from '../../log';\nimport { isSpawnResultError } from '../../start/platforms/ios/xcrun';\nimport { MetroBundlerDevServer } from '../../start/server/metro/MetroBundlerDevServer';\nimport { removeAsync } from '../../utils/dir';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { exportApiRoutesStandaloneAsync } from '../exportStaticAsync';\nimport { copyPublicFolderAsync } from '../publicFolder';\nimport { ExportAssetMap, persistMetroFilesAsync } from '../saveAssets';\nimport { Options } from './resolveOptions';\nimport {\n  isExecutingFromXcodebuild,\n  logInXcode,\n  logMetroErrorInXcode,\n  warnInXcode,\n} from './xcodeCompilerLogger';\n\nconst debug = require('debug')('expo:export:server');\n\ntype ServerDeploymentResults = {\n  url: string;\n  dashboardUrl?: string;\n};\n\nexport async function exportStandaloneServerAsync(\n  projectRoot: string,\n  devServer: MetroBundlerDevServer,\n  {\n    exp,\n    pkg,\n    files,\n    options,\n  }: { exp: ExpoConfig; pkg: PackageJSONConfig; files: ExportAssetMap; options: Options }\n) {\n  if (!options.eager) {\n    await tryRemovingGeneratedOriginAsync(projectRoot, exp);\n  }\n\n  logInXcode('Exporting server');\n\n  // Store the server output in the project's .expo directory.\n  const serverOutput = path.join(projectRoot, '.expo/server', options.platform);\n\n  // Remove the previous server output to prevent stale files.\n  await removeAsync(serverOutput);\n\n  // Export the API routes for server rendering the React Server Components.\n  await exportApiRoutesStandaloneAsync(devServer, {\n    files,\n    platform: 'web',\n    apiRoutesOnly: true,\n  });\n\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n\n  // Copy over public folder items\n  await copyPublicFolderAsync(publicPath, serverOutput);\n\n  // Copy over the server output on top of the public folder.\n  await persistMetroFilesAsync(files, serverOutput);\n\n  [...files.entries()].forEach(([key, value]) => {\n    if (value.targetDomain === 'server') {\n      // Delete server resources to prevent them from being exposed in the binary.\n      files.delete(key);\n    }\n  });\n\n  // TODO: Deprecate this in favor of a built-in prop that users should avoid setting.\n  const userDefinedServerUrl = exp.extra?.router?.origin;\n  let serverUrl = userDefinedServerUrl;\n\n  const shouldSkipServerDeployment = (() => {\n    if (!options.eager) {\n      logInXcode('Skipping server deployment because the script is not running in eager mode.');\n      return true;\n    }\n\n    // Add an opaque flag to disable server deployment.\n    if (env.EXPO_NO_DEPLOY) {\n      warnInXcode('Skipping server deployment because environment variable EXPO_NO_DEPLOY is set.');\n      return true;\n    }\n\n    // Can't safely deploy from Xcode since the PATH isn't set up correctly. We could amend this in the future and allow users who customize the PATH to deploy from Xcode.\n    if (isExecutingFromXcodebuild()) {\n      // TODO: Don't warn when the eager bundle has been run.\n      warnInXcode(\n        'Skipping server deployment because the build is running from an Xcode run script. Build with Expo CLI or EAS Build to deploy the server automatically.'\n      );\n      return true;\n    }\n\n    return false;\n  })();\n\n  // Deploy the server output to a hosting provider.\n  const deployedServerUrl = shouldSkipServerDeployment\n    ? false\n    : await runServerDeployCommandAsync(projectRoot, {\n        distDirectory: serverOutput,\n        deployScript: getServerDeploymentScript(pkg.scripts, options.platform),\n      });\n\n  if (!deployedServerUrl) {\n    return;\n  }\n\n  if (serverUrl) {\n    logInXcode(\n      `Using custom server URL: ${serverUrl} (ignoring deployment URL: ${deployedServerUrl})`\n    );\n  }\n\n  // If the user-defined server URL is not defined, use the deployed server URL.\n  // This allows for overwriting the server URL in the project's native files.\n  serverUrl ||= deployedServerUrl;\n\n  // If the user hasn't manually defined the server URL, write the deployed server URL to the app.json.\n  if (userDefinedServerUrl) {\n    Log.log('Skip automatically linking server origin to native container');\n    return;\n  }\n  Log.log('Writing generated server URL to app.json');\n\n  // NOTE: Is is it possible to assert that the config needs to be modifiable before building the app?\n  const modification = await modifyConfigAsync(\n    projectRoot,\n    {\n      extra: {\n        ...(exp.extra ?? {}),\n        router: {\n          ...(exp.extra?.router ?? {}),\n          generatedOrigin: serverUrl,\n        },\n      },\n    },\n    {\n      skipSDKVersionRequirement: true,\n    }\n  );\n\n  if (modification.type !== 'success') {\n    throw new CommandError(\n      `Failed to write generated server origin to app.json because the file is dynamic and does not extend the static config. The client will not be able to make server requests to API routes or static files. You can disable server linking with EXPO_NO_DEPLOY=1 or by disabling server output in the app.json.`\n    );\n  }\n}\n\nasync function dumpDeploymentLogs(projectRoot: string, logs: string, name = 'deploy') {\n  const outputPath = path.join(projectRoot, `.expo/logs/${name}.log`);\n  await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n  debug('Dumping server deployment logs to: ' + outputPath);\n  await fs.promises.writeFile(outputPath, logs);\n  return outputPath;\n}\n\nfunction getCommandBin(command: string) {\n  try {\n    return execSync(`command -v ${command}`, { stdio: 'pipe' }).toString().trim();\n  } catch {\n    return null;\n  }\n}\n\nasync function runServerDeployCommandAsync(\n  projectRoot: string,\n  {\n    distDirectory,\n    deployScript,\n  }: { distDirectory: string; deployScript: { scriptName: string; script: string } | null }\n): Promise<string | false> {\n  const logOfflineError = () => {\n    const manualScript = deployScript\n      ? `npm run ${deployScript.scriptName}`\n      : `npx eas deploy --export-dir ${distDirectory}`;\n\n    logMetroErrorInXcode(\n      projectRoot,\n      chalk.red`Running CLI in offline mode, skipping server deployment. Deploy manually with: ${manualScript}`\n    );\n  };\n  if (env.EXPO_OFFLINE) {\n    logOfflineError();\n    return false;\n  }\n\n  // TODO: Only allow EAS deployments when staging is enabled, this is because the feature is still staging-only.\n  if (!env.EXPO_UNSTABLE_DEPLOY_SERVER) {\n    return false;\n  }\n\n  if (!env.EAS_BUILD) {\n    // This check helps avoid running EAS if the user isn't a user of EAS.\n    // We only need to run it when building outside of EAS.\n    const globalBin = getCommandBin('eas');\n    if (!globalBin) {\n      // This should never happen from EAS Builds.\n      // Possible to happen when building locally with `npx expo run`\n      logMetroErrorInXcode(\n        projectRoot,\n        `eas-cli is not installed globally, skipping server deployment. Install EAS CLI with 'npm install -g eas-cli'.`\n      );\n      return false;\n    }\n    debug('Found eas-cli:', globalBin);\n  }\n\n  let json: any;\n  try {\n    let results: spawnAsync.SpawnResult;\n\n    const spawnOptions: spawnAsync.SpawnOptions = {\n      cwd: projectRoot,\n      // Ensures that errors can be caught.\n      stdio: 'pipe',\n    };\n    // TODO: Support absolute paths in EAS CLI\n    const exportDir = path.relative(projectRoot, distDirectory);\n    if (deployScript) {\n      logInXcode(`Using custom server deploy script: ${deployScript.scriptName}`);\n      // Amend the path to try and make the custom scripts work.\n\n      results = await spawnAsync(\n        'npm',\n        ['run', deployScript.scriptName, `--export-dir=${exportDir}`],\n        spawnOptions\n      );\n    } else {\n      logInXcode('Deploying server to link with client');\n\n      // results = DEPLOYMENT_SUCCESS_FIXTURE;\n      results = await spawnAsync(\n        'npx',\n        ['eas-cli', 'deploy', '--non-interactive', '--json', `--export-dir=${exportDir}`],\n        spawnOptions\n      );\n\n      debug('Server deployment stdout:', results.stdout);\n\n      // Send stderr to stderr. stdout is parsed as JSON.\n      if (results.stderr) {\n        process.stderr.write(results.stderr);\n      }\n    }\n\n    const logPath = await dumpDeploymentLogs(projectRoot, results.output.join('\\n'));\n\n    try {\n      // {\n      //   \"dashboardUrl\": \"https://staging.expo.dev/projects/6460c11c-e1bc-4084-882a-fd9f57b825b1/hosting/deployments\",\n      //   \"identifier\": \"8a1pwbv6c5\",\n      //   \"url\": \"https://sep30--8a1pwbv6c5.staging.expo.app\"\n      // }\n      json = JSON.parse(results.stdout.trim());\n    } catch {\n      logMetroErrorInXcode(\n        projectRoot,\n        `Failed to parse server deployment JSON output. Check the logs for more information: ${logPath}`\n      );\n      return false;\n    }\n  } catch (error) {\n    if (isSpawnResultError(error)) {\n      const output = error.output.join('\\n').trim() || error.toString();\n      Log.log(\n        chalk.dim(\n          'An error occurred while deploying server. Logs stored at: ' +\n            (await dumpDeploymentLogs(projectRoot, output, 'deploy-error'))\n        )\n      );\n\n      // Likely a server offline or network error.\n      if (output.match(/ENOTFOUND/)) {\n        logOfflineError();\n        // Print the raw error message to help provide more context.\n        Log.log(chalk.dim(output));\n        // Prevent any other network requests (unlikely for this command).\n        disableNetwork();\n        return false;\n      }\n\n      logInXcode(output);\n      if (output.match(/spawn eas ENOENT/)) {\n        // EAS not installed.\n        logMetroErrorInXcode(\n          projectRoot,\n          `Server deployment failed because eas-cli cannot be accessed from the build script's environment (ENOENT). Install EAS CLI with 'npm install -g eas-cli'.`\n        );\n        return false;\n      }\n\n      if (error.stderr.match(/Must configure EAS project by running/)) {\n        // EAS not configured, this can happen when building a project locally before building in EAS.\n        // User must run `eas init`, `eas deploy`, or `eas build` first.\n\n        // TODO: Should we fail the build here or just warn users?\n        logMetroErrorInXcode(\n          projectRoot,\n          `Skipping server deployment because EAS is not configured. Run 'eas init' before trying again, or disable server output in the project.`\n        );\n        return false;\n      }\n    }\n\n    // Throw unhandled server deployment errors.\n    throw error;\n  }\n\n  // Assert json format\n  assertDeploymentJsonOutput(json);\n\n  // Warn about the URL not being valid. This should never happen, but might be possible with third-parties.\n  if (!canParseURL(json.url)) {\n    warnInXcode(`The server deployment URL is not a valid URL: ${json.url}`);\n  }\n\n  if (json.dashboardUrl) {\n    logInXcode(`Server dashboard: ${json.dashboardUrl}`);\n  }\n\n  logInXcode(`Server deployed to: ${json.url}`);\n\n  return json.url;\n}\n\nfunction canParseURL(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction assertDeploymentJsonOutput(json: any): asserts json is ServerDeploymentResults {\n  if (!json || typeof json !== 'object' || typeof json.url !== 'string') {\n    throw new Error(\n      'JSON output of server deployment command are not in the expected format: { url: \"https://...\" }'\n    );\n  }\n}\n\nfunction getServerDeploymentScript(\n  scripts: Record<string, string> | undefined,\n  platform: string\n): { scriptName: string; script: string } | null {\n  // Users can overwrite the default deployment script with:\n  // { scripts: { \"native:deploy\": \"eas deploy --json --non-interactive\" } }\n  // A quick search on GitHub showed that `native:deploy` is not used in any public repos yet.\n  // https://github.com/search?q=%22native%3Adeploy%22+path%3Apackage.json&type=code\n  const DEFAULT_SCRIPT_NAME = 'native:deploy';\n\n  const scriptNames = [\n    // DEFAULT_SCRIPT_NAME + ':' + platform,\n    DEFAULT_SCRIPT_NAME,\n  ];\n\n  for (const scriptName of scriptNames) {\n    if (scripts?.[scriptName]) {\n      return { scriptName, script: scripts[scriptName] };\n    }\n  }\n\n  return null;\n}\n\n/** We can try to remove the generated origin from the manifest when running outside of eager mode. Bundling is the last operation to run so the config will already be embedded with the origin. */\nasync function tryRemovingGeneratedOriginAsync(projectRoot: string, exp: ExpoConfig) {\n  if (env.CI) {\n    // Skip in CI since nothing is committed.\n    return;\n  }\n  if (exp.extra?.router?.generatedOrigin == null) {\n    debug('No generated origin needs removing');\n    return;\n  }\n\n  const modification = await modifyConfigAsync(\n    projectRoot,\n    {\n      extra: {\n        ...(exp.extra ?? {}),\n        router: {\n          ...(exp.extra?.router ?? {}),\n          generatedOrigin: undefined,\n        },\n      },\n    },\n    {\n      skipSDKVersionRequirement: true,\n    }\n  );\n\n  if (modification.type !== 'success') {\n    debug('Could not remove generated origin from manifest');\n  } else {\n    debug('Generated origin has been removed from manifest');\n  }\n}\n"],"names":["exportStandaloneServerAsync","debug","require","projectRoot","devServer","exp","pkg","files","options","eager","tryRemovingGeneratedOriginAsync","logInXcode","serverOutput","path","join","platform","removeAsync","exportApiRoutesStandaloneAsync","apiRoutesOnly","publicPath","resolve","env","EXPO_PUBLIC_FOLDER","copyPublicFolderAsync","persistMetroFilesAsync","entries","forEach","key","value","targetDomain","delete","userDefinedServerUrl","extra","router","origin","serverUrl","shouldSkipServerDeployment","EXPO_NO_DEPLOY","warnInXcode","isExecutingFromXcodebuild","deployedServerUrl","runServerDeployCommandAsync","distDirectory","deployScript","getServerDeploymentScript","scripts","Log","log","modification","modifyConfigAsync","generatedOrigin","skipSDKVersionRequirement","type","CommandError","dumpDeploymentLogs","logs","name","outputPath","fs","promises","mkdir","dirname","recursive","writeFile","getCommandBin","command","execSync","stdio","toString","trim","logOfflineError","manualScript","scriptName","logMetroErrorInXcode","chalk","red","EXPO_OFFLINE","EXPO_UNSTABLE_DEPLOY_SERVER","EAS_BUILD","globalBin","json","results","spawnOptions","cwd","exportDir","relative","spawnAsync","stdout","stderr","process","write","logPath","output","JSON","parse","error","isSpawnResultError","dim","match","disableNetwork","assertDeploymentJsonOutput","canParseURL","url","dashboardUrl","URL","Error","DEFAULT_SCRIPT_NAME","scriptNames","script","CI","undefined"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js b/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js
index 81c0043..60b9630 100644
--- a/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js
+++ b/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js
@@ -14,6 +14,7 @@ function _export(target, all) {
     });
 }
 _export(exports, {
+    isPossiblyUnableToResolveError: ()=>isPossiblyUnableToResolveError,
     getXcodeCompilerErrorMessage: ()=>getXcodeCompilerErrorMessage,
     logMetroErrorInXcode: ()=>logMetroErrorInXcode,
     logInXcode: ()=>logInXcode,
diff --git a/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js.map b/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js.map
index aac50f1..160aa18 100644
--- a/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js.map
+++ b/node_modules/@expo/cli/build/src/export/embed/xcodeCompilerLogger.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/export/embed/xcodeCompilerLogger.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport path from 'path';\n\nimport { Log } from '../../log';\n\nfunction isPossiblyUnableToResolveError(\n  error: any\n): error is { message: string; originModulePath: string; targetModuleName: string } {\n  return (\n    'message' in error &&\n    typeof error.message === 'string' &&\n    'originModulePath' in error &&\n    typeof error.originModulePath === 'string' &&\n    'targetModuleName' in error &&\n    typeof error.targetModuleName === 'string'\n  );\n}\nfunction isPossiblyTransformError(\n  error: any\n): error is { message: string; filename: string; lineNumber: number; column?: number } {\n  return (\n    'message' in error &&\n    typeof error.message === 'string' &&\n    'filename' in error &&\n    typeof error.filename === 'string' &&\n    'lineNumber' in error &&\n    typeof error.lineNumber === 'number'\n  );\n}\n\nexport function getXcodeCompilerErrorMessage(\n  projectRoot: string,\n  error: Error | any\n): string | null {\n  const makeFilepathAbsolute = (filepath: string) =>\n    filepath.startsWith('/') ? filepath : path.join(projectRoot, filepath);\n\n  if (typeof error === 'string') {\n    return makeXcodeCompilerLog('error', error);\n  } else if ('message' in error) {\n    // Metro's `UnableToResolveError`\n    if (isPossiblyUnableToResolveError(error)) {\n      const loc = getLineNumberForStringInFile(error.originModulePath, error.targetModuleName);\n      return makeXcodeCompilerLog('error', error.message, {\n        fileName: error.originModulePath,\n        lineNumber: loc?.lineNumber,\n        column: loc?.column,\n      });\n    } else if (isPossiblyTransformError(error)) {\n      return makeXcodeCompilerLog('error', error.message, {\n        // Metro generally returns the filename as relative from the project root.\n        fileName: makeFilepathAbsolute(error.filename),\n        lineNumber: error.lineNumber,\n        column: error.column,\n      });\n      // TODO: ResourceNotFoundError, GraphNotFoundError, RevisionNotFoundError, AmbiguousModuleResolutionError\n    } else {\n      // Unknown error\n      return makeXcodeCompilerLog('error', error.message);\n    }\n  }\n\n  return null;\n}\n\n/** Log an error that can be parsed by Xcode and related build tools https://developer.apple.com/documentation/xcode/running-custom-scripts-during-a-build#Log-errors-and-warnings-from-your-script */\nexport function logMetroErrorInXcode(projectRoot: string, error: Error | string) {\n  const message = getXcodeCompilerErrorMessage(projectRoot, error);\n  if (message != null) {\n    console.error(message);\n  }\n}\n\nexport function logInXcode(message: string) {\n  Log.log(makeXcodeCompilerLog('note', message));\n}\n\nexport function warnInXcode(message: string) {\n  Log.warn(makeXcodeCompilerLog('warning', message));\n}\n\n// Detect running in xcode build script. This means the logs need to be formatted in a way that Xcode can parse them, it also means that the shell is not reliable or interactive.\n// https://developer.apple.com/documentation/xcode/running-custom-scripts-during-a-build#Access-script-related-files-from-environment-variables\nexport function isExecutingFromXcodebuild() {\n  return !!process.env.BUILT_PRODUCTS_DIR;\n}\n\nfunction makeXcodeCompilerLog(\n  type: 'error' | 'fatal error' | 'warning' | 'note',\n  message: string,\n  {\n    fileName,\n    lineNumber,\n    column,\n  }: {\n    /** Absolute file path to link to in Xcode. */\n    fileName?: string;\n    lineNumber?: number;\n    column?: number;\n  } = {}\n) {\n  if (!isExecutingFromXcodebuild()) {\n    return message;\n  }\n  // TODO: Figure out how to support multi-line logs.\n  const firstLine = message.split('\\n')[0];\n  if (fileName && !fileName?.includes(':')) {\n    return `${fileName}:${lineNumber || 0}:${\n      column != null ? column + ':' : ''\n    } ${type}: ${firstLine}`;\n  }\n  return `${type}: ${firstLine}`;\n}\n\n// TODO: Metro doesn't expose this info even though it knows it.\nfunction getLineNumberForStringInFile(originModulePath: string, targetModuleName: string) {\n  let file;\n  try {\n    file = fs.readFileSync(originModulePath, 'utf8');\n  } catch (error: any) {\n    if (error.code === 'ENOENT' || error.code === 'EISDIR') {\n      // We're probably dealing with a virtualised file system where\n      // `this.originModulePath` doesn't actually exist on disk.\n      // We can't show a code frame, but there's no need to let this I/O\n      // error shadow the original module resolution error.\n      return null;\n    }\n    throw error;\n  }\n  const lines = file.split('\\n');\n  let lineNumber = 0;\n  let column = -1;\n  for (let line = 0; line < lines.length; line++) {\n    const columnLocation = lines[line].lastIndexOf(targetModuleName);\n    if (columnLocation >= 0) {\n      lineNumber = line;\n      column = columnLocation;\n      break;\n    }\n  }\n  return { lineNumber, column };\n}\n"],"names":["getXcodeCompilerErrorMessage","logMetroErrorInXcode","logInXcode","warnInXcode","isExecutingFromXcodebuild","isPossiblyUnableToResolveError","error","message","originModulePath","targetModuleName","isPossiblyTransformError","filename","lineNumber","projectRoot","makeFilepathAbsolute","filepath","startsWith","path","join","makeXcodeCompilerLog","loc","getLineNumberForStringInFile","fileName","column","console","Log","log","warn","process","env","BUILT_PRODUCTS_DIR","type","firstLine","split","includes","file","fs","readFileSync","code","lines","line","length","columnLocation","lastIndexOf"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/export/embed/xcodeCompilerLogger.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport path from 'path';\n\nimport { Log } from '../../log';\n\nexport function isPossiblyUnableToResolveError(\n  error: any\n): error is { message: string; originModulePath: string; targetModuleName: string } {\n  return (\n    'message' in error &&\n    typeof error.message === 'string' &&\n    'originModulePath' in error &&\n    typeof error.originModulePath === 'string' &&\n    'targetModuleName' in error &&\n    typeof error.targetModuleName === 'string'\n  );\n}\nfunction isPossiblyTransformError(\n  error: any\n): error is { message: string; filename: string; lineNumber: number; column?: number } {\n  return (\n    'message' in error &&\n    typeof error.message === 'string' &&\n    'filename' in error &&\n    typeof error.filename === 'string' &&\n    'lineNumber' in error &&\n    typeof error.lineNumber === 'number'\n  );\n}\n\nexport function getXcodeCompilerErrorMessage(\n  projectRoot: string,\n  error: Error | any\n): string | null {\n  const makeFilepathAbsolute = (filepath: string) =>\n    filepath.startsWith('/') ? filepath : path.join(projectRoot, filepath);\n\n  if (typeof error === 'string') {\n    return makeXcodeCompilerLog('error', error);\n  } else if ('message' in error) {\n    // Metro's `UnableToResolveError`\n    if (isPossiblyUnableToResolveError(error)) {\n      const loc = getLineNumberForStringInFile(error.originModulePath, error.targetModuleName);\n      return makeXcodeCompilerLog('error', error.message, {\n        fileName: error.originModulePath,\n        lineNumber: loc?.lineNumber,\n        column: loc?.column,\n      });\n    } else if (isPossiblyTransformError(error)) {\n      return makeXcodeCompilerLog('error', error.message, {\n        // Metro generally returns the filename as relative from the project root.\n        fileName: makeFilepathAbsolute(error.filename),\n        lineNumber: error.lineNumber,\n        column: error.column,\n      });\n      // TODO: ResourceNotFoundError, GraphNotFoundError, RevisionNotFoundError, AmbiguousModuleResolutionError\n    } else {\n      // Unknown error\n      return makeXcodeCompilerLog('error', error.message);\n    }\n  }\n\n  return null;\n}\n\n/** Log an error that can be parsed by Xcode and related build tools https://developer.apple.com/documentation/xcode/running-custom-scripts-during-a-build#Log-errors-and-warnings-from-your-script */\nexport function logMetroErrorInXcode(projectRoot: string, error: Error | string) {\n  const message = getXcodeCompilerErrorMessage(projectRoot, error);\n  if (message != null) {\n    console.error(message);\n  }\n}\n\nexport function logInXcode(message: string) {\n  Log.log(makeXcodeCompilerLog('note', message));\n}\n\nexport function warnInXcode(message: string) {\n  Log.warn(makeXcodeCompilerLog('warning', message));\n}\n\n// Detect running in xcode build script. This means the logs need to be formatted in a way that Xcode can parse them, it also means that the shell is not reliable or interactive.\n// https://developer.apple.com/documentation/xcode/running-custom-scripts-during-a-build#Access-script-related-files-from-environment-variables\nexport function isExecutingFromXcodebuild() {\n  return !!process.env.BUILT_PRODUCTS_DIR;\n}\n\nfunction makeXcodeCompilerLog(\n  type: 'error' | 'fatal error' | 'warning' | 'note',\n  message: string,\n  {\n    fileName,\n    lineNumber,\n    column,\n  }: {\n    /** Absolute file path to link to in Xcode. */\n    fileName?: string;\n    lineNumber?: number;\n    column?: number;\n  } = {}\n) {\n  if (!isExecutingFromXcodebuild()) {\n    return message;\n  }\n  // TODO: Figure out how to support multi-line logs.\n  const firstLine = message.split('\\n')[0];\n  if (fileName && !fileName?.includes(':')) {\n    return `${fileName}:${lineNumber || 0}:${\n      column != null ? column + ':' : ''\n    } ${type}: ${firstLine}`;\n  }\n  return `${type}: ${firstLine}`;\n}\n\n// TODO: Metro doesn't expose this info even though it knows it.\nfunction getLineNumberForStringInFile(originModulePath: string, targetModuleName: string) {\n  let file;\n  try {\n    file = fs.readFileSync(originModulePath, 'utf8');\n  } catch (error: any) {\n    if (error.code === 'ENOENT' || error.code === 'EISDIR') {\n      // We're probably dealing with a virtualised file system where\n      // `this.originModulePath` doesn't actually exist on disk.\n      // We can't show a code frame, but there's no need to let this I/O\n      // error shadow the original module resolution error.\n      return null;\n    }\n    throw error;\n  }\n  const lines = file.split('\\n');\n  let lineNumber = 0;\n  let column = -1;\n  for (let line = 0; line < lines.length; line++) {\n    const columnLocation = lines[line].lastIndexOf(targetModuleName);\n    if (columnLocation >= 0) {\n      lineNumber = line;\n      column = columnLocation;\n      break;\n    }\n  }\n  return { lineNumber, column };\n}\n"],"names":["isPossiblyUnableToResolveError","getXcodeCompilerErrorMessage","logMetroErrorInXcode","logInXcode","warnInXcode","isExecutingFromXcodebuild","error","message","originModulePath","targetModuleName","isPossiblyTransformError","filename","lineNumber","projectRoot","makeFilepathAbsolute","filepath","startsWith","path","join","makeXcodeCompilerLog","loc","getLineNumberForStringInFile","fileName","column","console","Log","log","warn","process","env","BUILT_PRODUCTS_DIR","type","firstLine","split","includes","file","fs","readFileSync","code","lines","line","length","columnLocation","lastIndexOf"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportApp.js b/node_modules/@expo/cli/build/src/export/exportApp.js
index 175c44f..57827c9 100644
--- a/node_modules/@expo/cli/build/src/export/exportApp.js
+++ b/node_modules/@expo/cli/build/src/export/exportApp.js
@@ -162,6 +162,7 @@ async function exportAppAsync(projectRoot, { platforms , outputDir , clear , dev
         // NOTE(kitten): The public folder is currently always copied, regardless of targetDomain
         // split. Hence, there's another separate `copyPublicFolderAsync` call below for `web`
         await (0, _publicFolder.copyPublicFolderAsync)(publicPath, outputPath);
+        let templateHtml;
         // Can be empty during web-only SSG.
         if (spaPlatforms.length) {
             await Promise.all(spaPlatforms.map(async (platform)=>{
@@ -243,6 +244,8 @@ async function exportAppAsync(projectRoot, { platforms , outputDir , clear , dev
                     if (modifyHtml) {
                         html = modifyHtml(html);
                     }
+                    // HACK: This is used for adding SSR shims in React Server Components.
+                    templateHtml = html;
                     // Generate SPA-styled HTML file.
                     // If web exists, then write the template HTML file.
                     files.set("index.html", {
@@ -257,7 +260,8 @@ async function exportAppAsync(projectRoot, { platforms , outputDir , clear , dev
                     await (0, _exportStaticAsync.exportApiRoutesStandaloneAsync)(devServer, {
                         files,
                         platform: "web",
-                        apiRoutesOnly: !isWeb
+                        apiRoutesOnly: !isWeb,
+                        templateHtml
                     });
                 }
             }
diff --git a/node_modules/@expo/cli/build/src/export/exportApp.js.map b/node_modules/@expo/cli/build/src/export/exportApp.js.map
index 1dbf049..f9eec91 100644
--- a/node_modules/@expo/cli/build/src/export/exportApp.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportApp.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportApp.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport type { Platform } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { type PlatformMetadata, createMetadataJson } from './createMetadataJson';\nimport { exportAssetsAsync } from './exportAssets';\nimport {\n  exportDomComponentAsync,\n  updateDomComponentAssetsForMD5Naming,\n} from './exportDomComponents';\nimport { assertEngineMismatchAsync, isEnableHermesManaged } from './exportHermes';\nimport { exportApiRoutesStandaloneAsync, exportFromServerAsync } from './exportStaticAsync';\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { getPublicExpoManifestAsync } from './getPublicExpoManifest';\nimport { copyPublicFolderAsync } from './publicFolder';\nimport { Options } from './resolveOptions';\nimport {\n  ExportAssetMap,\n  BundleOutput,\n  getFilesFromSerialAssets,\n  persistMetroFilesAsync,\n} from './saveAssets';\nimport { createAssetMap } from './writeContents';\nimport * as Log from '../log';\nimport { WebSupportProjectPrerequisite } from '../start/doctor/web/WebSupportProjectPrerequisite';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { getRouterDirectoryModuleIdWithManifest } from '../start/server/metro/router';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport { getEntryWithServerRoot } from '../start/server/middleware/ManifestMiddleware';\nimport { getBaseUrlFromExpoConfig } from '../start/server/middleware/metroOptions';\nimport { createTemplateHtmlFromExpoConfigAsync } from '../start/server/webTemplate';\nimport { env } from '../utils/env';\nimport { CommandError } from '../utils/errors';\nimport { setNodeEnv } from '../utils/nodeEnv';\n\nexport async function exportAppAsync(\n  projectRoot: string,\n  {\n    platforms,\n    outputDir,\n    clear,\n    dev,\n    dumpAssetmap,\n    sourceMaps,\n    minify,\n    bytecode,\n    maxWorkers,\n    skipSSG,\n  }: Pick<\n    Options,\n    | 'dumpAssetmap'\n    | 'sourceMaps'\n    | 'dev'\n    | 'clear'\n    | 'outputDir'\n    | 'platforms'\n    | 'minify'\n    | 'bytecode'\n    | 'maxWorkers'\n    | 'skipSSG'\n  >\n): Promise<void> {\n  setNodeEnv(dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const projectConfig = getConfig(projectRoot);\n  const exp = await getPublicExpoManifestAsync(projectRoot, {\n    // Web doesn't require validation.\n    skipValidation: platforms.length === 1 && platforms[0] === 'web',\n  });\n\n  if (platforms.includes('web')) {\n    await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n  }\n\n  const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n\n  if (skipSSG && exp.web?.output !== 'server') {\n    throw new CommandError('--no-ssg can only be used with `web.output: server`');\n  }\n\n  const baseUrl = getBaseUrlFromExpoConfig(exp);\n\n  if (!bytecode && (platforms.includes('ios') || platforms.includes('android'))) {\n    Log.warn(\n      `Bytecode makes the app startup faster, disabling bytecode is highly discouraged and should only be used for debugging purposes.`\n    );\n  }\n\n  // Print out logs\n  if (baseUrl) {\n    Log.log();\n    Log.log(chalk.gray`Using (experimental) base path: ${baseUrl}`);\n    // Warn if not using an absolute path.\n    if (!baseUrl.startsWith('/')) {\n      Log.log(\n        chalk.yellow`  Base path does not start with a slash. Requests will not be absolute.`\n      );\n    }\n  }\n\n  const mode = dev ? 'development' : 'production';\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n  const outputPath = path.resolve(projectRoot, outputDir);\n\n  // Write the JS bundles to disk, and get the bundle file names (this could change with async chunk loading support).\n\n  const files: ExportAssetMap = new Map();\n\n  const devServerManager = await DevServerManager.startMetroAsync(projectRoot, {\n    minify,\n    mode,\n    port: 8081,\n    isExporting: true,\n    location: {},\n    resetDevServer: clear,\n    maxWorkers,\n  });\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const bundles: Partial<Record<Platform, BundleOutput>> = {};\n  const domComponentAssetsMetadata: Partial<Record<Platform, PlatformMetadata['assets']>> = {};\n\n  const spaPlatforms = useServerRendering\n    ? platforms.filter((platform) => platform !== 'web')\n    : platforms;\n\n  try {\n    // NOTE(kitten): The public folder is currently always copied, regardless of targetDomain\n    // split. Hence, there's another separate `copyPublicFolderAsync` call below for `web`\n    await copyPublicFolderAsync(publicPath, outputPath);\n\n    // Can be empty during web-only SSG.\n    if (spaPlatforms.length) {\n      await Promise.all(\n        spaPlatforms.map(async (platform) => {\n          // Assert early so the user doesn't have to wait until bundling is complete to find out that\n          // Hermes won't be available.\n          const isHermes = isEnableHermesManaged(exp, platform);\n          if (isHermes) {\n            await assertEngineMismatchAsync(projectRoot, exp, platform);\n          }\n\n          // Run metro bundler and create the JS bundles/source maps.\n          const bundle = await devServer.nativeExportBundleAsync(\n            {\n              platform,\n              splitChunks:\n                !env.EXPO_NO_BUNDLE_SPLITTING &&\n                ((devServer.isReactServerComponentsEnabled && !bytecode) || platform === 'web'),\n              mainModuleName: getEntryWithServerRoot(projectRoot, {\n                platform,\n                pkg: projectConfig.pkg,\n              }),\n              mode: dev ? 'development' : 'production',\n              engine: isHermes ? 'hermes' : undefined,\n              serializerIncludeMaps: sourceMaps,\n              bytecode: bytecode && isHermes,\n              reactCompiler: !!exp.experiments?.reactCompiler,\n            },\n            files\n          );\n\n          bundles[platform] = bundle;\n          domComponentAssetsMetadata[platform] = [];\n\n          getFilesFromSerialAssets(bundle.artifacts, {\n            includeSourceMaps: sourceMaps,\n            files,\n            isServerHosted: devServer.isReactServerComponentsEnabled,\n          });\n\n          // TODO: Remove duplicates...\n          const expoDomComponentReferences = bundle.artifacts\n            .map((artifact) =>\n              Array.isArray(artifact.metadata.expoDomComponentReferences)\n                ? artifact.metadata.expoDomComponentReferences\n                : []\n            )\n            .flat();\n          await Promise.all(\n            // TODO: Make a version of this which uses `this.metro.getBundler().buildGraphForEntries([])` to bundle all the DOM components at once.\n            expoDomComponentReferences.map(async (filePath) => {\n              const { bundle: platformDomComponentsBundle, htmlOutputName } =\n                await exportDomComponentAsync({\n                  filePath,\n                  projectRoot,\n                  dev,\n                  devServer,\n                  isHermes,\n                  includeSourceMaps: sourceMaps,\n                  exp,\n                  files,\n                });\n\n              // Merge the assets from the DOM component into the output assets.\n              // @ts-expect-error: mutate assets\n              bundle.assets.push(...platformDomComponentsBundle.assets);\n\n              const assetsMetadata = updateDomComponentAssetsForMD5Naming({\n                domComponentReference: filePath,\n                nativeBundle: bundle,\n                domComponentBundle: platformDomComponentsBundle,\n                files,\n                htmlOutputName,\n              });\n              domComponentAssetsMetadata[platform]?.push(...assetsMetadata);\n            })\n          );\n\n          if (platform === 'web') {\n            // TODO: Unify with exportStaticAsync\n            // TODO: Maybe move to the serializer.\n            let html = await serializeHtmlWithAssets({\n              isExporting: true,\n              resources: bundle.artifacts,\n              template: await createTemplateHtmlFromExpoConfigAsync(projectRoot, {\n                scripts: [],\n                cssLinks: [],\n                exp: projectConfig.exp,\n              }),\n              baseUrl,\n            });\n\n            // Add the favicon assets to the HTML.\n            const modifyHtml = await getVirtualFaviconAssetsAsync(projectRoot, {\n              outputDir,\n              baseUrl,\n              files,\n              exp: projectConfig.exp,\n            });\n            if (modifyHtml) {\n              html = modifyHtml(html);\n            }\n\n            // Generate SPA-styled HTML file.\n            // If web exists, then write the template HTML file.\n            files.set('index.html', {\n              contents: html,\n              targetDomain: devServer.isReactServerComponentsEnabled ? 'server' : 'client',\n            });\n          }\n        })\n      );\n\n      if (devServer.isReactServerComponentsEnabled) {\n        const isWeb = platforms.includes('web');\n        if (!(isWeb && useServerRendering)) {\n          await exportApiRoutesStandaloneAsync(devServer, {\n            files,\n            platform: 'web',\n            apiRoutesOnly: !isWeb,\n          });\n        }\n      }\n\n      // TODO: Use same asset system across platforms again.\n      const { assets, embeddedHashSet } = await exportAssetsAsync(projectRoot, {\n        files,\n        exp,\n        outputDir: outputPath,\n        bundles,\n        baseUrl,\n      });\n\n      if (dumpAssetmap) {\n        Log.log('Creating asset map');\n        files.set('assetmap.json', { contents: JSON.stringify(createAssetMap({ assets })) });\n      }\n\n      const targetDomain = devServer.isReactServerComponentsEnabled ? 'client/' : '';\n      const fileNames = Object.fromEntries(\n        Object.entries(bundles).map(([platform, bundle]) => [\n          platform,\n          bundle.artifacts\n            .filter((asset) => asset.type === 'js')\n            .map((asset) => targetDomain + asset.filename),\n        ])\n      );\n\n      // Generate a `metadata.json` for EAS Update.\n      const contents = createMetadataJson({\n        bundles,\n        fileNames,\n        embeddedHashSet,\n        domComponentAssetsMetadata,\n      });\n      files.set('metadata.json', { contents: JSON.stringify(contents) });\n    }\n\n    // Additional web-only steps...\n\n    if (platforms.includes('web') && useServerRendering) {\n      const exportServer = exp.web?.output === 'server';\n\n      if (exportServer) {\n        // TODO: Remove when this is abstracted into the files map\n        await copyPublicFolderAsync(publicPath, path.resolve(outputPath, 'client'));\n      }\n\n      if (skipSSG) {\n        Log.log('Skipping static site generation');\n        await exportApiRoutesStandaloneAsync(devServer, {\n          files,\n          platform: 'web',\n          apiRoutesOnly: true,\n        });\n\n        // Output a placeholder index.html if one doesn't exist in the public directory.\n        // This ensures native + API routes have some content at the root URL.\n        const placeholderIndex = path.resolve(outputPath, 'client/index.html');\n        if (!fs.existsSync(placeholderIndex)) {\n          files.set('index.html', {\n            contents: `<html><body></body></html>`,\n            targetDomain: 'client',\n          });\n        }\n      } else {\n        await exportFromServerAsync(projectRoot, devServer, {\n          mode,\n          files,\n          clear: !!clear,\n          outputDir: outputPath,\n          minify,\n          baseUrl,\n          includeSourceMaps: sourceMaps,\n          routerRoot: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n          reactCompiler: !!exp.experiments?.reactCompiler,\n          exportServer,\n          maxWorkers,\n          isExporting: true,\n          exp: projectConfig.exp,\n        });\n      }\n    }\n  } finally {\n    await devServerManager.stopAsync();\n  }\n\n  // Write all files at the end for unified logging.\n  await persistMetroFilesAsync(files, outputPath);\n}\n"],"names":["exportAppAsync","projectRoot","platforms","outputDir","clear","dev","dumpAssetmap","sourceMaps","minify","bytecode","maxWorkers","skipSSG","exp","setNodeEnv","require","load","projectConfig","getConfig","getPublicExpoManifestAsync","skipValidation","length","includes","WebSupportProjectPrerequisite","assertAsync","useServerRendering","web","output","CommandError","baseUrl","getBaseUrlFromExpoConfig","Log","warn","log","chalk","gray","startsWith","yellow","mode","publicPath","path","resolve","env","EXPO_PUBLIC_FOLDER","outputPath","files","Map","devServerManager","DevServerManager","startMetroAsync","port","isExporting","location","resetDevServer","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","bundles","domComponentAssetsMetadata","spaPlatforms","filter","platform","copyPublicFolderAsync","Promise","all","map","isHermes","isEnableHermesManaged","assertEngineMismatchAsync","bundle","nativeExportBundleAsync","splitChunks","EXPO_NO_BUNDLE_SPLITTING","isReactServerComponentsEnabled","mainModuleName","getEntryWithServerRoot","pkg","engine","undefined","serializerIncludeMaps","reactCompiler","experiments","getFilesFromSerialAssets","artifacts","includeSourceMaps","isServerHosted","expoDomComponentReferences","artifact","Array","isArray","metadata","flat","filePath","platformDomComponentsBundle","htmlOutputName","exportDomComponentAsync","assets","push","assetsMetadata","updateDomComponentAssetsForMD5Naming","domComponentReference","nativeBundle","domComponentBundle","html","serializeHtmlWithAssets","resources","template","createTemplateHtmlFromExpoConfigAsync","scripts","cssLinks","modifyHtml","getVirtualFaviconAssetsAsync","set","contents","targetDomain","isWeb","exportApiRoutesStandaloneAsync","apiRoutesOnly","embeddedHashSet","exportAssetsAsync","JSON","stringify","createAssetMap","fileNames","Object","fromEntries","entries","asset","type","filename","createMetadataJson","exportServer","placeholderIndex","fs","existsSync","exportFromServerAsync","routerRoot","getRouterDirectoryModuleIdWithManifest","stopAsync","persistMetroFilesAsync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportApp.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport type { Platform } from '@expo/config';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { type PlatformMetadata, createMetadataJson } from './createMetadataJson';\nimport { exportAssetsAsync } from './exportAssets';\nimport {\n  exportDomComponentAsync,\n  updateDomComponentAssetsForMD5Naming,\n} from './exportDomComponents';\nimport { assertEngineMismatchAsync, isEnableHermesManaged } from './exportHermes';\nimport { exportApiRoutesStandaloneAsync, exportFromServerAsync } from './exportStaticAsync';\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { getPublicExpoManifestAsync } from './getPublicExpoManifest';\nimport { copyPublicFolderAsync } from './publicFolder';\nimport { Options } from './resolveOptions';\nimport {\n  ExportAssetMap,\n  BundleOutput,\n  getFilesFromSerialAssets,\n  persistMetroFilesAsync,\n} from './saveAssets';\nimport { createAssetMap } from './writeContents';\nimport * as Log from '../log';\nimport { WebSupportProjectPrerequisite } from '../start/doctor/web/WebSupportProjectPrerequisite';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { getRouterDirectoryModuleIdWithManifest } from '../start/server/metro/router';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport { getEntryWithServerRoot } from '../start/server/middleware/ManifestMiddleware';\nimport { getBaseUrlFromExpoConfig } from '../start/server/middleware/metroOptions';\nimport { createTemplateHtmlFromExpoConfigAsync } from '../start/server/webTemplate';\nimport { env } from '../utils/env';\nimport { CommandError } from '../utils/errors';\nimport { setNodeEnv } from '../utils/nodeEnv';\n\nexport async function exportAppAsync(\n  projectRoot: string,\n  {\n    platforms,\n    outputDir,\n    clear,\n    dev,\n    dumpAssetmap,\n    sourceMaps,\n    minify,\n    bytecode,\n    maxWorkers,\n    skipSSG,\n  }: Pick<\n    Options,\n    | 'dumpAssetmap'\n    | 'sourceMaps'\n    | 'dev'\n    | 'clear'\n    | 'outputDir'\n    | 'platforms'\n    | 'minify'\n    | 'bytecode'\n    | 'maxWorkers'\n    | 'skipSSG'\n  >\n): Promise<void> {\n  setNodeEnv(dev ? 'development' : 'production');\n  require('@expo/env').load(projectRoot);\n\n  const projectConfig = getConfig(projectRoot);\n  const exp = await getPublicExpoManifestAsync(projectRoot, {\n    // Web doesn't require validation.\n    skipValidation: platforms.length === 1 && platforms[0] === 'web',\n  });\n\n  if (platforms.includes('web')) {\n    await new WebSupportProjectPrerequisite(projectRoot).assertAsync();\n  }\n\n  const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n\n  if (skipSSG && exp.web?.output !== 'server') {\n    throw new CommandError('--no-ssg can only be used with `web.output: server`');\n  }\n\n  const baseUrl = getBaseUrlFromExpoConfig(exp);\n\n  if (!bytecode && (platforms.includes('ios') || platforms.includes('android'))) {\n    Log.warn(\n      `Bytecode makes the app startup faster, disabling bytecode is highly discouraged and should only be used for debugging purposes.`\n    );\n  }\n\n  // Print out logs\n  if (baseUrl) {\n    Log.log();\n    Log.log(chalk.gray`Using (experimental) base path: ${baseUrl}`);\n    // Warn if not using an absolute path.\n    if (!baseUrl.startsWith('/')) {\n      Log.log(\n        chalk.yellow`  Base path does not start with a slash. Requests will not be absolute.`\n      );\n    }\n  }\n\n  const mode = dev ? 'development' : 'production';\n  const publicPath = path.resolve(projectRoot, env.EXPO_PUBLIC_FOLDER);\n  const outputPath = path.resolve(projectRoot, outputDir);\n\n  // Write the JS bundles to disk, and get the bundle file names (this could change with async chunk loading support).\n\n  const files: ExportAssetMap = new Map();\n\n  const devServerManager = await DevServerManager.startMetroAsync(projectRoot, {\n    minify,\n    mode,\n    port: 8081,\n    isExporting: true,\n    location: {},\n    resetDevServer: clear,\n    maxWorkers,\n  });\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const bundles: Partial<Record<Platform, BundleOutput>> = {};\n  const domComponentAssetsMetadata: Partial<Record<Platform, PlatformMetadata['assets']>> = {};\n\n  const spaPlatforms = useServerRendering\n    ? platforms.filter((platform) => platform !== 'web')\n    : platforms;\n\n  try {\n    // NOTE(kitten): The public folder is currently always copied, regardless of targetDomain\n    // split. Hence, there's another separate `copyPublicFolderAsync` call below for `web`\n    await copyPublicFolderAsync(publicPath, outputPath);\n\n    let templateHtml: string | undefined;\n    // Can be empty during web-only SSG.\n    if (spaPlatforms.length) {\n      await Promise.all(\n        spaPlatforms.map(async (platform) => {\n          // Assert early so the user doesn't have to wait until bundling is complete to find out that\n          // Hermes won't be available.\n          const isHermes = isEnableHermesManaged(exp, platform);\n          if (isHermes) {\n            await assertEngineMismatchAsync(projectRoot, exp, platform);\n          }\n\n          // Run metro bundler and create the JS bundles/source maps.\n          const bundle = await devServer.nativeExportBundleAsync(\n            {\n              platform,\n              splitChunks:\n                !env.EXPO_NO_BUNDLE_SPLITTING &&\n                ((devServer.isReactServerComponentsEnabled && !bytecode) || platform === 'web'),\n              mainModuleName: getEntryWithServerRoot(projectRoot, {\n                platform,\n                pkg: projectConfig.pkg,\n              }),\n              mode: dev ? 'development' : 'production',\n              engine: isHermes ? 'hermes' : undefined,\n              serializerIncludeMaps: sourceMaps,\n              bytecode: bytecode && isHermes,\n              reactCompiler: !!exp.experiments?.reactCompiler,\n            },\n            files\n          );\n\n          bundles[platform] = bundle;\n          domComponentAssetsMetadata[platform] = [];\n\n          getFilesFromSerialAssets(bundle.artifacts, {\n            includeSourceMaps: sourceMaps,\n            files,\n            isServerHosted: devServer.isReactServerComponentsEnabled,\n          });\n\n          // TODO: Remove duplicates...\n          const expoDomComponentReferences = bundle.artifacts\n            .map((artifact) =>\n              Array.isArray(artifact.metadata.expoDomComponentReferences)\n                ? artifact.metadata.expoDomComponentReferences\n                : []\n            )\n            .flat();\n          await Promise.all(\n            // TODO: Make a version of this which uses `this.metro.getBundler().buildGraphForEntries([])` to bundle all the DOM components at once.\n            expoDomComponentReferences.map(async (filePath) => {\n              const { bundle: platformDomComponentsBundle, htmlOutputName } =\n                await exportDomComponentAsync({\n                  filePath,\n                  projectRoot,\n                  dev,\n                  devServer,\n                  isHermes,\n                  includeSourceMaps: sourceMaps,\n                  exp,\n                  files,\n                });\n\n              // Merge the assets from the DOM component into the output assets.\n              // @ts-expect-error: mutate assets\n              bundle.assets.push(...platformDomComponentsBundle.assets);\n\n              const assetsMetadata = updateDomComponentAssetsForMD5Naming({\n                domComponentReference: filePath,\n                nativeBundle: bundle,\n                domComponentBundle: platformDomComponentsBundle,\n                files,\n                htmlOutputName,\n              });\n              domComponentAssetsMetadata[platform]?.push(...assetsMetadata);\n            })\n          );\n\n          if (platform === 'web') {\n            // TODO: Unify with exportStaticAsync\n            // TODO: Maybe move to the serializer.\n            let html = await serializeHtmlWithAssets({\n              isExporting: true,\n              resources: bundle.artifacts,\n              template: await createTemplateHtmlFromExpoConfigAsync(projectRoot, {\n                scripts: [],\n                cssLinks: [],\n                exp: projectConfig.exp,\n              }),\n              baseUrl,\n            });\n\n            // Add the favicon assets to the HTML.\n            const modifyHtml = await getVirtualFaviconAssetsAsync(projectRoot, {\n              outputDir,\n              baseUrl,\n              files,\n              exp: projectConfig.exp,\n            });\n            if (modifyHtml) {\n              html = modifyHtml(html);\n            }\n\n            // HACK: This is used for adding SSR shims in React Server Components.\n            templateHtml = html;\n\n            // Generate SPA-styled HTML file.\n            // If web exists, then write the template HTML file.\n            files.set('index.html', {\n              contents: html,\n              targetDomain: devServer.isReactServerComponentsEnabled ? 'server' : 'client',\n            });\n          }\n        })\n      );\n\n      if (devServer.isReactServerComponentsEnabled) {\n        const isWeb = platforms.includes('web');\n        if (!(isWeb && useServerRendering)) {\n          await exportApiRoutesStandaloneAsync(devServer, {\n            files,\n            platform: 'web',\n            apiRoutesOnly: !isWeb,\n            templateHtml,\n          });\n        }\n      }\n\n      // TODO: Use same asset system across platforms again.\n      const { assets, embeddedHashSet } = await exportAssetsAsync(projectRoot, {\n        files,\n        exp,\n        outputDir: outputPath,\n        bundles,\n        baseUrl,\n      });\n\n      if (dumpAssetmap) {\n        Log.log('Creating asset map');\n        files.set('assetmap.json', { contents: JSON.stringify(createAssetMap({ assets })) });\n      }\n\n      const targetDomain = devServer.isReactServerComponentsEnabled ? 'client/' : '';\n      const fileNames = Object.fromEntries(\n        Object.entries(bundles).map(([platform, bundle]) => [\n          platform,\n          bundle.artifacts\n            .filter((asset) => asset.type === 'js')\n            .map((asset) => targetDomain + asset.filename),\n        ])\n      );\n\n      // Generate a `metadata.json` for EAS Update.\n      const contents = createMetadataJson({\n        bundles,\n        fileNames,\n        embeddedHashSet,\n        domComponentAssetsMetadata,\n      });\n      files.set('metadata.json', { contents: JSON.stringify(contents) });\n    }\n\n    // Additional web-only steps...\n\n    if (platforms.includes('web') && useServerRendering) {\n      const exportServer = exp.web?.output === 'server';\n\n      if (exportServer) {\n        // TODO: Remove when this is abstracted into the files map\n        await copyPublicFolderAsync(publicPath, path.resolve(outputPath, 'client'));\n      }\n\n      if (skipSSG) {\n        Log.log('Skipping static site generation');\n        await exportApiRoutesStandaloneAsync(devServer, {\n          files,\n          platform: 'web',\n          apiRoutesOnly: true,\n        });\n\n        // Output a placeholder index.html if one doesn't exist in the public directory.\n        // This ensures native + API routes have some content at the root URL.\n        const placeholderIndex = path.resolve(outputPath, 'client/index.html');\n        if (!fs.existsSync(placeholderIndex)) {\n          files.set('index.html', {\n            contents: `<html><body></body></html>`,\n            targetDomain: 'client',\n          });\n        }\n      } else {\n        await exportFromServerAsync(projectRoot, devServer, {\n          mode,\n          files,\n          clear: !!clear,\n          outputDir: outputPath,\n          minify,\n          baseUrl,\n          includeSourceMaps: sourceMaps,\n          routerRoot: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n          reactCompiler: !!exp.experiments?.reactCompiler,\n          exportServer,\n          maxWorkers,\n          isExporting: true,\n          exp: projectConfig.exp,\n        });\n      }\n    }\n  } finally {\n    await devServerManager.stopAsync();\n  }\n\n  // Write all files at the end for unified logging.\n  await persistMetroFilesAsync(files, outputPath);\n}\n"],"names":["exportAppAsync","projectRoot","platforms","outputDir","clear","dev","dumpAssetmap","sourceMaps","minify","bytecode","maxWorkers","skipSSG","exp","setNodeEnv","require","load","projectConfig","getConfig","getPublicExpoManifestAsync","skipValidation","length","includes","WebSupportProjectPrerequisite","assertAsync","useServerRendering","web","output","CommandError","baseUrl","getBaseUrlFromExpoConfig","Log","warn","log","chalk","gray","startsWith","yellow","mode","publicPath","path","resolve","env","EXPO_PUBLIC_FOLDER","outputPath","files","Map","devServerManager","DevServerManager","startMetroAsync","port","isExporting","location","resetDevServer","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","bundles","domComponentAssetsMetadata","spaPlatforms","filter","platform","copyPublicFolderAsync","templateHtml","Promise","all","map","isHermes","isEnableHermesManaged","assertEngineMismatchAsync","bundle","nativeExportBundleAsync","splitChunks","EXPO_NO_BUNDLE_SPLITTING","isReactServerComponentsEnabled","mainModuleName","getEntryWithServerRoot","pkg","engine","undefined","serializerIncludeMaps","reactCompiler","experiments","getFilesFromSerialAssets","artifacts","includeSourceMaps","isServerHosted","expoDomComponentReferences","artifact","Array","isArray","metadata","flat","filePath","platformDomComponentsBundle","htmlOutputName","exportDomComponentAsync","assets","push","assetsMetadata","updateDomComponentAssetsForMD5Naming","domComponentReference","nativeBundle","domComponentBundle","html","serializeHtmlWithAssets","resources","template","createTemplateHtmlFromExpoConfigAsync","scripts","cssLinks","modifyHtml","getVirtualFaviconAssetsAsync","set","contents","targetDomain","isWeb","exportApiRoutesStandaloneAsync","apiRoutesOnly","embeddedHashSet","exportAssetsAsync","JSON","stringify","createAssetMap","fileNames","Object","fromEntries","entries","asset","type","filename","createMetadataJson","exportServer","placeholderIndex","fs","existsSync","exportFromServerAsync","routerRoot","getRouterDirectoryModuleIdWithManifest","stopAsync","persistMetroFilesAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
index a3f4d84..8a31163 100644
--- a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
+++ b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js
@@ -331,8 +331,8 @@ function getPathVariations(routePath) {
     generateVariations(segments);
     return Array.from(variations);
 }
-async function exportApiRoutesStandaloneAsync(devServer, { files =new Map() , platform , apiRoutesOnly  }) {
-    const { serverManifest  } = await devServer.getServerManifestAsync();
+async function exportApiRoutesStandaloneAsync(devServer, { files =new Map() , platform , apiRoutesOnly , templateHtml  }) {
+    const { serverManifest , htmlManifest  } = await devServer.getServerManifestAsync();
     const apiRoutes = await exportApiRoutesAsync({
         server: devServer,
         manifest: serverManifest,
@@ -345,6 +345,22 @@ async function exportApiRoutesStandaloneAsync(devServer, { files =new Map() , pl
     for (const [route, contents] of apiRoutes){
         files.set(route, contents);
     }
+    if (templateHtml && devServer.isReactServerComponentsEnabled) {
+        // TODO: Export an HTML entry for each file. This is a temporary solution until we have SSR/SSG for RSC.
+        await getFilesToExportFromServerAsync(devServer.projectRoot, {
+            manifest: htmlManifest,
+            exportServer: true,
+            files,
+            renderAsync: async ({ pathname , filePath  })=>{
+                files.set(filePath, {
+                    contents: templateHtml,
+                    routeId: pathname,
+                    targetDomain: "server"
+                });
+                return templateHtml;
+            }
+        });
+    }
     return files;
 }
 async function exportApiRoutesAsync({ includeSourceMaps , server , platform , apiRoutesOnly , ...props }) {
diff --git a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
index a5af145..d821eac 100644
--- a/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
+++ b/node_modules/@expo/cli/build/src/export/exportStaticAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport { RouteNode } from 'expo-router/build/Route';\nimport { stripGroupSegmentsFromPath } from 'expo-router/build/matchers';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { persistMetroAssetsAsync } from './persistMetroAssets';\nimport { ExportAssetMap, getFilesFromSerialAssets } from './saveAssets';\nimport { Log } from '../log';\nimport {\n  ExpoRouterRuntimeManifest,\n  MetroBundlerDevServer,\n} from '../start/server/metro/MetroBundlerDevServer';\nimport { ExpoRouterServerManifestV1 } from '../start/server/metro/fetchRouterManifest';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport { getApiRoutesForDirectory } from '../start/server/metro/router';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  mode: 'production' | 'development';\n  files?: ExportAssetMap;\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  baseUrl: string;\n  includeSourceMaps: boolean;\n  entryPoint?: string;\n  clear: boolean;\n  routerRoot: string;\n  reactCompiler: boolean;\n  maxWorkers?: number;\n  isExporting: boolean;\n  exp?: ExpoConfig;\n};\n\ntype HtmlRequestLocation = {\n  /** The output file path name to use relative to the static folder. */\n  filePath: string;\n  /** The pathname to make requests to in order to fetch the HTML. */\n  pathname: string;\n  /** The runtime route node object, used to associate async modules with the static HTML. */\n  route: RouteNode;\n};\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    exportServer,\n    // name : contents\n    files = new Map(),\n  }: {\n    manifest: ExpoRouterRuntimeManifest;\n    renderAsync: (requestLocation: HtmlRequestLocation) => Promise<string>;\n    exportServer?: boolean;\n    files?: ExportAssetMap;\n  }\n): Promise<ExportAssetMap> {\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations: !exportServer }).map(\n      async ({ route, filePath, pathname }) => {\n        try {\n          const targetDomain = exportServer ? 'server' : 'client';\n          files.set(filePath, { contents: '', targetDomain });\n          const data = await renderAsync({ route, filePath, pathname });\n          files.set(filePath, {\n            contents: data,\n            routeId: pathname,\n            targetDomain,\n          });\n        } catch (e: any) {\n          await logMetroErrorAsync({ error: e, projectRoot });\n          throw new Error('Failed to statically export route: ' + pathname);\n        }\n      }\n    )\n  );\n\n  return files;\n}\n\nfunction modifyRouteNodeInRuntimeManifest(\n  manifest: ExpoRouterRuntimeManifest,\n  callback: (route: RouteNode) => any\n) {\n  const iterateScreens = (screens: ExpoRouterRuntimeManifest['screens']) => {\n    Object.values(screens).map((value) => {\n      if (typeof value !== 'string') {\n        if (value._route) callback(value._route);\n        iterateScreens(value.screens);\n      }\n    });\n  };\n\n  iterateScreens(manifest.screens);\n}\n\n// TODO: Do this earlier in the process.\nfunction makeRuntimeEntryPointsAbsolute(manifest: ExpoRouterRuntimeManifest, appDir: string) {\n  modifyRouteNodeInRuntimeManifest(manifest, (route) => {\n    if (Array.isArray(route.entryPoints)) {\n      route.entryPoints = route.entryPoints.map((entryPoint) => {\n        if (entryPoint.startsWith('.')) {\n          return path.resolve(appDir, entryPoint);\n        } else if (!path.isAbsolute(entryPoint)) {\n          return resolveFrom(appDir, entryPoint);\n        }\n        return entryPoint;\n      });\n    }\n  });\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServer: MetroBundlerDevServer,\n  {\n    outputDir,\n    baseUrl,\n    exportServer,\n    includeSourceMaps,\n    routerRoot,\n    files = new Map(),\n    exp,\n  }: Options\n): Promise<ExportAssetMap> {\n  Log.log(\n    `Static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  const platform = 'web';\n  const isExporting = true;\n  const appDir = path.join(projectRoot, routerRoot);\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, {\n    outputDir,\n    baseUrl,\n    files,\n    exp,\n  });\n\n  const [resources, { manifest, serverManifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({\n      includeSourceMaps,\n    }),\n    devServer.getStaticRenderFunctionAsync(),\n  ]);\n\n  makeRuntimeEntryPointsAbsolute(manifest, appDir);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  await getFilesToExportFromServerAsync(projectRoot, {\n    files,\n    manifest,\n    exportServer,\n    async renderAsync({ pathname, route }) {\n      const template = await renderAsync(pathname);\n      let html = await serializeHtmlWithAssets({\n        isExporting,\n        resources: resources.artifacts,\n        template,\n        baseUrl,\n        route,\n        hydrate: true,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  getFilesFromSerialAssets(resources.artifacts, {\n    platform,\n    includeSourceMaps,\n    files,\n    isServerHosted: true,\n  });\n\n  if (resources.assets) {\n    // TODO: Collect files without writing to disk.\n    // NOTE(kitten): Re. above, this is now using `files` except for iOS catalog output, which isn't used here\n    await persistMetroAssetsAsync(projectRoot, resources.assets, {\n      files,\n      platform,\n      outputDirectory: outputDir,\n      baseUrl,\n    });\n  }\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({\n      platform: 'web',\n      server: devServer,\n      manifest: serverManifest,\n      // NOTE(kitten): For now, we always output source maps for API route exports\n      includeSourceMaps: true,\n    });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  return files;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: ExpoRouterRuntimeManifest;\n  includeGroupVariations?: boolean;\n}): HtmlRequestLocation[] {\n  const htmlFiles = new Set<Omit<HtmlRequestLocation, 'pathname'>>();\n\n  function traverseScreens(\n    screens: ExpoRouterRuntimeManifest['screens'],\n    route: RouteNode | null,\n    baseUrl = ''\n  ) {\n    for (const [key, value] of Object.entries(screens)) {\n      let leaf: string | null = null;\n      if (typeof value === 'string') {\n        leaf = value;\n      } else if (Object.keys(value.screens).length === 0) {\n        // Ensure the trailing index is accounted for.\n        if (key === value.path + '/index') {\n          leaf = key;\n        } else {\n          leaf = value.path;\n        }\n\n        route = value._route ?? null;\n      }\n\n      if (leaf != null) {\n        let filePath = baseUrl + leaf;\n\n        if (leaf === '') {\n          filePath =\n            baseUrl === ''\n              ? 'index'\n              : baseUrl.endsWith('/')\n                ? baseUrl + 'index'\n                : baseUrl.slice(0, -1);\n        } else if (\n          // If the path is a collection of group segments leading to an index route, append `/index`.\n          stripGroupSegmentsFromPath(filePath) === ''\n        ) {\n          filePath += '/index';\n        }\n\n        // This should never happen, the type of `string | object` originally comes from React Navigation.\n        if (!route) {\n          throw new Error(\n            `Internal error: Route not found for \"${filePath}\" while collecting static export paths.`\n          );\n        }\n\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath, route);\n        } else {\n          htmlFiles.add({\n            filePath,\n            route,\n          });\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = baseUrl + value.path + '/';\n        traverseScreens(value.screens, value._route ?? null, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string, route: RouteNode) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add({ filePath: variation, route });\n    }\n  }\n\n  traverseScreens(manifest.screens, null);\n\n  return uniqueBy(Array.from(htmlFiles), (value) => value.filePath).map((value) => {\n    const parts = value.filePath.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    const filePathLocation = partsWithGroups.join('/');\n    const filePath = filePathLocation + '.html';\n    return {\n      ...value,\n      filePath,\n      pathname: filePathLocation.replace(/(\\/?index)?$/, ''),\n    };\n  });\n}\n\nfunction uniqueBy<T>(array: T[], key: (value: T) => string): T[] {\n  const seen = new Set<string>();\n  const result: T[] = [];\n  for (const value of array) {\n    const id = key(value);\n    if (!seen.has(id)) {\n      seen.add(id);\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nexport async function exportApiRoutesStandaloneAsync(\n  devServer: MetroBundlerDevServer,\n  {\n    files = new Map(),\n    platform,\n    apiRoutesOnly,\n  }: {\n    files?: ExportAssetMap;\n    platform: string;\n    apiRoutesOnly: boolean;\n  }\n) {\n  const { serverManifest } = await devServer.getServerManifestAsync();\n\n  const apiRoutes = await exportApiRoutesAsync({\n    server: devServer,\n    manifest: serverManifest,\n    // NOTE(kitten): For now, we always output source maps for API route exports\n    includeSourceMaps: true,\n    platform,\n    apiRoutesOnly,\n  });\n\n  // Add the api routes to the files to export.\n  for (const [route, contents] of apiRoutes) {\n    files.set(route, contents);\n  }\n\n  return files;\n}\n\nasync function exportApiRoutesAsync({\n  includeSourceMaps,\n  server,\n  platform,\n  apiRoutesOnly,\n  ...props\n}: Pick<Options, 'includeSourceMaps'> & {\n  server: MetroBundlerDevServer;\n  manifest: ExpoRouterServerManifestV1;\n  platform: string;\n  apiRoutesOnly?: boolean;\n}): Promise<ExportAssetMap> {\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    outputDir: '_expo/functions',\n    prerenderManifest: props.manifest,\n    includeSourceMaps,\n    platform,\n  });\n\n  // HACK: Clear out the HTML and 404 routes if we're only exporting API routes. This is used for native apps that are using API routes but haven't implemented web support yet.\n  if (apiRoutesOnly) {\n    manifest.htmlRoutes = [];\n    manifest.notFoundRoutes = [];\n  }\n\n  files.set('_expo/routes.json', {\n    contents: JSON.stringify(manifest, null, 2),\n    targetDomain: 'server',\n  });\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["getFilesToExportFromServerAsync","exportFromServerAsync","getHtmlFiles","getPathVariations","exportApiRoutesStandaloneAsync","debug","require","matchGroupName","name","match","projectRoot","manifest","renderAsync","exportServer","files","Map","Promise","all","includeGroupVariations","map","route","filePath","pathname","targetDomain","set","contents","data","routeId","e","logMetroErrorAsync","error","Error","modifyRouteNodeInRuntimeManifest","callback","iterateScreens","screens","Object","values","value","_route","makeRuntimeEntryPointsAbsolute","appDir","Array","isArray","entryPoints","entryPoint","startsWith","path","resolve","isAbsolute","resolveFrom","devServer","outputDir","baseUrl","includeSourceMaps","routerRoot","exp","Log","log","learnMore","platform","isExporting","join","injectFaviconTag","getVirtualFaviconAssetsAsync","resources","serverManifest","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","serializeHtmlWithAssets","artifacts","hydrate","getFilesFromSerialAssets","isServerHosted","assets","persistMetroAssetsAsync","outputDirectory","apiRoutes","exportApiRoutesAsync","server","warnPossibleInvalidExportType","htmlFiles","Set","traverseScreens","key","entries","leaf","keys","length","endsWith","slice","stripGroupSegmentsFromPath","addOptionalGroups","add","newPath","variations","variation","uniqueBy","from","parts","split","partsWithGroups","part","filePathLocation","replace","array","seen","result","id","has","push","routePath","segments","generateVariations","current","head","rest","groups","group","trim","apiRoutesOnly","getServerManifestAsync","props","exportExpoRouterApiRoutesAsync","prerenderManifest","htmlRoutes","notFoundRoutes","JSON","stringify","getApiRoutesForDirectory","warn","chalk","yellow","v","relative"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport { RouteNode } from 'expo-router/build/Route';\nimport { stripGroupSegmentsFromPath } from 'expo-router/build/matchers';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { persistMetroAssetsAsync } from './persistMetroAssets';\nimport { ExportAssetMap, getFilesFromSerialAssets } from './saveAssets';\nimport { Log } from '../log';\nimport {\n  ExpoRouterRuntimeManifest,\n  MetroBundlerDevServer,\n} from '../start/server/metro/MetroBundlerDevServer';\nimport { ExpoRouterServerManifestV1 } from '../start/server/metro/fetchRouterManifest';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport { getApiRoutesForDirectory } from '../start/server/metro/router';\nimport { serializeHtmlWithAssets } from '../start/server/metro/serializeHtml';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = {\n  mode: 'production' | 'development';\n  files?: ExportAssetMap;\n  outputDir: string;\n  minify: boolean;\n  exportServer: boolean;\n  baseUrl: string;\n  includeSourceMaps: boolean;\n  entryPoint?: string;\n  clear: boolean;\n  routerRoot: string;\n  reactCompiler: boolean;\n  maxWorkers?: number;\n  isExporting: boolean;\n  exp?: ExpoConfig;\n};\n\ntype HtmlRequestLocation = {\n  /** The output file path name to use relative to the static folder. */\n  filePath: string;\n  /** The pathname to make requests to in order to fetch the HTML. */\n  pathname: string;\n  /** The runtime route node object, used to associate async modules with the static HTML. */\n  route: RouteNode;\n};\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n    // Servers can handle group routes automatically and therefore\n    // don't require the build-time generation of every possible group\n    // variation.\n    exportServer,\n    // name : contents\n    files = new Map(),\n  }: {\n    manifest: ExpoRouterRuntimeManifest;\n    renderAsync: (requestLocation: HtmlRequestLocation) => Promise<string>;\n    exportServer?: boolean;\n    files?: ExportAssetMap;\n  }\n): Promise<ExportAssetMap> {\n  await Promise.all(\n    getHtmlFiles({ manifest, includeGroupVariations: !exportServer }).map(\n      async ({ route, filePath, pathname }) => {\n        try {\n          const targetDomain = exportServer ? 'server' : 'client';\n          files.set(filePath, { contents: '', targetDomain });\n          const data = await renderAsync({ route, filePath, pathname });\n          files.set(filePath, {\n            contents: data,\n            routeId: pathname,\n            targetDomain,\n          });\n        } catch (e: any) {\n          await logMetroErrorAsync({ error: e, projectRoot });\n          throw new Error('Failed to statically export route: ' + pathname);\n        }\n      }\n    )\n  );\n\n  return files;\n}\n\nfunction modifyRouteNodeInRuntimeManifest(\n  manifest: ExpoRouterRuntimeManifest,\n  callback: (route: RouteNode) => any\n) {\n  const iterateScreens = (screens: ExpoRouterRuntimeManifest['screens']) => {\n    Object.values(screens).map((value) => {\n      if (typeof value !== 'string') {\n        if (value._route) callback(value._route);\n        iterateScreens(value.screens);\n      }\n    });\n  };\n\n  iterateScreens(manifest.screens);\n}\n\n// TODO: Do this earlier in the process.\nfunction makeRuntimeEntryPointsAbsolute(manifest: ExpoRouterRuntimeManifest, appDir: string) {\n  modifyRouteNodeInRuntimeManifest(manifest, (route) => {\n    if (Array.isArray(route.entryPoints)) {\n      route.entryPoints = route.entryPoints.map((entryPoint) => {\n        if (entryPoint.startsWith('.')) {\n          return path.resolve(appDir, entryPoint);\n        } else if (!path.isAbsolute(entryPoint)) {\n          return resolveFrom(appDir, entryPoint);\n        }\n        return entryPoint;\n      });\n    }\n  });\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServer: MetroBundlerDevServer,\n  {\n    outputDir,\n    baseUrl,\n    exportServer,\n    includeSourceMaps,\n    routerRoot,\n    files = new Map(),\n    exp,\n  }: Options\n): Promise<ExportAssetMap> {\n  Log.log(\n    `Static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  const platform = 'web';\n  const isExporting = true;\n  const appDir = path.join(projectRoot, routerRoot);\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, {\n    outputDir,\n    baseUrl,\n    files,\n    exp,\n  });\n\n  const [resources, { manifest, serverManifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({\n      includeSourceMaps,\n    }),\n    devServer.getStaticRenderFunctionAsync(),\n  ]);\n\n  makeRuntimeEntryPointsAbsolute(manifest, appDir);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  await getFilesToExportFromServerAsync(projectRoot, {\n    files,\n    manifest,\n    exportServer,\n    async renderAsync({ pathname, route }) {\n      const template = await renderAsync(pathname);\n      let html = await serializeHtmlWithAssets({\n        isExporting,\n        resources: resources.artifacts,\n        template,\n        baseUrl,\n        route,\n        hydrate: true,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  getFilesFromSerialAssets(resources.artifacts, {\n    platform,\n    includeSourceMaps,\n    files,\n    isServerHosted: true,\n  });\n\n  if (resources.assets) {\n    // TODO: Collect files without writing to disk.\n    // NOTE(kitten): Re. above, this is now using `files` except for iOS catalog output, which isn't used here\n    await persistMetroAssetsAsync(projectRoot, resources.assets, {\n      files,\n      platform,\n      outputDirectory: outputDir,\n      baseUrl,\n    });\n  }\n\n  if (exportServer) {\n    const apiRoutes = await exportApiRoutesAsync({\n      platform: 'web',\n      server: devServer,\n      manifest: serverManifest,\n      // NOTE(kitten): For now, we always output source maps for API route exports\n      includeSourceMaps: true,\n    });\n\n    // Add the api routes to the files to export.\n    for (const [route, contents] of apiRoutes) {\n      files.set(route, contents);\n    }\n  } else {\n    warnPossibleInvalidExportType(appDir);\n  }\n\n  return files;\n}\n\nexport function getHtmlFiles({\n  manifest,\n  includeGroupVariations,\n}: {\n  manifest: ExpoRouterRuntimeManifest;\n  includeGroupVariations?: boolean;\n}): HtmlRequestLocation[] {\n  const htmlFiles = new Set<Omit<HtmlRequestLocation, 'pathname'>>();\n\n  function traverseScreens(\n    screens: ExpoRouterRuntimeManifest['screens'],\n    route: RouteNode | null,\n    baseUrl = ''\n  ) {\n    for (const [key, value] of Object.entries(screens)) {\n      let leaf: string | null = null;\n      if (typeof value === 'string') {\n        leaf = value;\n      } else if (Object.keys(value.screens).length === 0) {\n        // Ensure the trailing index is accounted for.\n        if (key === value.path + '/index') {\n          leaf = key;\n        } else {\n          leaf = value.path;\n        }\n\n        route = value._route ?? null;\n      }\n\n      if (leaf != null) {\n        let filePath = baseUrl + leaf;\n\n        if (leaf === '') {\n          filePath =\n            baseUrl === ''\n              ? 'index'\n              : baseUrl.endsWith('/')\n                ? baseUrl + 'index'\n                : baseUrl.slice(0, -1);\n        } else if (\n          // If the path is a collection of group segments leading to an index route, append `/index`.\n          stripGroupSegmentsFromPath(filePath) === ''\n        ) {\n          filePath += '/index';\n        }\n\n        // This should never happen, the type of `string | object` originally comes from React Navigation.\n        if (!route) {\n          throw new Error(\n            `Internal error: Route not found for \"${filePath}\" while collecting static export paths.`\n          );\n        }\n\n        if (includeGroupVariations) {\n          // TODO: Dedupe requests for alias routes.\n          addOptionalGroups(filePath, route);\n        } else {\n          htmlFiles.add({\n            filePath,\n            route,\n          });\n        }\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = baseUrl + value.path + '/';\n        traverseScreens(value.screens, value._route ?? null, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string, route: RouteNode) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add({ filePath: variation, route });\n    }\n  }\n\n  traverseScreens(manifest.screens, null);\n\n  return uniqueBy(Array.from(htmlFiles), (value) => value.filePath).map((value) => {\n    const parts = value.filePath.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part === '*not-found') {\n        return `+not-found`;\n      } else if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    const filePathLocation = partsWithGroups.join('/');\n    const filePath = filePathLocation + '.html';\n    return {\n      ...value,\n      filePath,\n      pathname: filePathLocation.replace(/(\\/?index)?$/, ''),\n    };\n  });\n}\n\nfunction uniqueBy<T>(array: T[], key: (value: T) => string): T[] {\n  const seen = new Set<string>();\n  const result: T[] = [];\n  for (const value of array) {\n    const id = key(value);\n    if (!seen.has(id)) {\n      seen.add(id);\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>();\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], current = ''): void {\n    if (segments.length === 0) {\n      if (current) variations.add(current);\n      return;\n    }\n\n    const [head, ...rest] = segments;\n\n    if (matchGroupName(head)) {\n      const groups = head.slice(1, -1).split(',');\n\n      if (groups.length > 1) {\n        for (const group of groups) {\n          // If there are multiple groups, recurse on each group.\n          generateVariations([`(${group.trim()})`, ...rest], current);\n        }\n        return;\n      } else {\n        // Start a fork where this group is included\n        generateVariations(rest, current ? `${current}/(${groups[0]})` : `(${groups[0]})`);\n        // This code will continue and add paths without this group included`\n      }\n    } else if (current) {\n      current = `${current}/${head}`;\n    } else {\n      current = head;\n    }\n\n    generateVariations(rest, current);\n  }\n\n  generateVariations(segments);\n\n  return Array.from(variations);\n}\n\nexport async function exportApiRoutesStandaloneAsync(\n  devServer: MetroBundlerDevServer,\n  {\n    files = new Map(),\n    platform,\n    apiRoutesOnly,\n    templateHtml,\n  }: {\n    files?: ExportAssetMap;\n    platform: string;\n    apiRoutesOnly: boolean;\n    templateHtml?: string;\n  }\n) {\n  const { serverManifest, htmlManifest } = await devServer.getServerManifestAsync();\n\n  const apiRoutes = await exportApiRoutesAsync({\n    server: devServer,\n    manifest: serverManifest,\n    // NOTE(kitten): For now, we always output source maps for API route exports\n    includeSourceMaps: true,\n    platform,\n    apiRoutesOnly,\n  });\n\n  // Add the api routes to the files to export.\n  for (const [route, contents] of apiRoutes) {\n    files.set(route, contents);\n  }\n\n  if (templateHtml && devServer.isReactServerComponentsEnabled) {\n    // TODO: Export an HTML entry for each file. This is a temporary solution until we have SSR/SSG for RSC.\n    await getFilesToExportFromServerAsync(devServer.projectRoot, {\n      manifest: htmlManifest,\n      exportServer: true,\n      files,\n      renderAsync: async ({ pathname, filePath }) => {\n        files.set(filePath, {\n          contents: templateHtml!,\n          routeId: pathname,\n          targetDomain: 'server',\n        });\n        return templateHtml!;\n      },\n    });\n  }\n\n  return files;\n}\n\nasync function exportApiRoutesAsync({\n  includeSourceMaps,\n  server,\n  platform,\n  apiRoutesOnly,\n  ...props\n}: Pick<Options, 'includeSourceMaps'> & {\n  server: MetroBundlerDevServer;\n  manifest: ExpoRouterServerManifestV1;\n  platform: string;\n  apiRoutesOnly?: boolean;\n}): Promise<ExportAssetMap> {\n  const { manifest, files } = await server.exportExpoRouterApiRoutesAsync({\n    outputDir: '_expo/functions',\n    prerenderManifest: props.manifest,\n    includeSourceMaps,\n    platform,\n  });\n\n  // HACK: Clear out the HTML and 404 routes if we're only exporting API routes. This is used for native apps that are using API routes but haven't implemented web support yet.\n  if (apiRoutesOnly) {\n    manifest.htmlRoutes = [];\n    manifest.notFoundRoutes = [];\n  }\n\n  files.set('_expo/routes.json', {\n    contents: JSON.stringify(manifest, null, 2),\n    targetDomain: 'server',\n  });\n\n  return files;\n}\n\nfunction warnPossibleInvalidExportType(appDir: string) {\n  const apiRoutes = getApiRoutesForDirectory(appDir);\n  if (apiRoutes.length) {\n    // TODO: Allow API Routes for native-only.\n    Log.warn(\n      chalk.yellow`Skipping export for API routes because \\`web.output\\` is not \"server\". You may want to remove the routes: ${apiRoutes\n        .map((v) => path.relative(appDir, v))\n        .join(', ')}`\n    );\n  }\n}\n"],"names":["getFilesToExportFromServerAsync","exportFromServerAsync","getHtmlFiles","getPathVariations","exportApiRoutesStandaloneAsync","debug","require","matchGroupName","name","match","projectRoot","manifest","renderAsync","exportServer","files","Map","Promise","all","includeGroupVariations","map","route","filePath","pathname","targetDomain","set","contents","data","routeId","e","logMetroErrorAsync","error","Error","modifyRouteNodeInRuntimeManifest","callback","iterateScreens","screens","Object","values","value","_route","makeRuntimeEntryPointsAbsolute","appDir","Array","isArray","entryPoints","entryPoint","startsWith","path","resolve","isAbsolute","resolveFrom","devServer","outputDir","baseUrl","includeSourceMaps","routerRoot","exp","Log","log","learnMore","platform","isExporting","join","injectFaviconTag","getVirtualFaviconAssetsAsync","resources","serverManifest","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","serializeHtmlWithAssets","artifacts","hydrate","getFilesFromSerialAssets","isServerHosted","assets","persistMetroAssetsAsync","outputDirectory","apiRoutes","exportApiRoutesAsync","server","warnPossibleInvalidExportType","htmlFiles","Set","traverseScreens","key","entries","leaf","keys","length","endsWith","slice","stripGroupSegmentsFromPath","addOptionalGroups","add","newPath","variations","variation","uniqueBy","from","parts","split","partsWithGroups","part","filePathLocation","replace","array","seen","result","id","has","push","routePath","segments","generateVariations","current","head","rest","groups","group","trim","apiRoutesOnly","templateHtml","htmlManifest","getServerManifestAsync","isReactServerComponentsEnabled","props","exportExpoRouterApiRoutesAsync","prerenderManifest","htmlRoutes","notFoundRoutes","JSON","stringify","getApiRoutesForDirectory","warn","chalk","yellow","v","relative"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/export/favicon.js b/node_modules/@expo/cli/build/src/export/favicon.js
index 0840011..713d860 100644
--- a/node_modules/@expo/cli/build/src/export/favicon.js
+++ b/node_modules/@expo/cli/build/src/export/favicon.js
@@ -85,7 +85,7 @@ async function getVirtualFaviconAssetsAsync(projectRoot, { baseUrl , outputDir ,
         if (!html.includes("</head>")) {
             return html;
         }
-        return html.replace("</head>", `<link rel="shortcut icon" href="${baseUrl}/favicon.ico" /></head>`);
+        return html.replace("</head>", `<link rel="icon" href="${baseUrl}/favicon.ico" /></head>`);
     }
     return injectFaviconTag;
 }
diff --git a/node_modules/@expo/cli/build/src/export/favicon.js.map b/node_modules/@expo/cli/build/src/export/favicon.js.map
index 6659473..6ef1bbe 100644
--- a/node_modules/@expo/cli/build/src/export/favicon.js.map
+++ b/node_modules/@expo/cli/build/src/export/favicon.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/export/favicon.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { generateFaviconAsync, generateImageAsync } from '@expo/image-utils';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { getUserDefinedFile } from './publicFolder';\nimport { ExportAssetMap } from './saveAssets';\nimport { Log } from '../log';\n\nconst debug = require('debug')('expo:favicon') as typeof console.log;\n\n/** @returns the file system path for a user-defined favicon.ico file in the public folder. */\nexport function getUserDefinedFaviconFile(projectRoot: string): string | null {\n  return getUserDefinedFile(projectRoot, ['./favicon.ico']);\n}\n\nexport async function getVirtualFaviconAssetsAsync(\n  projectRoot: string,\n  {\n    baseUrl,\n    outputDir,\n    files,\n    exp,\n  }: { outputDir: string; baseUrl: string; files?: ExportAssetMap; exp?: ExpoConfig }\n): Promise<((html: string) => string) | null> {\n  const existing = getUserDefinedFaviconFile(projectRoot);\n  if (existing) {\n    debug('Using user-defined favicon.ico file.');\n    return null;\n  }\n\n  const data = await getFaviconFromExpoConfigAsync(projectRoot, {\n    exp,\n  });\n\n  if (!data) {\n    return null;\n  }\n\n  await Promise.all(\n    [data].map(async (asset) => {\n      const assetPath = path.join(outputDir, asset.path);\n      if (files) {\n        debug('Storing asset for persisting: ' + assetPath);\n        files?.set(asset.path, {\n          contents: asset.source,\n          targetDomain: 'client',\n        });\n      } else {\n        debug('Writing asset to disk: ' + assetPath);\n        await fs.promises.writeFile(assetPath, asset.source);\n      }\n    })\n  );\n\n  function injectFaviconTag(html: string): string {\n    if (!html.includes('</head>')) {\n      return html;\n    }\n    return html.replace(\n      '</head>',\n      `<link rel=\"shortcut icon\" href=\"${baseUrl}/favicon.ico\" /></head>`\n    );\n  }\n\n  return injectFaviconTag;\n}\n\nexport async function getFaviconFromExpoConfigAsync(\n  projectRoot: string,\n  { force = false, exp = getConfig(projectRoot).exp }: { force?: boolean; exp?: ExpoConfig } = {}\n) {\n  const src = exp.web?.favicon ?? null;\n  if (!src) {\n    return null;\n  }\n\n  const dims = [16, 32, 48];\n  const cacheType = 'favicon';\n\n  const size = dims[dims.length - 1];\n  try {\n    const { source } = await generateImageAsync(\n      { projectRoot, cacheType },\n      {\n        resizeMode: 'contain',\n        src,\n        backgroundColor: 'transparent',\n        width: size,\n        height: size,\n        name: `favicon-${size}.png`,\n      }\n    );\n\n    const faviconBuffer = await generateFaviconAsync(source, dims);\n\n    return { source: faviconBuffer, path: 'favicon.ico' };\n  } catch (error: any) {\n    // Check for ENOENT\n    if (!force && error.code === 'ENOENT') {\n      Log.warn(`Favicon source file in Expo config (web.favicon) does not exist: ${src}`);\n      return null;\n    }\n    throw error;\n  }\n}\n"],"names":["getUserDefinedFaviconFile","getVirtualFaviconAssetsAsync","getFaviconFromExpoConfigAsync","debug","require","projectRoot","getUserDefinedFile","baseUrl","outputDir","files","exp","existing","data","Promise","all","map","asset","assetPath","path","join","set","contents","source","targetDomain","fs","promises","writeFile","injectFaviconTag","html","includes","replace","force","getConfig","src","web","favicon","dims","cacheType","size","length","generateImageAsync","resizeMode","backgroundColor","width","height","name","faviconBuffer","generateFaviconAsync","error","code","Log","warn"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/export/favicon.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { generateFaviconAsync, generateImageAsync } from '@expo/image-utils';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { getUserDefinedFile } from './publicFolder';\nimport { ExportAssetMap } from './saveAssets';\nimport { Log } from '../log';\n\nconst debug = require('debug')('expo:favicon') as typeof console.log;\n\n/** @returns the file system path for a user-defined favicon.ico file in the public folder. */\nexport function getUserDefinedFaviconFile(projectRoot: string): string | null {\n  return getUserDefinedFile(projectRoot, ['./favicon.ico']);\n}\n\nexport async function getVirtualFaviconAssetsAsync(\n  projectRoot: string,\n  {\n    baseUrl,\n    outputDir,\n    files,\n    exp,\n  }: { outputDir: string; baseUrl: string; files?: ExportAssetMap; exp?: ExpoConfig }\n): Promise<((html: string) => string) | null> {\n  const existing = getUserDefinedFaviconFile(projectRoot);\n  if (existing) {\n    debug('Using user-defined favicon.ico file.');\n    return null;\n  }\n\n  const data = await getFaviconFromExpoConfigAsync(projectRoot, {\n    exp,\n  });\n\n  if (!data) {\n    return null;\n  }\n\n  await Promise.all(\n    [data].map(async (asset) => {\n      const assetPath = path.join(outputDir, asset.path);\n      if (files) {\n        debug('Storing asset for persisting: ' + assetPath);\n        files?.set(asset.path, {\n          contents: asset.source,\n          targetDomain: 'client',\n        });\n      } else {\n        debug('Writing asset to disk: ' + assetPath);\n        await fs.promises.writeFile(assetPath, asset.source);\n      }\n    })\n  );\n\n  function injectFaviconTag(html: string): string {\n    if (!html.includes('</head>')) {\n      return html;\n    }\n    return html.replace('</head>', `<link rel=\"icon\" href=\"${baseUrl}/favicon.ico\" /></head>`);\n  }\n\n  return injectFaviconTag;\n}\n\nexport async function getFaviconFromExpoConfigAsync(\n  projectRoot: string,\n  { force = false, exp = getConfig(projectRoot).exp }: { force?: boolean; exp?: ExpoConfig } = {}\n) {\n  const src = exp.web?.favicon ?? null;\n  if (!src) {\n    return null;\n  }\n\n  const dims = [16, 32, 48];\n  const cacheType = 'favicon';\n\n  const size = dims[dims.length - 1];\n  try {\n    const { source } = await generateImageAsync(\n      { projectRoot, cacheType },\n      {\n        resizeMode: 'contain',\n        src,\n        backgroundColor: 'transparent',\n        width: size,\n        height: size,\n        name: `favicon-${size}.png`,\n      }\n    );\n\n    const faviconBuffer = await generateFaviconAsync(source, dims);\n\n    return { source: faviconBuffer, path: 'favicon.ico' };\n  } catch (error: any) {\n    // Check for ENOENT\n    if (!force && error.code === 'ENOENT') {\n      Log.warn(`Favicon source file in Expo config (web.favicon) does not exist: ${src}`);\n      return null;\n    }\n    throw error;\n  }\n}\n"],"names":["getUserDefinedFaviconFile","getVirtualFaviconAssetsAsync","getFaviconFromExpoConfigAsync","debug","require","projectRoot","getUserDefinedFile","baseUrl","outputDir","files","exp","existing","data","Promise","all","map","asset","assetPath","path","join","set","contents","source","targetDomain","fs","promises","writeFile","injectFaviconTag","html","includes","replace","force","getConfig","src","web","favicon","dims","cacheType","size","length","generateImageAsync","resizeMode","backgroundColor","width","height","name","faviconBuffer","generateFaviconAsync","error","code","Log","warn"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js b/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js
index 6073b69..c4b2a4e 100644
--- a/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js
+++ b/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js
@@ -112,6 +112,11 @@ function resolvePackageManagerOptions(args) {
 }
 function resolveTemplateOption(template) {
     (0, _assert().default)(template, "template is required");
+    if (// Expands github shorthand (owner/repo) to full URLs
+    template.includes("/") && !(template.startsWith("@") || template.startsWith(".") || template.startsWith(_path().default.sep) || // Contains a protocol
+    /^[a-z][-a-z0-9\\.\\+]*:/.test(template))) {
+        template = `https://github.com/${template}`;
+    }
     if (template.startsWith("https://") || template.startsWith("http://")) {
         if (!(0, _url.validateUrl)(template)) {
             throw new _errors.CommandError("BAD_ARGS", "Invalid URL provided as a template");
diff --git a/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js.map b/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js.map
index a3d56e8..87b9bf3 100644
--- a/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js.map
+++ b/node_modules/@expo/cli/build/src/prebuild/resolveOptions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/prebuild/resolveOptions.ts"],"sourcesContent":["import { ModPlatform } from '@expo/config-plugins';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\nimport { validateUrl } from '../utils/url';\n\nconst debug = require('debug')('expo:prebuild:resolveOptions') as typeof console.log;\n\nexport interface ResolvedTemplateOption {\n  type: 'file' | 'npm' | 'repository';\n  uri: string;\n}\n\nexport function resolvePackageManagerOptions(args: any) {\n  const managers: Record<string, boolean> = {\n    npm: args['--npm'],\n    yarn: args['--yarn'],\n    pnpm: args['--pnpm'],\n    bun: args['--bun'],\n  };\n\n  if (\n    [managers.npm, managers.pnpm, managers.yarn, managers.bun, !!args['--no-install']].filter(\n      Boolean\n    ).length > 1\n  ) {\n    throw new CommandError(\n      'BAD_ARGS',\n      'Specify at most one of: --no-install, --npm, --pnpm, --yarn, --bun'\n    );\n  }\n\n  return managers;\n}\n\n/** Resolves a template option as a URL or file path pointing to a tar file. */\nexport function resolveTemplateOption(template: string): ResolvedTemplateOption {\n  assert(template, 'template is required');\n\n  if (template.startsWith('https://') || template.startsWith('http://')) {\n    if (!validateUrl(template)) {\n      throw new CommandError('BAD_ARGS', 'Invalid URL provided as a template');\n    }\n    debug('Resolved template to repository path:', template);\n    return { type: 'repository', uri: template };\n  }\n\n  if (\n    // Supports `file:./path/to/template.tgz`\n    template.startsWith('file:') ||\n    // Supports `../path/to/template.tgz`\n    template.startsWith('.') ||\n    // Supports `\\\\path\\\\to\\\\template.tgz`\n    template.startsWith(path.sep)\n  ) {\n    let resolvedUri = template;\n    if (resolvedUri.startsWith('file:')) {\n      resolvedUri = resolvedUri.substring(5);\n    }\n    const templatePath = path.resolve(resolvedUri);\n    assert(fs.existsSync(templatePath), 'template file does not exist: ' + templatePath);\n    assert(\n      fs.statSync(templatePath).isFile(),\n      'template must be a tar file created by running `npm pack` in a project: ' + templatePath\n    );\n\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  if (fs.existsSync(template)) {\n    // Backward compatible with the old local template argument, e.g. `--template dir/template.tgz`\n    const templatePath = path.resolve(template);\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  debug(`Resolved template to NPM package:`, template);\n  return { type: 'npm', uri: template };\n}\n\n/** Resolves dependencies to skip from a string joined by `,`. Example: `react-native,expo,lodash` */\nexport function resolveSkipDependencyUpdate(value: any) {\n  if (!value || typeof value !== 'string') {\n    return [];\n  }\n  return value.split(',');\n}\n\n/** Returns an array of platforms based on the input platform identifier and runtime constraints. */\nexport function resolvePlatformOption(\n  platform: string = 'all',\n  { loose }: { loose?: boolean } = {}\n): ModPlatform[] {\n  switch (platform) {\n    case 'ios':\n      return ['ios'];\n    case 'android':\n      return ['android'];\n    case 'all':\n      return loose || process.platform !== 'win32' ? ['android', 'ios'] : ['android'];\n    default:\n      return [platform as ModPlatform];\n  }\n}\n\n/** Warns and filters out unsupported platforms based on the runtime constraints. Essentially this means no iOS on Windows devices. */\nexport function ensureValidPlatforms(platforms: ModPlatform[]): ModPlatform[] {\n  // Skip prebuild for iOS on Windows\n  if (process.platform === 'win32' && platforms.includes('ios')) {\n    Log.warn(\n      chalk`⚠️  Skipping generating the iOS native project files. Run {bold npx expo prebuild} again from macOS or Linux to generate the iOS project.\\n`\n    );\n    return platforms.filter((platform) => platform !== 'ios');\n  }\n  return platforms;\n}\n\n/** Asserts platform length must be greater than zero. */\nexport function assertPlatforms(platforms: ModPlatform[]) {\n  if (!platforms?.length) {\n    throw new CommandError('At least one platform must be enabled when syncing');\n  }\n}\n"],"names":["resolvePackageManagerOptions","resolveTemplateOption","resolveSkipDependencyUpdate","resolvePlatformOption","ensureValidPlatforms","assertPlatforms","debug","require","args","managers","npm","yarn","pnpm","bun","filter","Boolean","length","CommandError","template","assert","startsWith","validateUrl","type","uri","path","sep","resolvedUri","substring","templatePath","resolve","fs","existsSync","statSync","isFile","value","split","platform","loose","process","platforms","includes","Log","warn","chalk"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/prebuild/resolveOptions.ts"],"sourcesContent":["import { ModPlatform } from '@expo/config-plugins';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { CommandError } from '../utils/errors';\nimport { validateUrl } from '../utils/url';\n\nconst debug = require('debug')('expo:prebuild:resolveOptions') as typeof console.log;\n\nexport interface ResolvedTemplateOption {\n  type: 'file' | 'npm' | 'repository';\n  uri: string;\n}\n\nexport function resolvePackageManagerOptions(args: any) {\n  const managers: Record<string, boolean> = {\n    npm: args['--npm'],\n    yarn: args['--yarn'],\n    pnpm: args['--pnpm'],\n    bun: args['--bun'],\n  };\n\n  if (\n    [managers.npm, managers.pnpm, managers.yarn, managers.bun, !!args['--no-install']].filter(\n      Boolean\n    ).length > 1\n  ) {\n    throw new CommandError(\n      'BAD_ARGS',\n      'Specify at most one of: --no-install, --npm, --pnpm, --yarn, --bun'\n    );\n  }\n\n  return managers;\n}\n\n/** Resolves a template option as a URL or file path pointing to a tar file. */\nexport function resolveTemplateOption(template: string): ResolvedTemplateOption {\n  assert(template, 'template is required');\n\n  if (\n    // Expands github shorthand (owner/repo) to full URLs\n    template.includes('/') &&\n    !(\n      template.startsWith('@') || // Scoped package\n      template.startsWith('.') || // Relative path\n      template.startsWith(path.sep) || // Absolute path\n      // Contains a protocol\n      /^[a-z][-a-z0-9\\\\.\\\\+]*:/.test(template)\n    )\n  ) {\n    template = `https://github.com/${template}`;\n  }\n\n  if (template.startsWith('https://') || template.startsWith('http://')) {\n    if (!validateUrl(template)) {\n      throw new CommandError('BAD_ARGS', 'Invalid URL provided as a template');\n    }\n    debug('Resolved template to repository path:', template);\n    return { type: 'repository', uri: template };\n  }\n\n  if (\n    // Supports `file:./path/to/template.tgz`\n    template.startsWith('file:') ||\n    // Supports `../path/to/template.tgz`\n    template.startsWith('.') ||\n    // Supports `\\\\path\\\\to\\\\template.tgz`\n    template.startsWith(path.sep)\n  ) {\n    let resolvedUri = template;\n    if (resolvedUri.startsWith('file:')) {\n      resolvedUri = resolvedUri.substring(5);\n    }\n    const templatePath = path.resolve(resolvedUri);\n    assert(fs.existsSync(templatePath), 'template file does not exist: ' + templatePath);\n    assert(\n      fs.statSync(templatePath).isFile(),\n      'template must be a tar file created by running `npm pack` in a project: ' + templatePath\n    );\n\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  if (fs.existsSync(template)) {\n    // Backward compatible with the old local template argument, e.g. `--template dir/template.tgz`\n    const templatePath = path.resolve(template);\n    debug(`Resolved template to file path:`, templatePath);\n    return { type: 'file', uri: templatePath };\n  }\n\n  debug(`Resolved template to NPM package:`, template);\n  return { type: 'npm', uri: template };\n}\n\n/** Resolves dependencies to skip from a string joined by `,`. Example: `react-native,expo,lodash` */\nexport function resolveSkipDependencyUpdate(value: any) {\n  if (!value || typeof value !== 'string') {\n    return [];\n  }\n  return value.split(',');\n}\n\n/** Returns an array of platforms based on the input platform identifier and runtime constraints. */\nexport function resolvePlatformOption(\n  platform: string = 'all',\n  { loose }: { loose?: boolean } = {}\n): ModPlatform[] {\n  switch (platform) {\n    case 'ios':\n      return ['ios'];\n    case 'android':\n      return ['android'];\n    case 'all':\n      return loose || process.platform !== 'win32' ? ['android', 'ios'] : ['android'];\n    default:\n      return [platform as ModPlatform];\n  }\n}\n\n/** Warns and filters out unsupported platforms based on the runtime constraints. Essentially this means no iOS on Windows devices. */\nexport function ensureValidPlatforms(platforms: ModPlatform[]): ModPlatform[] {\n  // Skip prebuild for iOS on Windows\n  if (process.platform === 'win32' && platforms.includes('ios')) {\n    Log.warn(\n      chalk`⚠️  Skipping generating the iOS native project files. Run {bold npx expo prebuild} again from macOS or Linux to generate the iOS project.\\n`\n    );\n    return platforms.filter((platform) => platform !== 'ios');\n  }\n  return platforms;\n}\n\n/** Asserts platform length must be greater than zero. */\nexport function assertPlatforms(platforms: ModPlatform[]) {\n  if (!platforms?.length) {\n    throw new CommandError('At least one platform must be enabled when syncing');\n  }\n}\n"],"names":["resolvePackageManagerOptions","resolveTemplateOption","resolveSkipDependencyUpdate","resolvePlatformOption","ensureValidPlatforms","assertPlatforms","debug","require","args","managers","npm","yarn","pnpm","bun","filter","Boolean","length","CommandError","template","assert","includes","startsWith","path","sep","test","validateUrl","type","uri","resolvedUri","substring","templatePath","resolve","fs","existsSync","statSync","isFile","value","split","platform","loose","process","platforms","Log","warn","chalk"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js b/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js
index 884d7f0..35e7d33 100644
--- a/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js
+++ b/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js
@@ -10,6 +10,7 @@ function _export(target, all) {
 }
 _export(exports, {
     logPrettyItem: ()=>logPrettyItem,
+    matchEstimatedBinaryPath: ()=>matchEstimatedBinaryPath,
     getAppBinaryPath: ()=>getAppBinaryPath,
     getEscapedPath: ()=>getEscapedPath,
     extractEnvVariableFromBuild: ()=>extractEnvVariableFromBuild,
@@ -114,21 +115,43 @@ function _interopRequireWildcard(obj, nodeInterop) {
 function logPrettyItem(message) {
     _log.log((0, _chalk().default)`{whiteBright \u203A} ${message}`);
 }
+function matchEstimatedBinaryPath(buildOutput) {
+    // Match the full path that contains `/(.*)/Developer/Xcode/DerivedData/(.*)/Build/Products/(.*)/(.*).app`
+    const appBinaryPathMatch = buildOutput.match(/(\/(?:\\\s|[^ ])+\/Developer\/Xcode\/DerivedData\/(?:\\\s|[^ ])+\/Build\/Products\/(?:Debug|Release)-(?:[^\s/]+)\/(?:\\\s|[^ ])+\.app)/);
+    if (!(appBinaryPathMatch == null ? void 0 : appBinaryPathMatch.length)) {
+        throw new _errors.CommandError("XCODE_BUILD", `Malformed xcodebuild results: app binary path was not generated in build output. Please report this issue and run your project with Xcode instead.`);
+    } else {
+        // Sort for the shortest
+        const shortestPath = appBinaryPathMatch.filter((a)=>typeof a === "string" && a).sort((a, b)=>a.length - b.length)[0].trim();
+        _log.debug(`Found app binary path: ${shortestPath}`);
+        return shortestPath;
+    }
+}
 function getAppBinaryPath(buildOutput) {
     // Matches what's used in "Bundle React Native code and images" script.
     // Requires that `-hideShellScriptEnvironment` is not included in the build command (extra logs).
-    // Like `\=/Users/evanbacon/Library/Developer/Xcode/DerivedData/Exponent-anpuosnglkxokahjhfszejloqfvo/Build/Products/Debug-iphonesimulator`
-    const CONFIGURATION_BUILD_DIR = extractEnvVariableFromBuild(buildOutput, "CONFIGURATION_BUILD_DIR").sort(// Longer name means more suffixes, we want the shortest possible one to be first.
-    // Massive projects (like Expo Go) can sometimes print multiple different sets of environment variables.
-    // This can become an issue with some
-    (a, b)=>a.length - b.length);
-    // Like `Exponent.app`
-    const UNLOCALIZED_RESOURCES_FOLDER_PATH = extractEnvVariableFromBuild(buildOutput, "UNLOCALIZED_RESOURCES_FOLDER_PATH");
-    const binaryPath = _path().default.join(// Use the shortest defined env variable (usually there's just one).
-    CONFIGURATION_BUILD_DIR[0], // Use the last defined env variable.
-    UNLOCALIZED_RESOURCES_FOLDER_PATH[UNLOCALIZED_RESOURCES_FOLDER_PATH.length - 1]);
-    // If the app has a space in the name it'll fail because it isn't escaped properly by Xcode.
-    return getEscapedPath(binaryPath);
+    try {
+        // Like `\=/Users/evanbacon/Library/Developer/Xcode/DerivedData/Exponent-anpuosnglkxokahjhfszejloqfvo/Build/Products/Debug-iphonesimulator`
+        const CONFIGURATION_BUILD_DIR = extractEnvVariableFromBuild(buildOutput, "CONFIGURATION_BUILD_DIR").sort(// Longer name means more suffixes, we want the shortest possible one to be first.
+        // Massive projects (like Expo Go) can sometimes print multiple different sets of environment variables.
+        // This can become an issue with some
+        (a, b)=>a.length - b.length);
+        // Like `Exponent.app`
+        const UNLOCALIZED_RESOURCES_FOLDER_PATH = extractEnvVariableFromBuild(buildOutput, "UNLOCALIZED_RESOURCES_FOLDER_PATH");
+        const binaryPath = _path().default.join(// Use the shortest defined env variable (usually there's just one).
+        CONFIGURATION_BUILD_DIR[0], // Use the last defined env variable.
+        UNLOCALIZED_RESOURCES_FOLDER_PATH[UNLOCALIZED_RESOURCES_FOLDER_PATH.length - 1]);
+        // If the app has a space in the name it'll fail because it isn't escaped properly by Xcode.
+        return getEscapedPath(binaryPath);
+    } catch (error) {
+        if (error instanceof _errors.CommandError && error.code === "XCODE_BUILD") {
+            const possiblePath = matchEstimatedBinaryPath(buildOutput);
+            if (possiblePath) {
+                return possiblePath;
+            }
+        }
+        throw error;
+    }
 }
 function getEscapedPath(filePath) {
     if (_fs().default.existsSync(filePath)) {
diff --git a/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js.map b/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js.map
index 66e1048..127ed90 100644
--- a/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js.map
+++ b/node_modules/@expo/cli/build/src/run/ios/XcodeBuild.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/run/ios/XcodeBuild.ts"],"sourcesContent":["import { ExpoRunFormatter } from '@expo/xcpretty';\nimport chalk from 'chalk';\nimport { spawn, SpawnOptionsWithoutStdio } from 'child_process';\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport { BuildProps, ProjectInfo } from './XcodeBuild.types';\nimport { ensureDeviceIsCodeSignedForDeploymentAsync } from './codeSigning/configureCodeSigning';\nimport { simulatorBuildRequiresCodeSigning } from './codeSigning/simulatorCodeSigning';\nimport * as Log from '../../log';\nimport { ensureDirectory } from '../../utils/dir';\nimport { env } from '../../utils/env';\nimport { AbortCommandError, CommandError } from '../../utils/errors';\nimport { getUserTerminal } from '../../utils/terminal';\nexport function logPrettyItem(message: string) {\n  Log.log(chalk`{whiteBright \\u203A} ${message}`);\n}\n\n/**\n *\n * @returns '/Users/evanbacon/Library/Developer/Xcode/DerivedData/myapp-gpgjqjodrxtervaufttwnsgimhrx/Build/Products/Debug-iphonesimulator/myapp.app'\n */\nexport function getAppBinaryPath(buildOutput: string) {\n  // Matches what's used in \"Bundle React Native code and images\" script.\n  // Requires that `-hideShellScriptEnvironment` is not included in the build command (extra logs).\n\n  // Like `\\=/Users/evanbacon/Library/Developer/Xcode/DerivedData/Exponent-anpuosnglkxokahjhfszejloqfvo/Build/Products/Debug-iphonesimulator`\n  const CONFIGURATION_BUILD_DIR = extractEnvVariableFromBuild(\n    buildOutput,\n    'CONFIGURATION_BUILD_DIR'\n  ).sort(\n    // Longer name means more suffixes, we want the shortest possible one to be first.\n    // Massive projects (like Expo Go) can sometimes print multiple different sets of environment variables.\n    // This can become an issue with some\n    (a, b) => a.length - b.length\n  );\n  // Like `Exponent.app`\n  const UNLOCALIZED_RESOURCES_FOLDER_PATH = extractEnvVariableFromBuild(\n    buildOutput,\n    'UNLOCALIZED_RESOURCES_FOLDER_PATH'\n  );\n\n  const binaryPath = path.join(\n    // Use the shortest defined env variable (usually there's just one).\n    CONFIGURATION_BUILD_DIR[0],\n    // Use the last defined env variable.\n    UNLOCALIZED_RESOURCES_FOLDER_PATH[UNLOCALIZED_RESOURCES_FOLDER_PATH.length - 1]\n  );\n\n  // If the app has a space in the name it'll fail because it isn't escaped properly by Xcode.\n  return getEscapedPath(binaryPath);\n}\n\nexport function getEscapedPath(filePath: string): string {\n  if (fs.existsSync(filePath)) {\n    return filePath;\n  }\n  const unescapedPath = filePath.split(/\\\\ /).join(' ');\n  if (fs.existsSync(unescapedPath)) {\n    return unescapedPath;\n  }\n  throw new CommandError(\n    'XCODE_BUILD',\n    `Unexpected: Generated app at path \"${filePath}\" cannot be read, the app cannot be installed. Please report this and build onto a simulator.`\n  );\n}\n\nexport function extractEnvVariableFromBuild(buildOutput: string, variableName: string) {\n  // Xcode can sometimes escape `=` with a backslash or put the value in quotes\n  const reg = new RegExp(`export ${variableName}\\\\\\\\?=(.*)$`, 'mg');\n  const matched = [...buildOutput.matchAll(reg)];\n\n  if (!matched || !matched.length) {\n    throw new CommandError(\n      'XCODE_BUILD',\n      `Malformed xcodebuild results: \"${variableName}\" variable was not generated in build output. Please report this issue and run your project with Xcode instead.`\n    );\n  }\n  return matched.map((value) => value[1]).filter(Boolean) as string[];\n}\n\nexport function getProcessOptions({\n  packager,\n  shouldSkipInitialBundling,\n  terminal,\n  port,\n  eagerBundleOptions,\n}: {\n  packager: boolean;\n  shouldSkipInitialBundling?: boolean;\n  terminal: string | undefined;\n  port: number;\n  eagerBundleOptions?: string;\n}): SpawnOptionsWithoutStdio {\n  const SKIP_BUNDLING = shouldSkipInitialBundling ? '1' : undefined;\n  if (packager) {\n    return {\n      env: {\n        ...process.env,\n        RCT_TERMINAL: terminal,\n        SKIP_BUNDLING,\n        RCT_METRO_PORT: port.toString(),\n        __EXPO_EAGER_BUNDLE_OPTIONS: eagerBundleOptions,\n      },\n    };\n  }\n\n  return {\n    env: {\n      ...process.env,\n      RCT_TERMINAL: terminal,\n      SKIP_BUNDLING,\n      __EXPO_EAGER_BUNDLE_OPTIONS: eagerBundleOptions,\n      // Always skip launching the packager from a build script.\n      // The script is used for people building their project directly from Xcode.\n      // This essentially means \"› Running script 'Start Packager'\" does nothing.\n      RCT_NO_LAUNCH_PACKAGER: 'true',\n      // FORCE_BUNDLING: '0'\n    },\n  };\n}\n\nexport async function getXcodeBuildArgsAsync(\n  props: Pick<\n    BuildProps,\n    | 'buildCache'\n    | 'projectRoot'\n    | 'xcodeProject'\n    | 'configuration'\n    | 'scheme'\n    | 'device'\n    | 'isSimulator'\n  >\n): Promise<string[]> {\n  const args = [\n    props.xcodeProject.isWorkspace ? '-workspace' : '-project',\n    props.xcodeProject.name,\n    '-configuration',\n    props.configuration,\n    '-scheme',\n    props.scheme,\n    '-destination',\n    `id=${props.device.udid}`,\n  ];\n\n  if (!props.isSimulator || simulatorBuildRequiresCodeSigning(props.projectRoot)) {\n    const developmentTeamId = await ensureDeviceIsCodeSignedForDeploymentAsync(props.projectRoot);\n    if (developmentTeamId) {\n      args.push(\n        `DEVELOPMENT_TEAM=${developmentTeamId}`,\n        '-allowProvisioningUpdates',\n        '-allowProvisioningDeviceRegistration'\n      );\n    }\n  }\n\n  // Add last\n  if (props.buildCache === false) {\n    args.push(\n      // Will first clean the derived data folder.\n      'clean',\n      // Then build step must be added otherwise the process will simply clean and exit.\n      'build'\n    );\n  }\n  return args;\n}\n\nfunction spawnXcodeBuild(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { onData }: { onData: (data: string) => void }\n): Promise<{ code: number | null; results: string; error: string }> {\n  const buildProcess = spawn('xcodebuild', args, options);\n\n  let results = '';\n  let error = '';\n\n  buildProcess.stdout.on('data', (data: Buffer) => {\n    const stringData = data.toString();\n    results += stringData;\n    onData(stringData);\n  });\n\n  buildProcess.stderr.on('data', (data: Buffer) => {\n    const stringData = data instanceof Buffer ? data.toString() : data;\n    error += stringData;\n  });\n\n  return new Promise(async (resolve, reject) => {\n    buildProcess.on('close', (code: number) => {\n      resolve({ code, results, error });\n    });\n  });\n}\n\nasync function spawnXcodeBuildWithFlush(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { onFlush }: { onFlush: (data: string) => void }\n): Promise<{ code: number | null; results: string; error: string }> {\n  let currentBuffer = '';\n\n  // Data can be sent in chunks that would have no relevance to our regex\n  // this can cause massive slowdowns, so we need to ensure the data is complete before attempting to parse it.\n  function flushBuffer() {\n    if (!currentBuffer) {\n      return;\n    }\n\n    const data = currentBuffer;\n    // Reset buffer.\n    currentBuffer = '';\n    // Process data.\n    onFlush(data);\n  }\n\n  const data = await spawnXcodeBuild(args, options, {\n    onData(stringData) {\n      currentBuffer += stringData;\n      // Only flush the data if we have a full line.\n      if (currentBuffer.endsWith(os.EOL)) {\n        flushBuffer();\n      }\n    },\n  });\n\n  // Flush log data at the end just in case we missed something.\n  flushBuffer();\n  return data;\n}\n\nasync function spawnXcodeBuildWithFormat(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { projectRoot, xcodeProject }: { projectRoot: string; xcodeProject: ProjectInfo }\n): Promise<{ code: number | null; results: string; error: string; formatter: ExpoRunFormatter }> {\n  Log.debug(`  xcodebuild ${args.join(' ')}`);\n\n  logPrettyItem(chalk.bold`Planning build`);\n\n  const formatter = ExpoRunFormatter.create(projectRoot, {\n    xcodeProject,\n    isDebug: env.EXPO_DEBUG,\n  });\n\n  const results = await spawnXcodeBuildWithFlush(args, options, {\n    onFlush(data) {\n      // Process data.\n      for (const line of formatter.pipe(data)) {\n        // Log parsed results.\n        Log.log(line);\n      }\n    },\n  });\n\n  Log.debug(`Exited with code: ${results.code}`);\n\n  if (\n    // User cancelled with ctrl-c\n    results.code === null ||\n    // Build interrupted\n    results.code === 75\n  ) {\n    throw new AbortCommandError();\n  }\n\n  Log.log(formatter.getBuildSummary());\n\n  return { ...results, formatter };\n}\n\nexport async function buildAsync(props: BuildProps): Promise<string> {\n  const args = await getXcodeBuildArgsAsync(props);\n\n  const { projectRoot, xcodeProject, shouldSkipInitialBundling, port, eagerBundleOptions } = props;\n\n  const { code, results, formatter, error } = await spawnXcodeBuildWithFormat(\n    args,\n    getProcessOptions({\n      packager: false,\n      terminal: getUserTerminal(),\n      shouldSkipInitialBundling,\n      port,\n      eagerBundleOptions,\n    }),\n    {\n      projectRoot,\n      xcodeProject,\n    }\n  );\n\n  const logFilePath = writeBuildLogs(projectRoot, results, error);\n\n  if (code !== 0) {\n    // Determine if the logger found any errors;\n    const wasErrorPresented = !!formatter.errors.length;\n\n    if (wasErrorPresented) {\n      // This has a flaw, if the user is missing a file, and there is a script error, only the missing file error will be shown.\n      // They will only see the script error if they fix the missing file and rerun.\n      // The flaw can be fixed by catching script errors in the custom logger.\n      throw new CommandError(\n        `Failed to build iOS project. \"xcodebuild\" exited with error code ${code}.`\n      );\n    }\n\n    _assertXcodeBuildResults(code, results, error, xcodeProject, logFilePath);\n  }\n  return results;\n}\n\n// Exposed for testing.\nexport function _assertXcodeBuildResults(\n  code: number | null,\n  results: string,\n  error: string,\n  xcodeProject: { name: string },\n  logFilePath: string\n): void {\n  const errorTitle = `Failed to build iOS project. \"xcodebuild\" exited with error code ${code}.`;\n\n  const throwWithMessage = (message: string): never => {\n    throw new CommandError(\n      `${errorTitle}\\nTo view more error logs, try building the app with Xcode directly, by opening ${xcodeProject.name}.\\n\\n` +\n        message +\n        `Build logs written to ${chalk.underline(logFilePath)}`\n    );\n  };\n\n  const localizedError = error.match(/NSLocalizedFailure = \"(.*)\"/)?.[1];\n\n  if (localizedError) {\n    throwWithMessage(chalk.bold(localizedError) + '\\n\\n');\n  }\n  // Show all the log info because often times the error is coming from a shell script,\n  // that invoked a node script, that started metro, which threw an error.\n\n  throwWithMessage(results + '\\n\\n' + error);\n}\n\nfunction writeBuildLogs(projectRoot: string, buildOutput: string, errorOutput: string) {\n  const [logFilePath, errorFilePath] = getErrorLogFilePath(projectRoot);\n\n  fs.writeFileSync(logFilePath, buildOutput);\n  fs.writeFileSync(errorFilePath, errorOutput);\n  return logFilePath;\n}\n\nfunction getErrorLogFilePath(projectRoot: string): [string, string] {\n  const folder = path.join(projectRoot, '.expo');\n  ensureDirectory(folder);\n  return [path.join(folder, 'xcodebuild.log'), path.join(folder, 'xcodebuild-error.log')];\n}\n"],"names":["logPrettyItem","getAppBinaryPath","getEscapedPath","extractEnvVariableFromBuild","getProcessOptions","getXcodeBuildArgsAsync","buildAsync","_assertXcodeBuildResults","message","Log","log","chalk","buildOutput","CONFIGURATION_BUILD_DIR","sort","a","b","length","UNLOCALIZED_RESOURCES_FOLDER_PATH","binaryPath","path","join","filePath","fs","existsSync","unescapedPath","split","CommandError","variableName","reg","RegExp","matched","matchAll","map","value","filter","Boolean","packager","shouldSkipInitialBundling","terminal","port","eagerBundleOptions","SKIP_BUNDLING","undefined","env","process","RCT_TERMINAL","RCT_METRO_PORT","toString","__EXPO_EAGER_BUNDLE_OPTIONS","RCT_NO_LAUNCH_PACKAGER","props","args","xcodeProject","isWorkspace","name","configuration","scheme","device","udid","isSimulator","simulatorBuildRequiresCodeSigning","projectRoot","developmentTeamId","ensureDeviceIsCodeSignedForDeploymentAsync","push","buildCache","spawnXcodeBuild","options","onData","buildProcess","spawn","results","error","stdout","on","data","stringData","stderr","Buffer","Promise","resolve","reject","code","spawnXcodeBuildWithFlush","onFlush","currentBuffer","flushBuffer","endsWith","os","EOL","spawnXcodeBuildWithFormat","debug","bold","formatter","ExpoRunFormatter","create","isDebug","EXPO_DEBUG","line","pipe","AbortCommandError","getBuildSummary","getUserTerminal","logFilePath","writeBuildLogs","wasErrorPresented","errors","errorTitle","throwWithMessage","underline","localizedError","match","errorOutput","errorFilePath","getErrorLogFilePath","writeFileSync","folder","ensureDirectory"],"mappings":"AAAA;;;;;;;;;;;IAegBA,aAAa,MAAbA,aAAa;IAQbC,gBAAgB,MAAhBA,gBAAgB;IA+BhBC,cAAc,MAAdA,cAAc;IAcdC,2BAA2B,MAA3BA,2BAA2B;IAc3BC,iBAAiB,MAAjBA,iBAAiB;IAyCXC,sBAAsB,MAAtBA,sBAAsB;IAsJtBC,UAAU,MAAVA,UAAU;IAyChBC,0BAAwB,MAAxBA,wBAAwB;;;yBA1TP,gBAAgB;;;;;;;8DAC/B,OAAO;;;;;;;yBACuB,eAAe;;;;;;;8DAChD,IAAI;;;;;;;8DACJ,IAAI;;;;;;;8DACF,MAAM;;;;;;sCAGoC,oCAAoC;sCAC7C,oCAAoC;2DACjE,WAAW;qBACA,iBAAiB;qBAC7B,iBAAiB;wBACW,oBAAoB;0BACpC,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC/C,SAASP,aAAa,CAACQ,OAAe,EAAE;IAC7CC,IAAG,CAACC,GAAG,CAACC,IAAAA,MAAK,EAAA,QAAA,CAAA,CAAC,qBAAqB,EAAEH,OAAO,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC;AAMM,SAASP,gBAAgB,CAACW,WAAmB,EAAE;IACpD,uEAAuE;IACvE,iGAAiG;IAEjG,2IAA2I;IAC3I,MAAMC,uBAAuB,GAAGV,2BAA2B,CACzDS,WAAW,EACX,yBAAyB,CAC1B,CAACE,IAAI,CACJ,kFAAkF;IAClF,wGAAwG;IACxG,qCAAqC;IACrC,CAACC,CAAC,EAAEC,CAAC,GAAKD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,CAC9B,AAAC;IACF,sBAAsB;IACtB,MAAMC,iCAAiC,GAAGf,2BAA2B,CACnES,WAAW,EACX,mCAAmC,CACpC,AAAC;IAEF,MAAMO,UAAU,GAAGC,KAAI,EAAA,QAAA,CAACC,IAAI,CAC1B,oEAAoE;IACpER,uBAAuB,CAAC,CAAC,CAAC,EAC1B,qCAAqC;IACrCK,iCAAiC,CAACA,iCAAiC,CAACD,MAAM,GAAG,CAAC,CAAC,CAChF,AAAC;IAEF,4FAA4F;IAC5F,OAAOf,cAAc,CAACiB,UAAU,CAAC,CAAC;AACpC,CAAC;AAEM,SAASjB,cAAc,CAACoB,QAAgB,EAAU;IACvD,IAAIC,GAAE,EAAA,QAAA,CAACC,UAAU,CAACF,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ,CAAC;IAClB,CAAC;IACD,MAAMG,aAAa,GAAGH,QAAQ,CAACI,KAAK,OAAO,CAACL,IAAI,CAAC,GAAG,CAAC,AAAC;IACtD,IAAIE,GAAE,EAAA,QAAA,CAACC,UAAU,CAACC,aAAa,CAAC,EAAE;QAChC,OAAOA,aAAa,CAAC;IACvB,CAAC;IACD,MAAM,IAAIE,OAAY,aAAA,CACpB,aAAa,EACb,CAAC,mCAAmC,EAAEL,QAAQ,CAAC,6FAA6F,CAAC,CAC9I,CAAC;AACJ,CAAC;AAEM,SAASnB,2BAA2B,CAACS,WAAmB,EAAEgB,YAAoB,EAAE;IACrF,6EAA6E;IAC7E,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAAC,CAAC,OAAO,EAAEF,YAAY,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,AAAC;IAClE,MAAMG,OAAO,GAAG;WAAInB,WAAW,CAACoB,QAAQ,CAACH,GAAG,CAAC;KAAC,AAAC;IAE/C,IAAI,CAACE,OAAO,IAAI,CAACA,OAAO,CAACd,MAAM,EAAE;QAC/B,MAAM,IAAIU,OAAY,aAAA,CACpB,aAAa,EACb,CAAC,+BAA+B,EAAEC,YAAY,CAAC,+GAA+G,CAAC,CAChK,CAAC;IACJ,CAAC;IACD,OAAOG,OAAO,CAACE,GAAG,CAAC,CAACC,KAAK,GAAKA,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAAa;AACtE,CAAC;AAEM,SAAShC,iBAAiB,CAAC,EAChCiC,QAAQ,CAAA,EACRC,yBAAyB,CAAA,EACzBC,QAAQ,CAAA,EACRC,IAAI,CAAA,EACJC,kBAAkB,CAAA,EAOnB,EAA4B;IAC3B,MAAMC,aAAa,GAAGJ,yBAAyB,GAAG,GAAG,GAAGK,SAAS,AAAC;IAClE,IAAIN,QAAQ,EAAE;QACZ,OAAO;YACLO,GAAG,EAAE;gBACH,GAAGC,OAAO,CAACD,GAAG;gBACdE,YAAY,EAAEP,QAAQ;gBACtBG,aAAa;gBACbK,cAAc,EAAEP,IAAI,CAACQ,QAAQ,EAAE;gBAC/BC,2BAA2B,EAAER,kBAAkB;aAChD;SACF,CAAC;IACJ,CAAC;IAED,OAAO;QACLG,GAAG,EAAE;YACH,GAAGC,OAAO,CAACD,GAAG;YACdE,YAAY,EAAEP,QAAQ;YACtBG,aAAa;YACbO,2BAA2B,EAAER,kBAAkB;YAC/C,0DAA0D;YAC1D,4EAA4E;YAC5E,2EAA2E;YAC3ES,sBAAsB,EAAE,MAAM;SAE/B;KACF,CAAC;AACJ,CAAC;AAEM,eAAe7C,sBAAsB,CAC1C8C,KASC,EACkB;IACnB,MAAMC,IAAI,GAAG;QACXD,KAAK,CAACE,YAAY,CAACC,WAAW,GAAG,YAAY,GAAG,UAAU;QAC1DH,KAAK,CAACE,YAAY,CAACE,IAAI;QACvB,gBAAgB;QAChBJ,KAAK,CAACK,aAAa;QACnB,SAAS;QACTL,KAAK,CAACM,MAAM;QACZ,cAAc;QACd,CAAC,GAAG,EAAEN,KAAK,CAACO,MAAM,CAACC,IAAI,CAAC,CAAC;KAC1B,AAAC;IAEF,IAAI,CAACR,KAAK,CAACS,WAAW,IAAIC,IAAAA,qBAAiC,kCAAA,EAACV,KAAK,CAACW,WAAW,CAAC,EAAE;QAC9E,MAAMC,iBAAiB,GAAG,MAAMC,IAAAA,qBAA0C,2CAAA,EAACb,KAAK,CAACW,WAAW,CAAC,AAAC;QAC9F,IAAIC,iBAAiB,EAAE;YACrBX,IAAI,CAACa,IAAI,CACP,CAAC,iBAAiB,EAAEF,iBAAiB,CAAC,CAAC,EACvC,2BAA2B,EAC3B,sCAAsC,CACvC,CAAC;QACJ,CAAC;IACH,CAAC;IAED,WAAW;IACX,IAAIZ,KAAK,CAACe,UAAU,KAAK,KAAK,EAAE;QAC9Bd,IAAI,CAACa,IAAI,CACP,4CAA4C;QAC5C,OAAO,EACP,kFAAkF;QAClF,OAAO,CACR,CAAC;IACJ,CAAC;IACD,OAAOb,IAAI,CAAC;AACd,CAAC;AAED,SAASe,eAAe,CACtBf,IAAc,EACdgB,OAAiC,EACjC,EAAEC,MAAM,CAAA,EAAsC,EACoB;IAClE,MAAMC,YAAY,GAAGC,IAAAA,aAAK,EAAA,MAAA,EAAC,YAAY,EAAEnB,IAAI,EAAEgB,OAAO,CAAC,AAAC;IAExD,IAAII,OAAO,GAAG,EAAE,AAAC;IACjB,IAAIC,KAAK,GAAG,EAAE,AAAC;IAEfH,YAAY,CAACI,MAAM,CAACC,EAAE,CAAC,MAAM,EAAE,CAACC,IAAY,GAAK;QAC/C,MAAMC,UAAU,GAAGD,IAAI,CAAC5B,QAAQ,EAAE,AAAC;QACnCwB,OAAO,IAAIK,UAAU,CAAC;QACtBR,MAAM,CAACQ,UAAU,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEHP,YAAY,CAACQ,MAAM,CAACH,EAAE,CAAC,MAAM,EAAE,CAACC,IAAY,GAAK;QAC/C,MAAMC,UAAU,GAAGD,IAAI,YAAYG,MAAM,GAAGH,IAAI,CAAC5B,QAAQ,EAAE,GAAG4B,IAAI,AAAC;QACnEH,KAAK,IAAII,UAAU,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,OAAO,IAAIG,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,GAAK;QAC5CZ,YAAY,CAACK,EAAE,CAAC,OAAO,EAAE,CAACQ,IAAY,GAAK;YACzCF,OAAO,CAAC;gBAAEE,IAAI;gBAAEX,OAAO;gBAAEC,KAAK;aAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,eAAeW,wBAAwB,CACrChC,IAAc,EACdgB,OAAiC,EACjC,EAAEiB,OAAO,CAAA,EAAuC,EACkB;IAClE,IAAIC,aAAa,GAAG,EAAE,AAAC;IAEvB,uEAAuE;IACvE,6GAA6G;IAC7G,SAASC,WAAW,GAAG;QACrB,IAAI,CAACD,aAAa,EAAE;YAClB,OAAO;QACT,CAAC;QAED,MAAMV,IAAI,GAAGU,aAAa,AAAC;QAC3B,gBAAgB;QAChBA,aAAa,GAAG,EAAE,CAAC;QACnB,gBAAgB;QAChBD,OAAO,CAACT,IAAI,CAAC,CAAC;IAChB,CAAC;IAED,MAAMA,IAAI,GAAG,MAAMT,eAAe,CAACf,IAAI,EAAEgB,OAAO,EAAE;QAChDC,MAAM,EAACQ,UAAU,EAAE;YACjBS,aAAa,IAAIT,UAAU,CAAC;YAC5B,8CAA8C;YAC9C,IAAIS,aAAa,CAACE,QAAQ,CAACC,GAAE,EAAA,QAAA,CAACC,GAAG,CAAC,EAAE;gBAClCH,WAAW,EAAE,CAAC;YAChB,CAAC;QACH,CAAC;KACF,CAAC,AAAC;IAEH,8DAA8D;IAC9DA,WAAW,EAAE,CAAC;IACd,OAAOX,IAAI,CAAC;AACd,CAAC;AAED,eAAee,yBAAyB,CACtCvC,IAAc,EACdgB,OAAiC,EACjC,EAAEN,WAAW,CAAA,EAAET,YAAY,CAAA,EAAsD,EACc;IAC/F5C,IAAG,CAACmF,KAAK,CAAC,CAAC,aAAa,EAAExC,IAAI,CAAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5CrB,aAAa,CAACW,MAAK,EAAA,QAAA,CAACkF,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAE1C,MAAMC,SAAS,GAAGC,SAAgB,EAAA,iBAAA,CAACC,MAAM,CAAClC,WAAW,EAAE;QACrDT,YAAY;QACZ4C,OAAO,EAAErD,IAAG,IAAA,CAACsD,UAAU;KACxB,CAAC,AAAC;IAEH,MAAM1B,OAAO,GAAG,MAAMY,wBAAwB,CAAChC,IAAI,EAAEgB,OAAO,EAAE;QAC5DiB,OAAO,EAACT,IAAI,EAAE;YACZ,gBAAgB;YAChB,KAAK,MAAMuB,IAAI,IAAIL,SAAS,CAACM,IAAI,CAACxB,IAAI,CAAC,CAAE;gBACvC,sBAAsB;gBACtBnE,IAAG,CAACC,GAAG,CAACyF,IAAI,CAAC,CAAC;YAChB,CAAC;QACH,CAAC;KACF,CAAC,AAAC;IAEH1F,IAAG,CAACmF,KAAK,CAAC,CAAC,kBAAkB,EAAEpB,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;IAE/C,IACE,6BAA6B;IAC7BX,OAAO,CAACW,IAAI,KAAK,IAAI,IACrB,oBAAoB;IACpBX,OAAO,CAACW,IAAI,KAAK,EAAE,EACnB;QACA,MAAM,IAAIkB,OAAiB,kBAAA,EAAE,CAAC;IAChC,CAAC;IAED5F,IAAG,CAACC,GAAG,CAACoF,SAAS,CAACQ,eAAe,EAAE,CAAC,CAAC;IAErC,OAAO;QAAE,GAAG9B,OAAO;QAAEsB,SAAS;KAAE,CAAC;AACnC,CAAC;AAEM,eAAexF,UAAU,CAAC6C,KAAiB,EAAmB;IACnE,MAAMC,IAAI,GAAG,MAAM/C,sBAAsB,CAAC8C,KAAK,CAAC,AAAC;IAEjD,MAAM,EAAEW,WAAW,CAAA,EAAET,YAAY,CAAA,EAAEf,yBAAyB,CAAA,EAAEE,IAAI,CAAA,EAAEC,kBAAkB,CAAA,EAAE,GAAGU,KAAK,AAAC;IAEjG,MAAM,EAAEgC,IAAI,CAAA,EAAEX,OAAO,CAAA,EAAEsB,SAAS,CAAA,EAAErB,KAAK,CAAA,EAAE,GAAG,MAAMkB,yBAAyB,CACzEvC,IAAI,EACJhD,iBAAiB,CAAC;QAChBiC,QAAQ,EAAE,KAAK;QACfE,QAAQ,EAAEgE,IAAAA,SAAe,gBAAA,GAAE;QAC3BjE,yBAAyB;QACzBE,IAAI;QACJC,kBAAkB;KACnB,CAAC,EACF;QACEqB,WAAW;QACXT,YAAY;KACb,CACF,AAAC;IAEF,MAAMmD,WAAW,GAAGC,cAAc,CAAC3C,WAAW,EAAEU,OAAO,EAAEC,KAAK,CAAC,AAAC;IAEhE,IAAIU,IAAI,KAAK,CAAC,EAAE;QACd,4CAA4C;QAC5C,MAAMuB,iBAAiB,GAAG,CAAC,CAACZ,SAAS,CAACa,MAAM,CAAC1F,MAAM,AAAC;QAEpD,IAAIyF,iBAAiB,EAAE;YACrB,0HAA0H;YAC1H,8EAA8E;YAC9E,wEAAwE;YACxE,MAAM,IAAI/E,OAAY,aAAA,CACpB,CAAC,iEAAiE,EAAEwD,IAAI,CAAC,CAAC,CAAC,CAC5E,CAAC;QACJ,CAAC;QAED5E,wBAAwB,CAAC4E,IAAI,EAAEX,OAAO,EAAEC,KAAK,EAAEpB,YAAY,EAAEmD,WAAW,CAAC,CAAC;IAC5E,CAAC;IACD,OAAOhC,OAAO,CAAC;AACjB,CAAC;AAGM,SAASjE,wBAAwB,CACtC4E,IAAmB,EACnBX,OAAe,EACfC,KAAa,EACbpB,YAA8B,EAC9BmD,WAAmB,EACb;QAWiB/B,GAA0C;IAVjE,MAAMmC,UAAU,GAAG,CAAC,iEAAiE,EAAEzB,IAAI,CAAC,CAAC,CAAC,AAAC;IAE/F,MAAM0B,gBAAgB,GAAG,CAACrG,OAAe,GAAY;QACnD,MAAM,IAAImB,OAAY,aAAA,CACpB,CAAC,EAAEiF,UAAU,CAAC,gFAAgF,EAAEvD,YAAY,CAACE,IAAI,CAAC,KAAK,CAAC,GACtH/C,OAAO,GACP,CAAC,sBAAsB,EAAEG,MAAK,EAAA,QAAA,CAACmG,SAAS,CAACN,WAAW,CAAC,CAAC,CAAC,CAC1D,CAAC;IACJ,CAAC,AAAC;IAEF,MAAMO,cAAc,GAAGtC,CAAAA,GAA0C,GAA1CA,KAAK,CAACuC,KAAK,+BAA+B,SAAK,GAA/CvC,KAAAA,CAA+C,GAA/CA,GAA0C,AAAE,CAAC,CAAC,CAAC,AAAC;IAEvE,IAAIsC,cAAc,EAAE;QAClBF,gBAAgB,CAAClG,MAAK,EAAA,QAAA,CAACkF,IAAI,CAACkB,cAAc,CAAC,GAAG,MAAM,CAAC,CAAC;IACxD,CAAC;IACD,qFAAqF;IACrF,wEAAwE;IAExEF,gBAAgB,CAACrC,OAAO,GAAG,MAAM,GAAGC,KAAK,CAAC,CAAC;AAC7C,CAAC;AAED,SAASgC,cAAc,CAAC3C,WAAmB,EAAElD,WAAmB,EAAEqG,WAAmB,EAAE;IACrF,MAAM,CAACT,WAAW,EAAEU,aAAa,CAAC,GAAGC,mBAAmB,CAACrD,WAAW,CAAC,AAAC;IAEtEvC,GAAE,EAAA,QAAA,CAAC6F,aAAa,CAACZ,WAAW,EAAE5F,WAAW,CAAC,CAAC;IAC3CW,GAAE,EAAA,QAAA,CAAC6F,aAAa,CAACF,aAAa,EAAED,WAAW,CAAC,CAAC;IAC7C,OAAOT,WAAW,CAAC;AACrB,CAAC;AAED,SAASW,mBAAmB,CAACrD,WAAmB,EAAoB;IAClE,MAAMuD,MAAM,GAAGjG,KAAI,EAAA,QAAA,CAACC,IAAI,CAACyC,WAAW,EAAE,OAAO,CAAC,AAAC;IAC/CwD,IAAAA,IAAe,gBAAA,EAACD,MAAM,CAAC,CAAC;IACxB,OAAO;QAACjG,KAAI,EAAA,QAAA,CAACC,IAAI,CAACgG,MAAM,EAAE,gBAAgB,CAAC;QAAEjG,KAAI,EAAA,QAAA,CAACC,IAAI,CAACgG,MAAM,EAAE,sBAAsB,CAAC;KAAC,CAAC;AAC1F,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/run/ios/XcodeBuild.ts"],"sourcesContent":["import { ExpoRunFormatter } from '@expo/xcpretty';\nimport chalk from 'chalk';\nimport { spawn, SpawnOptionsWithoutStdio } from 'child_process';\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport { BuildProps, ProjectInfo } from './XcodeBuild.types';\nimport { ensureDeviceIsCodeSignedForDeploymentAsync } from './codeSigning/configureCodeSigning';\nimport { simulatorBuildRequiresCodeSigning } from './codeSigning/simulatorCodeSigning';\nimport * as Log from '../../log';\nimport { ensureDirectory } from '../../utils/dir';\nimport { env } from '../../utils/env';\nimport { AbortCommandError, CommandError } from '../../utils/errors';\nimport { getUserTerminal } from '../../utils/terminal';\nexport function logPrettyItem(message: string) {\n  Log.log(chalk`{whiteBright \\u203A} ${message}`);\n}\n\nexport function matchEstimatedBinaryPath(buildOutput: string): string | null {\n  // Match the full path that contains `/(.*)/Developer/Xcode/DerivedData/(.*)/Build/Products/(.*)/(.*).app`\n  const appBinaryPathMatch = buildOutput.match(\n    /(\\/(?:\\\\\\s|[^ ])+\\/Developer\\/Xcode\\/DerivedData\\/(?:\\\\\\s|[^ ])+\\/Build\\/Products\\/(?:Debug|Release)-(?:[^\\s/]+)\\/(?:\\\\\\s|[^ ])+\\.app)/\n  );\n  if (!appBinaryPathMatch?.length) {\n    throw new CommandError(\n      'XCODE_BUILD',\n      `Malformed xcodebuild results: app binary path was not generated in build output. Please report this issue and run your project with Xcode instead.`\n    );\n  } else {\n    // Sort for the shortest\n    const shortestPath = (appBinaryPathMatch.filter((a) => typeof a === 'string' && a) as string[])\n      .sort((a: string, b: string) => a.length - b.length)[0]\n      .trim();\n\n    Log.debug(`Found app binary path: ${shortestPath}`);\n    return shortestPath;\n  }\n}\n/**\n *\n * @returns '/Users/evanbacon/Library/Developer/Xcode/DerivedData/myapp-gpgjqjodrxtervaufttwnsgimhrx/Build/Products/Debug-iphonesimulator/myapp.app'\n */\nexport function getAppBinaryPath(buildOutput: string) {\n  // Matches what's used in \"Bundle React Native code and images\" script.\n  // Requires that `-hideShellScriptEnvironment` is not included in the build command (extra logs).\n\n  try {\n    // Like `\\=/Users/evanbacon/Library/Developer/Xcode/DerivedData/Exponent-anpuosnglkxokahjhfszejloqfvo/Build/Products/Debug-iphonesimulator`\n    const CONFIGURATION_BUILD_DIR = extractEnvVariableFromBuild(\n      buildOutput,\n      'CONFIGURATION_BUILD_DIR'\n    ).sort(\n      // Longer name means more suffixes, we want the shortest possible one to be first.\n      // Massive projects (like Expo Go) can sometimes print multiple different sets of environment variables.\n      // This can become an issue with some\n      (a, b) => a.length - b.length\n    );\n    // Like `Exponent.app`\n    const UNLOCALIZED_RESOURCES_FOLDER_PATH = extractEnvVariableFromBuild(\n      buildOutput,\n      'UNLOCALIZED_RESOURCES_FOLDER_PATH'\n    );\n\n    const binaryPath = path.join(\n      // Use the shortest defined env variable (usually there's just one).\n      CONFIGURATION_BUILD_DIR[0],\n      // Use the last defined env variable.\n      UNLOCALIZED_RESOURCES_FOLDER_PATH[UNLOCALIZED_RESOURCES_FOLDER_PATH.length - 1]\n    );\n\n    // If the app has a space in the name it'll fail because it isn't escaped properly by Xcode.\n    return getEscapedPath(binaryPath);\n  } catch (error) {\n    if (error instanceof CommandError && error.code === 'XCODE_BUILD') {\n      const possiblePath = matchEstimatedBinaryPath(buildOutput);\n      if (possiblePath) {\n        return possiblePath;\n      }\n    }\n    throw error;\n  }\n}\n\nexport function getEscapedPath(filePath: string): string {\n  if (fs.existsSync(filePath)) {\n    return filePath;\n  }\n  const unescapedPath = filePath.split(/\\\\ /).join(' ');\n  if (fs.existsSync(unescapedPath)) {\n    return unescapedPath;\n  }\n  throw new CommandError(\n    'XCODE_BUILD',\n    `Unexpected: Generated app at path \"${filePath}\" cannot be read, the app cannot be installed. Please report this and build onto a simulator.`\n  );\n}\n\nexport function extractEnvVariableFromBuild(buildOutput: string, variableName: string) {\n  // Xcode can sometimes escape `=` with a backslash or put the value in quotes\n  const reg = new RegExp(`export ${variableName}\\\\\\\\?=(.*)$`, 'mg');\n  const matched = [...buildOutput.matchAll(reg)];\n\n  if (!matched || !matched.length) {\n    throw new CommandError(\n      'XCODE_BUILD',\n      `Malformed xcodebuild results: \"${variableName}\" variable was not generated in build output. Please report this issue and run your project with Xcode instead.`\n    );\n  }\n  return matched.map((value) => value[1]).filter(Boolean) as string[];\n}\n\nexport function getProcessOptions({\n  packager,\n  shouldSkipInitialBundling,\n  terminal,\n  port,\n  eagerBundleOptions,\n}: {\n  packager: boolean;\n  shouldSkipInitialBundling?: boolean;\n  terminal: string | undefined;\n  port: number;\n  eagerBundleOptions?: string;\n}): SpawnOptionsWithoutStdio {\n  const SKIP_BUNDLING = shouldSkipInitialBundling ? '1' : undefined;\n  if (packager) {\n    return {\n      env: {\n        ...process.env,\n        RCT_TERMINAL: terminal,\n        SKIP_BUNDLING,\n        RCT_METRO_PORT: port.toString(),\n        __EXPO_EAGER_BUNDLE_OPTIONS: eagerBundleOptions,\n      },\n    };\n  }\n\n  return {\n    env: {\n      ...process.env,\n      RCT_TERMINAL: terminal,\n      SKIP_BUNDLING,\n      __EXPO_EAGER_BUNDLE_OPTIONS: eagerBundleOptions,\n      // Always skip launching the packager from a build script.\n      // The script is used for people building their project directly from Xcode.\n      // This essentially means \"› Running script 'Start Packager'\" does nothing.\n      RCT_NO_LAUNCH_PACKAGER: 'true',\n      // FORCE_BUNDLING: '0'\n    },\n  };\n}\n\nexport async function getXcodeBuildArgsAsync(\n  props: Pick<\n    BuildProps,\n    | 'buildCache'\n    | 'projectRoot'\n    | 'xcodeProject'\n    | 'configuration'\n    | 'scheme'\n    | 'device'\n    | 'isSimulator'\n  >\n): Promise<string[]> {\n  const args = [\n    props.xcodeProject.isWorkspace ? '-workspace' : '-project',\n    props.xcodeProject.name,\n    '-configuration',\n    props.configuration,\n    '-scheme',\n    props.scheme,\n    '-destination',\n    `id=${props.device.udid}`,\n  ];\n\n  if (!props.isSimulator || simulatorBuildRequiresCodeSigning(props.projectRoot)) {\n    const developmentTeamId = await ensureDeviceIsCodeSignedForDeploymentAsync(props.projectRoot);\n    if (developmentTeamId) {\n      args.push(\n        `DEVELOPMENT_TEAM=${developmentTeamId}`,\n        '-allowProvisioningUpdates',\n        '-allowProvisioningDeviceRegistration'\n      );\n    }\n  }\n\n  // Add last\n  if (props.buildCache === false) {\n    args.push(\n      // Will first clean the derived data folder.\n      'clean',\n      // Then build step must be added otherwise the process will simply clean and exit.\n      'build'\n    );\n  }\n  return args;\n}\n\nfunction spawnXcodeBuild(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { onData }: { onData: (data: string) => void }\n): Promise<{ code: number | null; results: string; error: string }> {\n  const buildProcess = spawn('xcodebuild', args, options);\n\n  let results = '';\n  let error = '';\n\n  buildProcess.stdout.on('data', (data: Buffer) => {\n    const stringData = data.toString();\n    results += stringData;\n    onData(stringData);\n  });\n\n  buildProcess.stderr.on('data', (data: Buffer) => {\n    const stringData = data instanceof Buffer ? data.toString() : data;\n    error += stringData;\n  });\n\n  return new Promise(async (resolve, reject) => {\n    buildProcess.on('close', (code: number) => {\n      resolve({ code, results, error });\n    });\n  });\n}\n\nasync function spawnXcodeBuildWithFlush(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { onFlush }: { onFlush: (data: string) => void }\n): Promise<{ code: number | null; results: string; error: string }> {\n  let currentBuffer = '';\n\n  // Data can be sent in chunks that would have no relevance to our regex\n  // this can cause massive slowdowns, so we need to ensure the data is complete before attempting to parse it.\n  function flushBuffer() {\n    if (!currentBuffer) {\n      return;\n    }\n\n    const data = currentBuffer;\n    // Reset buffer.\n    currentBuffer = '';\n    // Process data.\n    onFlush(data);\n  }\n\n  const data = await spawnXcodeBuild(args, options, {\n    onData(stringData) {\n      currentBuffer += stringData;\n      // Only flush the data if we have a full line.\n      if (currentBuffer.endsWith(os.EOL)) {\n        flushBuffer();\n      }\n    },\n  });\n\n  // Flush log data at the end just in case we missed something.\n  flushBuffer();\n  return data;\n}\n\nasync function spawnXcodeBuildWithFormat(\n  args: string[],\n  options: SpawnOptionsWithoutStdio,\n  { projectRoot, xcodeProject }: { projectRoot: string; xcodeProject: ProjectInfo }\n): Promise<{ code: number | null; results: string; error: string; formatter: ExpoRunFormatter }> {\n  Log.debug(`  xcodebuild ${args.join(' ')}`);\n\n  logPrettyItem(chalk.bold`Planning build`);\n\n  const formatter = ExpoRunFormatter.create(projectRoot, {\n    xcodeProject,\n    isDebug: env.EXPO_DEBUG,\n  });\n\n  const results = await spawnXcodeBuildWithFlush(args, options, {\n    onFlush(data) {\n      // Process data.\n      for (const line of formatter.pipe(data)) {\n        // Log parsed results.\n        Log.log(line);\n      }\n    },\n  });\n\n  Log.debug(`Exited with code: ${results.code}`);\n\n  if (\n    // User cancelled with ctrl-c\n    results.code === null ||\n    // Build interrupted\n    results.code === 75\n  ) {\n    throw new AbortCommandError();\n  }\n\n  Log.log(formatter.getBuildSummary());\n\n  return { ...results, formatter };\n}\n\nexport async function buildAsync(props: BuildProps): Promise<string> {\n  const args = await getXcodeBuildArgsAsync(props);\n\n  const { projectRoot, xcodeProject, shouldSkipInitialBundling, port, eagerBundleOptions } = props;\n\n  const { code, results, formatter, error } = await spawnXcodeBuildWithFormat(\n    args,\n    getProcessOptions({\n      packager: false,\n      terminal: getUserTerminal(),\n      shouldSkipInitialBundling,\n      port,\n      eagerBundleOptions,\n    }),\n    {\n      projectRoot,\n      xcodeProject,\n    }\n  );\n\n  const logFilePath = writeBuildLogs(projectRoot, results, error);\n\n  if (code !== 0) {\n    // Determine if the logger found any errors;\n    const wasErrorPresented = !!formatter.errors.length;\n\n    if (wasErrorPresented) {\n      // This has a flaw, if the user is missing a file, and there is a script error, only the missing file error will be shown.\n      // They will only see the script error if they fix the missing file and rerun.\n      // The flaw can be fixed by catching script errors in the custom logger.\n      throw new CommandError(\n        `Failed to build iOS project. \"xcodebuild\" exited with error code ${code}.`\n      );\n    }\n\n    _assertXcodeBuildResults(code, results, error, xcodeProject, logFilePath);\n  }\n  return results;\n}\n\n// Exposed for testing.\nexport function _assertXcodeBuildResults(\n  code: number | null,\n  results: string,\n  error: string,\n  xcodeProject: { name: string },\n  logFilePath: string\n): void {\n  const errorTitle = `Failed to build iOS project. \"xcodebuild\" exited with error code ${code}.`;\n\n  const throwWithMessage = (message: string): never => {\n    throw new CommandError(\n      `${errorTitle}\\nTo view more error logs, try building the app with Xcode directly, by opening ${xcodeProject.name}.\\n\\n` +\n        message +\n        `Build logs written to ${chalk.underline(logFilePath)}`\n    );\n  };\n\n  const localizedError = error.match(/NSLocalizedFailure = \"(.*)\"/)?.[1];\n\n  if (localizedError) {\n    throwWithMessage(chalk.bold(localizedError) + '\\n\\n');\n  }\n  // Show all the log info because often times the error is coming from a shell script,\n  // that invoked a node script, that started metro, which threw an error.\n\n  throwWithMessage(results + '\\n\\n' + error);\n}\n\nfunction writeBuildLogs(projectRoot: string, buildOutput: string, errorOutput: string) {\n  const [logFilePath, errorFilePath] = getErrorLogFilePath(projectRoot);\n\n  fs.writeFileSync(logFilePath, buildOutput);\n  fs.writeFileSync(errorFilePath, errorOutput);\n  return logFilePath;\n}\n\nfunction getErrorLogFilePath(projectRoot: string): [string, string] {\n  const folder = path.join(projectRoot, '.expo');\n  ensureDirectory(folder);\n  return [path.join(folder, 'xcodebuild.log'), path.join(folder, 'xcodebuild-error.log')];\n}\n"],"names":["logPrettyItem","matchEstimatedBinaryPath","getAppBinaryPath","getEscapedPath","extractEnvVariableFromBuild","getProcessOptions","getXcodeBuildArgsAsync","buildAsync","_assertXcodeBuildResults","message","Log","log","chalk","buildOutput","appBinaryPathMatch","match","length","CommandError","shortestPath","filter","a","sort","b","trim","debug","CONFIGURATION_BUILD_DIR","UNLOCALIZED_RESOURCES_FOLDER_PATH","binaryPath","path","join","error","code","possiblePath","filePath","fs","existsSync","unescapedPath","split","variableName","reg","RegExp","matched","matchAll","map","value","Boolean","packager","shouldSkipInitialBundling","terminal","port","eagerBundleOptions","SKIP_BUNDLING","undefined","env","process","RCT_TERMINAL","RCT_METRO_PORT","toString","__EXPO_EAGER_BUNDLE_OPTIONS","RCT_NO_LAUNCH_PACKAGER","props","args","xcodeProject","isWorkspace","name","configuration","scheme","device","udid","isSimulator","simulatorBuildRequiresCodeSigning","projectRoot","developmentTeamId","ensureDeviceIsCodeSignedForDeploymentAsync","push","buildCache","spawnXcodeBuild","options","onData","buildProcess","spawn","results","stdout","on","data","stringData","stderr","Buffer","Promise","resolve","reject","spawnXcodeBuildWithFlush","onFlush","currentBuffer","flushBuffer","endsWith","os","EOL","spawnXcodeBuildWithFormat","bold","formatter","ExpoRunFormatter","create","isDebug","EXPO_DEBUG","line","pipe","AbortCommandError","getBuildSummary","getUserTerminal","logFilePath","writeBuildLogs","wasErrorPresented","errors","errorTitle","throwWithMessage","underline","localizedError","errorOutput","errorFilePath","getErrorLogFilePath","writeFileSync","folder","ensureDirectory"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/serve/serveAsync.js b/node_modules/@expo/cli/build/src/serve/serveAsync.js
index bca09f9..817fff7 100644
--- a/node_modules/@expo/cli/build/src/serve/serveAsync.js
+++ b/node_modules/@expo/cli/build/src/serve/serveAsync.js
@@ -51,6 +51,7 @@ function _send() {
 const _log = /*#__PURE__*/ _interopRequireWildcard(require("../log"));
 const _dir = require("../utils/dir");
 const _errors = require("../utils/errors");
+const _findUp = require("../utils/findUp");
 const _nodeEnv = require("../utils/nodeEnv");
 const _port = require("../utils/port");
 function _interopRequireDefault(obj) {
@@ -98,7 +99,8 @@ function _interopRequireWildcard(obj, nodeInterop) {
     return newObj;
 }
 const debug = require("debug")("expo:serve");
-async function serveAsync(projectRoot, options) {
+async function serveAsync(inputDir, options) {
+    const projectRoot = (0, _findUp.findUpProjectRootOrAssert)(inputDir);
     (0, _nodeEnv.setNodeEnv)("production");
     require("@expo/env").load(projectRoot);
     const port = await (0, _port.resolvePortAsync)(projectRoot, {
@@ -109,7 +111,7 @@ async function serveAsync(projectRoot, options) {
         throw new _errors.CommandError("Could not start server. Port is not available.");
     }
     options.port = port;
-    const serverDist = options.isDefaultDirectory ? _path().default.join(projectRoot, "dist") : projectRoot;
+    const serverDist = options.isDefaultDirectory ? _path().default.join(inputDir, "dist") : inputDir;
     //  TODO: `.expo/server/ios`, `.expo/server/android`, etc.
     if (!await (0, _dir.directoryExistsAsync)(serverDist)) {
         throw new _errors.CommandError(`The server directory ${serverDist} does not exist. Run \`npx expo export\` first.`);
diff --git a/node_modules/@expo/cli/build/src/serve/serveAsync.js.map b/node_modules/@expo/cli/build/src/serve/serveAsync.js.map
index ee9e86c..0e2e20a 100644
--- a/node_modules/@expo/cli/build/src/serve/serveAsync.js.map
+++ b/node_modules/@expo/cli/build/src/serve/serveAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/serve/serveAsync.ts"],"sourcesContent":["import { createRequestHandler } from '@expo/server/build/vendor/http';\nimport chalk from 'chalk';\nimport connect from 'connect';\nimport http from 'http';\nimport path from 'path';\nimport send from 'send';\n\nimport * as Log from '../log';\nimport { directoryExistsAsync, fileExistsAsync } from '../utils/dir';\nimport { CommandError } from '../utils/errors';\nimport { setNodeEnv } from '../utils/nodeEnv';\nimport { resolvePortAsync } from '../utils/port';\n\ntype Options = {\n  port?: number;\n  isDefaultDirectory: boolean;\n};\n\nconst debug = require('debug')('expo:serve') as typeof console.log;\n\n// Start a basic http server\nexport async function serveAsync(projectRoot: string, options: Options) {\n  setNodeEnv('production');\n  require('@expo/env').load(projectRoot);\n\n  const port = await resolvePortAsync(projectRoot, {\n    defaultPort: options.port,\n    fallbackPort: 8081,\n  });\n\n  if (port == null) {\n    throw new CommandError('Could not start server. Port is not available.');\n  }\n  options.port = port;\n\n  const serverDist = options.isDefaultDirectory ? path.join(projectRoot, 'dist') : projectRoot;\n  //  TODO: `.expo/server/ios`, `.expo/server/android`, etc.\n\n  if (!(await directoryExistsAsync(serverDist))) {\n    throw new CommandError(\n      `The server directory ${serverDist} does not exist. Run \\`npx expo export\\` first.`\n    );\n  }\n\n  const isStatic = await isStaticExportAsync(serverDist);\n\n  Log.log(chalk.dim(`Starting ${isStatic ? 'static ' : ''}server in ${serverDist}`));\n\n  if (isStatic) {\n    await startStaticServerAsync(serverDist, options);\n  } else {\n    await startDynamicServerAsync(serverDist, options);\n  }\n  Log.log(`Server running at http://localhost:${options.port}`);\n  // Detect the type of server we need to setup:\n}\n\nasync function startStaticServerAsync(dist: string, options: Options) {\n  const server = http.createServer((req, res) => {\n    // Remove query strings and decode URI\n    const filePath = decodeURI(req.url?.split('?')[0] ?? '');\n\n    send(req, filePath, {\n      root: dist,\n      index: 'index.html',\n    })\n      .on('error', (err: any) => {\n        if (err.status === 404) {\n          res.statusCode = 404;\n          res.end('Not Found');\n          return;\n        }\n        res.statusCode = err.status || 500;\n        res.end('Internal Server Error');\n      })\n      .pipe(res);\n  });\n\n  server.listen(options.port!);\n}\n\nasync function startDynamicServerAsync(dist: string, options: Options) {\n  const middleware = connect();\n\n  const staticDirectory = path.join(dist, 'client');\n  const serverDirectory = path.join(dist, 'server');\n\n  const serverHandler = createRequestHandler({ build: serverDirectory });\n\n  // DOM component CORS support\n  middleware.use((req, res, next) => {\n    // TODO: Only when origin is `file://` (iOS), and Android equivalent.\n\n    // Required for DOM components security in release builds.\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      'Origin, X-Requested-With, Content-Type, Accept, expo-platform'\n    );\n\n    // Handle OPTIONS preflight requests\n    if (req.method === 'OPTIONS') {\n      res.statusCode = 200;\n      res.end();\n      return;\n    }\n    next();\n  });\n\n  middleware.use((req, res, next) => {\n    if (!req?.url || (req.method !== 'GET' && req.method !== 'HEAD')) {\n      return next();\n    }\n\n    const pathname = canParseURL(req.url) ? new URL(req.url).pathname : req.url;\n    if (!pathname) {\n      return next();\n    }\n\n    debug(`Maybe serve static:`, pathname);\n\n    const stream = send(req, pathname, {\n      root: staticDirectory,\n      extensions: ['html'],\n    });\n\n    // add file listener for fallthrough\n    let forwardError = false;\n    stream.on('file', function onFile() {\n      // once file is determined, always forward error\n      forwardError = true;\n    });\n\n    // forward errors\n    stream.on('error', function error(err: any) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err);\n        return;\n      }\n\n      next();\n    });\n\n    // pipe\n    stream.pipe(res);\n  });\n\n  middleware.use(serverHandler);\n\n  middleware.listen(options.port!);\n}\n\nfunction canParseURL(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nasync function isStaticExportAsync(dist: string): Promise<boolean> {\n  const routesFile = path.join(dist, `server/_expo/routes.json`);\n  return !(await fileExistsAsync(routesFile));\n}\n"],"names":["serveAsync","debug","require","projectRoot","options","setNodeEnv","load","port","resolvePortAsync","defaultPort","fallbackPort","CommandError","serverDist","isDefaultDirectory","path","join","directoryExistsAsync","isStatic","isStaticExportAsync","Log","log","chalk","dim","startStaticServerAsync","startDynamicServerAsync","dist","server","http","createServer","req","res","filePath","decodeURI","url","split","send","root","index","on","err","status","statusCode","end","pipe","listen","middleware","connect","staticDirectory","serverDirectory","serverHandler","createRequestHandler","build","use","next","setHeader","method","pathname","canParseURL","URL","stream","extensions","forwardError","onFile","error","routesFile","fileExistsAsync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/serve/serveAsync.ts"],"sourcesContent":["import { createRequestHandler } from '@expo/server/build/vendor/http';\nimport chalk from 'chalk';\nimport connect from 'connect';\nimport http from 'http';\nimport path from 'path';\nimport send from 'send';\n\nimport * as Log from '../log';\nimport { directoryExistsAsync, fileExistsAsync } from '../utils/dir';\nimport { CommandError } from '../utils/errors';\nimport { findUpProjectRootOrAssert } from '../utils/findUp';\nimport { setNodeEnv } from '../utils/nodeEnv';\nimport { resolvePortAsync } from '../utils/port';\n\ntype Options = {\n  port?: number;\n  isDefaultDirectory: boolean;\n};\n\nconst debug = require('debug')('expo:serve') as typeof console.log;\n\n// Start a basic http server\nexport async function serveAsync(inputDir: string, options: Options) {\n  const projectRoot = findUpProjectRootOrAssert(inputDir);\n\n  setNodeEnv('production');\n  require('@expo/env').load(projectRoot);\n\n  const port = await resolvePortAsync(projectRoot, {\n    defaultPort: options.port,\n    fallbackPort: 8081,\n  });\n\n  if (port == null) {\n    throw new CommandError('Could not start server. Port is not available.');\n  }\n  options.port = port;\n\n  const serverDist = options.isDefaultDirectory ? path.join(inputDir, 'dist') : inputDir;\n  //  TODO: `.expo/server/ios`, `.expo/server/android`, etc.\n\n  if (!(await directoryExistsAsync(serverDist))) {\n    throw new CommandError(\n      `The server directory ${serverDist} does not exist. Run \\`npx expo export\\` first.`\n    );\n  }\n\n  const isStatic = await isStaticExportAsync(serverDist);\n\n  Log.log(chalk.dim(`Starting ${isStatic ? 'static ' : ''}server in ${serverDist}`));\n\n  if (isStatic) {\n    await startStaticServerAsync(serverDist, options);\n  } else {\n    await startDynamicServerAsync(serverDist, options);\n  }\n  Log.log(`Server running at http://localhost:${options.port}`);\n  // Detect the type of server we need to setup:\n}\n\nasync function startStaticServerAsync(dist: string, options: Options) {\n  const server = http.createServer((req, res) => {\n    // Remove query strings and decode URI\n    const filePath = decodeURI(req.url?.split('?')[0] ?? '');\n\n    send(req, filePath, {\n      root: dist,\n      index: 'index.html',\n    })\n      .on('error', (err: any) => {\n        if (err.status === 404) {\n          res.statusCode = 404;\n          res.end('Not Found');\n          return;\n        }\n        res.statusCode = err.status || 500;\n        res.end('Internal Server Error');\n      })\n      .pipe(res);\n  });\n\n  server.listen(options.port!);\n}\n\nasync function startDynamicServerAsync(dist: string, options: Options) {\n  const middleware = connect();\n\n  const staticDirectory = path.join(dist, 'client');\n  const serverDirectory = path.join(dist, 'server');\n\n  const serverHandler = createRequestHandler({ build: serverDirectory });\n\n  // DOM component CORS support\n  middleware.use((req, res, next) => {\n    // TODO: Only when origin is `file://` (iOS), and Android equivalent.\n\n    // Required for DOM components security in release builds.\n\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      'Origin, X-Requested-With, Content-Type, Accept, expo-platform'\n    );\n\n    // Handle OPTIONS preflight requests\n    if (req.method === 'OPTIONS') {\n      res.statusCode = 200;\n      res.end();\n      return;\n    }\n    next();\n  });\n\n  middleware.use((req, res, next) => {\n    if (!req?.url || (req.method !== 'GET' && req.method !== 'HEAD')) {\n      return next();\n    }\n\n    const pathname = canParseURL(req.url) ? new URL(req.url).pathname : req.url;\n    if (!pathname) {\n      return next();\n    }\n\n    debug(`Maybe serve static:`, pathname);\n\n    const stream = send(req, pathname, {\n      root: staticDirectory,\n      extensions: ['html'],\n    });\n\n    // add file listener for fallthrough\n    let forwardError = false;\n    stream.on('file', function onFile() {\n      // once file is determined, always forward error\n      forwardError = true;\n    });\n\n    // forward errors\n    stream.on('error', function error(err: any) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err);\n        return;\n      }\n\n      next();\n    });\n\n    // pipe\n    stream.pipe(res);\n  });\n\n  middleware.use(serverHandler);\n\n  middleware.listen(options.port!);\n}\n\nfunction canParseURL(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nasync function isStaticExportAsync(dist: string): Promise<boolean> {\n  const routesFile = path.join(dist, `server/_expo/routes.json`);\n  return !(await fileExistsAsync(routesFile));\n}\n"],"names":["serveAsync","debug","require","inputDir","options","projectRoot","findUpProjectRootOrAssert","setNodeEnv","load","port","resolvePortAsync","defaultPort","fallbackPort","CommandError","serverDist","isDefaultDirectory","path","join","directoryExistsAsync","isStatic","isStaticExportAsync","Log","log","chalk","dim","startStaticServerAsync","startDynamicServerAsync","dist","server","http","createServer","req","res","filePath","decodeURI","url","split","send","root","index","on","err","status","statusCode","end","pipe","listen","middleware","connect","staticDirectory","serverDirectory","serverHandler","createRequestHandler","build","use","next","setHeader","method","pathname","canParseURL","URL","stream","extensions","forwardError","onFile","error","routesFile","fileExistsAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js b/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js
index 042adc9..617cd1f 100644
--- a/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js
+++ b/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js
@@ -21,13 +21,6 @@ _export(exports, {
     hasDevicectlEverBeenInstalled: ()=>hasDevicectlEverBeenInstalled,
     installAndLaunchAppAsync: ()=>installAndLaunchAppAsync
 });
-function _getUserState() {
-    const data = require("@expo/config/build/getUserState");
-    _getUserState = function() {
-        return data;
-    };
-    return data;
-}
 function _jsonFile() {
     const data = /*#__PURE__*/ _interopRequireDefault(require("@expo/json-file"));
     _jsonFile = function() {
@@ -85,6 +78,7 @@ function _path() {
     return data;
 }
 const _xcrun = require("./xcrun");
+const _userSettings = require("../../../api/user/UserSettings");
 const _log = /*#__PURE__*/ _interopRequireWildcard(require("../../../log"));
 const _createTempPath = require("../../../utils/createTempPath");
 const _errors = require("../../../utils/errors");
@@ -136,7 +130,7 @@ function _interopRequireWildcard(obj, nodeInterop) {
     }
     return newObj;
 }
-const DEVICE_CTL_EXISTS_PATH = _path().default.join((0, _getUserState().getExpoHomeDirectory)(), "devicectl-exists");
+const DEVICE_CTL_EXISTS_PATH = _path().default.join((0, _userSettings.getExpoHomeDirectory)(), "devicectl-exists");
 const debug = require("debug")("expo:devicectl");
 async function devicectlAsync(args, options) {
     try {
diff --git a/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js.map b/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js.map
index 652813f..079574a 100644
--- a/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js.map
+++ b/node_modules/@expo/cli/build/src/start/platforms/ios/devicectl.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/platforms/ios/devicectl.ts"],"sourcesContent":["/**\n * Copyright © 2024 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport JsonFile from '@expo/json-file';\nimport spawnAsync, { SpawnOptions, SpawnResult } from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport { spawn, execSync } from 'child_process';\nimport fs from 'fs';\nimport assert from 'node:assert';\nimport { Ora } from 'ora';\nimport { EOL } from 'os';\nimport path from 'path';\n\nimport { xcrunAsync } from './xcrun';\nimport * as Log from '../../../log';\nimport { createTempFilePath } from '../../../utils/createTempPath';\nimport { CommandError } from '../../../utils/errors';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { ora } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\n\nconst DEVICE_CTL_EXISTS_PATH = path.join(getExpoHomeDirectory(), 'devicectl-exists');\n\nconst debug = require('debug')('expo:devicectl') as typeof console.log;\n\ntype AnyEnum<T extends string = string> = T | (string & object);\n\ntype DeviceCtlDevice = {\n  capabilities: DeviceCtlDeviceCapability[];\n  connectionProperties: DeviceCtlConnectionProperties;\n  deviceProperties: DeviceCtlDeviceProperties;\n  hardwareProperties: DeviceCtlHardwareProperties;\n  /** \"A1A1AAA1-0011-1AA1-11A1-10A1111AA11A\" */\n  identifier: string;\n  visibilityClass: AnyEnum<'default'>;\n};\n\ntype DeviceCtlHardwareProperties = {\n  cpuType: DeviceCtlCpuType;\n  deviceType: AnyEnum<'iPhone'>;\n  /** 1114404411111111 */\n  ecid: number;\n  /** \"D74AP\" */\n  hardwareModel: string;\n  /** 512000000000 */\n  internalStorageCapacity: number;\n  /** true */\n  isProductionFused: boolean;\n  /** \"iPhone 14 Pro Max\" */\n  marketingName: string;\n  /** \"iOS\" */\n  platform: AnyEnum<'iOS' | 'xrOS'>;\n  /** \"iPhone15,3\" */\n  productType: AnyEnum<'iPhone13,4' | 'iPhone15,3'>;\n  reality: AnyEnum<'physical'>;\n  /** \"X2X1CC1XXX\" */\n  serialNumber: string;\n  supportedCPUTypes: DeviceCtlCpuType[];\n  /** [1] */\n  supportedDeviceFamilies: number[];\n  thinningProductType: AnyEnum<'iPhone15,3'>;\n  /** \"00001110-001111110110101A\" */\n  udid: string;\n};\n\ntype DeviceCtlDeviceProperties = {\n  /** true */\n  bootedFromSnapshot: boolean;\n  /** \"com.apple.os.update-AD0CF111ACFF11A11111A76A3D1262AE42A3F56F305AF5AE1135393A7A14A7D1\" */\n  bootedSnapshotName: string;\n  /** false */\n  ddiServicesAvailable: boolean;\n\n  developerModeStatus: AnyEnum<'enabled'>;\n  /** false */\n  hasInternalOSBuild: boolean;\n  /** \"Evan's phone\" */\n  name: string;\n  /** \"21E236\" */\n  osBuildUpdate: string;\n  /** \"17.4.1\" */\n  osVersionNumber: string;\n  /** false */\n  rootFileSystemIsWritable: boolean;\n};\n\ntype DeviceCtlDeviceCapability =\n  | {\n      name: AnyEnum;\n      featureIdentifier: AnyEnum;\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.connectdevice';\n      name: 'Connect to Device';\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.unpairdevice';\n      name: 'Unpair Device';\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.acquireusageassertion';\n      name: 'Acquire Usage Assertion';\n    };\n\ntype DeviceCtlConnectionProperties = {\n  authenticationType: AnyEnum<'manualPairing'>;\n  isMobileDeviceOnly: boolean;\n  /** \"2024-04-20T22:50:04.244Z\" */\n  lastConnectionDate: string;\n  pairingState: AnyEnum<'paired'>;\n  /** [\"00001111-001111110110101A.coredevice.local\", \"A1A1AAA1-0011-1AA1-11A1-10A1111AA11A.coredevice.local\"] */\n  potentialHostnames: string[];\n  transportType: AnyEnum<'localNetwork' | 'wired'>;\n  tunnelState: AnyEnum<'disconnected' | 'unavailable'>;\n  tunnelTransportProtocol: AnyEnum<'tcp'>;\n};\n\ntype DeviceCtlCpuType = {\n  name: AnyEnum<'arm64e' | 'arm64' | 'arm64_32'>;\n  subType: number;\n  /** 16777228 */\n  type: number;\n};\n\n/** Run a `devicectl` command. */\nexport async function devicectlAsync(\n  args: (string | undefined)[],\n  options?: SpawnOptions\n): Promise<SpawnResult> {\n  try {\n    return await xcrunAsync(['devicectl', ...args], options);\n  } catch (error: any) {\n    if (error instanceof CommandError) {\n      throw error;\n    }\n    if ('stderr' in error) {\n      const errorCodes = getDeviceCtlErrorCodes(error.stderr);\n      if (errorCodes.includes('Locked')) {\n        throw new CommandError('APPLE_DEVICE_LOCKED', 'Device is locked, unlock and try again.');\n      }\n    }\n    throw error;\n  }\n}\n\nexport async function getConnectedAppleDevicesAsync() {\n  if (!hasDevicectlEverBeenInstalled()) {\n    debug('devicectl not found, skipping remote Apple devices.');\n    return [];\n  }\n\n  const tmpPath = createTempFilePath();\n  const devices = await devicectlAsync([\n    'list',\n    'devices',\n    '--json-output',\n    tmpPath,\n    // Give two seconds before timing out: between 5 and 9223372036854775807\n    '--timeout',\n    '5',\n  ]);\n  debug(devices.stdout);\n  const devicesJson = await JsonFile.readAsync(tmpPath);\n\n  if ((devicesJson as any)?.info?.jsonVersion !== 2) {\n    Log.warn(\n      'Unexpected devicectl JSON version output from devicectl. Connecting to physical Apple devices may not work as expected.'\n    );\n  }\n\n  assertDevicesJson(devicesJson);\n\n  return devicesJson.result.devices as DeviceCtlDevice[];\n}\n\nfunction assertDevicesJson(\n  results: any\n): asserts results is { result: { devices: DeviceCtlDevice[] } } {\n  assert(\n    results != null && 'result' in results && Array.isArray(results?.result?.devices),\n    'Malformed JSON output from devicectl: ' + JSON.stringify(results, null, 2)\n  );\n}\n\nexport async function launchBinaryOnMacAsync(\n  bundleId: string,\n  appBinaryPath: string\n): Promise<void> {\n  const args = ['-b', bundleId, appBinaryPath];\n  try {\n    await spawnAsync('open', args);\n  } catch (error: any) {\n    if ('code' in error) {\n      if (error.code === 1) {\n        throw new CommandError(\n          'MACOS_LAUNCH',\n          'Failed to launch the compatible binary on macOS: open ' +\n            args.join(' ') +\n            '\\n\\n' +\n            error.message\n        );\n      }\n    }\n    throw error;\n  }\n}\n\nasync function installAppWithDeviceCtlAsync(\n  uuid: string,\n  bundleIdOrAppPath: string,\n  onProgress: (event: { status: string; isComplete: boolean; progress: number }) => void\n): Promise<void> {\n  // 𝝠 xcrun devicectl device install app --device 00001110-001111110110101A /Users/evanbacon/Library/Developer/Xcode/DerivedData/Router-hgbqaxzhrhkiftfweydvhgttadvn/Build/Products/Debug-iphoneos/Router.app --verbose\n  return new Promise((resolve, reject) => {\n    const args: string[] = [\n      'devicectl',\n      'device',\n      'install',\n      'app',\n      '--device',\n      uuid,\n      bundleIdOrAppPath,\n    ];\n    const childProcess = spawn('xcrun', args);\n    debug('xcrun ' + args.join(' '));\n\n    let currentProgress = 0;\n    let hasStarted = false;\n\n    function updateProgress(progress: number) {\n      hasStarted = true;\n      if (progress <= currentProgress) {\n        return;\n      }\n      currentProgress = progress;\n      onProgress({\n        progress,\n        isComplete: progress === 100,\n        status: 'Installing',\n      });\n    }\n\n    childProcess.stdout.on('data', (data: Buffer) => {\n      // Sometimes more than one chunk comes at a time, here we split by system newline,\n      // then trim and filter.\n      const strings = data\n        .toString()\n        .split(EOL)\n        .map((value) => value.trim());\n\n      strings.forEach((str) => {\n        // Match the progress percentage:\n        // - '34%... 35%...' -> 34\n        // - '31%...' -> 31\n        // - 'Complete!' -> 100\n\n        const match = str.match(/(\\d+)%\\.\\.\\./);\n        if (match) {\n          updateProgress(parseInt(match[1], 10));\n        } else if (hasStarted) {\n          updateProgress(100);\n        }\n      });\n\n      debug('[stdout]:', strings);\n    });\n\n    childProcess.on('close', (code) => {\n      debug('[close]: ' + code);\n      if (code === 0) {\n        resolve();\n      } else {\n        const stderr = childProcess.stderr.read();\n        const err = new Error(stderr);\n        (err as any).code = code;\n        detach(err);\n      }\n    });\n\n    const detach = async (err?: Error) => {\n      off?.();\n      if (childProcess) {\n        return new Promise<void>((resolve) => {\n          childProcess?.on('close', resolve);\n          childProcess?.kill();\n          // childProcess = null;\n          reject(err ?? new CommandError('detached'));\n        });\n      }\n    };\n\n    const off = installExitHooks(() => detach());\n  });\n}\n\nexport async function launchAppWithDeviceCtl(deviceId: string, bundleId: string) {\n  await devicectlAsync(['device', 'process', 'launch', '--device', deviceId, bundleId]);\n}\n\n/** Find all error codes from the output log */\nfunction getDeviceCtlErrorCodes(log: string): string[] {\n  return [...log.matchAll(/BSErrorCodeDescription\\s+=\\s+(.*)$/gim)].map(([_line, code]) => code);\n}\n\nlet hasEverBeenInstalled: boolean | undefined;\n\nexport function hasDevicectlEverBeenInstalled() {\n  if (hasEverBeenInstalled) return hasEverBeenInstalled;\n  // It doesn't appear possible for devicectl to ever be uninstalled. We can just check once and store this result forever\n  // to prevent cold boots of devicectl from slowing down all invocations of `expo run ios`\n  if (fs.existsSync(DEVICE_CTL_EXISTS_PATH)) {\n    hasEverBeenInstalled = true;\n    return true;\n  }\n\n  const isInstalled = isDevicectlInstalled();\n\n  if (isInstalled) {\n    fs.writeFileSync(DEVICE_CTL_EXISTS_PATH, '1');\n  }\n  hasEverBeenInstalled = isInstalled;\n  return isInstalled;\n}\n\nfunction isDevicectlInstalled() {\n  try {\n    execSync('xcrun devicectl --version', { stdio: 'ignore' });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Wraps the apple device method for installing and running an app,\n * adds indicator and retry loop for when the device is locked.\n */\nexport async function installAndLaunchAppAsync(props: {\n  bundle: string;\n  bundleIdentifier: string;\n  udid: string;\n  deviceName: string;\n}): Promise<void> {\n  debug('Running on device:', props);\n  const { bundle, bundleIdentifier, udid, deviceName } = props;\n  let indicator: Ora | undefined;\n\n  try {\n    if (!indicator) {\n      indicator = ora(`Connecting to: ${props.deviceName}`).start();\n    }\n\n    await installAppWithDeviceCtlAsync(\n      udid,\n      bundle,\n      ({\n        status,\n        isComplete,\n        progress,\n      }: {\n        status: string;\n        isComplete: boolean;\n        progress: number;\n      }) => {\n        if (!indicator) {\n          indicator = ora(status).start();\n        }\n        indicator.text = `${chalk.bold(status)} ${progress}%`;\n        if (isComplete) {\n          indicator.succeed();\n        }\n      }\n    );\n  } catch (error: any) {\n    if (indicator) {\n      indicator.fail();\n    }\n    throw error;\n  }\n\n  async function launchAppOptionally() {\n    try {\n      await launchAppWithDeviceCtl(udid, bundleIdentifier);\n    } catch (error: any) {\n      if (indicator) {\n        indicator.fail();\n      }\n      if (error.code === 'APPLE_DEVICE_LOCKED') {\n        // Get the app name from the binary path.\n        const appName = path.basename(bundle).split('.')[0] ?? 'app';\n        if (\n          isInteractive() &&\n          (await confirmAsync({\n            message: `Cannot launch ${appName} because the device is locked. Unlock ${deviceName} to continue...`,\n            initial: true,\n          }))\n        ) {\n          return launchAppOptionally();\n        }\n        throw new CommandError(\n          `Cannot launch ${appName} on ${deviceName} because the device is locked.`\n        );\n      }\n      throw error;\n    }\n  }\n\n  await launchAppOptionally();\n}\n"],"names":["devicectlAsync","getConnectedAppleDevicesAsync","launchBinaryOnMacAsync","launchAppWithDeviceCtl","hasDevicectlEverBeenInstalled","installAndLaunchAppAsync","DEVICE_CTL_EXISTS_PATH","path","join","getExpoHomeDirectory","debug","require","args","options","xcrunAsync","error","CommandError","errorCodes","getDeviceCtlErrorCodes","stderr","includes","tmpPath","createTempFilePath","devices","stdout","devicesJson","JsonFile","readAsync","info","jsonVersion","Log","warn","assertDevicesJson","result","results","assert","Array","isArray","JSON","stringify","bundleId","appBinaryPath","spawnAsync","code","message","installAppWithDeviceCtlAsync","uuid","bundleIdOrAppPath","onProgress","Promise","resolve","reject","childProcess","spawn","currentProgress","hasStarted","updateProgress","progress","isComplete","status","on","data","strings","toString","split","EOL","map","value","trim","forEach","str","match","parseInt","read","err","Error","detach","off","kill","installExitHooks","deviceId","log","matchAll","_line","hasEverBeenInstalled","fs","existsSync","isInstalled","isDevicectlInstalled","writeFileSync","execSync","stdio","props","bundle","bundleIdentifier","udid","deviceName","indicator","ora","start","text","chalk","bold","succeed","fail","launchAppOptionally","appName","basename","isInteractive","confirmAsync","initial"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/platforms/ios/devicectl.ts"],"sourcesContent":["/**\n * Copyright © 2024 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport JsonFile from '@expo/json-file';\nimport spawnAsync, { SpawnOptions, SpawnResult } from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport { spawn, execSync } from 'child_process';\nimport fs from 'fs';\nimport assert from 'node:assert';\nimport { Ora } from 'ora';\nimport { EOL } from 'os';\nimport path from 'path';\n\nimport { xcrunAsync } from './xcrun';\nimport { getExpoHomeDirectory } from '../../../api/user/UserSettings';\nimport * as Log from '../../../log';\nimport { createTempFilePath } from '../../../utils/createTempPath';\nimport { CommandError } from '../../../utils/errors';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { ora } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\n\nconst DEVICE_CTL_EXISTS_PATH = path.join(getExpoHomeDirectory(), 'devicectl-exists');\n\nconst debug = require('debug')('expo:devicectl') as typeof console.log;\n\ntype AnyEnum<T extends string = string> = T | (string & object);\n\ntype DeviceCtlDevice = {\n  capabilities: DeviceCtlDeviceCapability[];\n  connectionProperties: DeviceCtlConnectionProperties;\n  deviceProperties: DeviceCtlDeviceProperties;\n  hardwareProperties: DeviceCtlHardwareProperties;\n  /** \"A1A1AAA1-0011-1AA1-11A1-10A1111AA11A\" */\n  identifier: string;\n  visibilityClass: AnyEnum<'default'>;\n};\n\ntype DeviceCtlHardwareProperties = {\n  cpuType: DeviceCtlCpuType;\n  deviceType: AnyEnum<'iPhone'>;\n  /** 1114404411111111 */\n  ecid: number;\n  /** \"D74AP\" */\n  hardwareModel: string;\n  /** 512000000000 */\n  internalStorageCapacity: number;\n  /** true */\n  isProductionFused: boolean;\n  /** \"iPhone 14 Pro Max\" */\n  marketingName: string;\n  /** \"iOS\" */\n  platform: AnyEnum<'iOS' | 'xrOS'>;\n  /** \"iPhone15,3\" */\n  productType: AnyEnum<'iPhone13,4' | 'iPhone15,3'>;\n  reality: AnyEnum<'physical'>;\n  /** \"X2X1CC1XXX\" */\n  serialNumber: string;\n  supportedCPUTypes: DeviceCtlCpuType[];\n  /** [1] */\n  supportedDeviceFamilies: number[];\n  thinningProductType: AnyEnum<'iPhone15,3'>;\n  /** \"00001110-001111110110101A\" */\n  udid: string;\n};\n\ntype DeviceCtlDeviceProperties = {\n  /** true */\n  bootedFromSnapshot: boolean;\n  /** \"com.apple.os.update-AD0CF111ACFF11A11111A76A3D1262AE42A3F56F305AF5AE1135393A7A14A7D1\" */\n  bootedSnapshotName: string;\n  /** false */\n  ddiServicesAvailable: boolean;\n\n  developerModeStatus: AnyEnum<'enabled'>;\n  /** false */\n  hasInternalOSBuild: boolean;\n  /** \"Evan's phone\" */\n  name: string;\n  /** \"21E236\" */\n  osBuildUpdate: string;\n  /** \"17.4.1\" */\n  osVersionNumber: string;\n  /** false */\n  rootFileSystemIsWritable: boolean;\n};\n\ntype DeviceCtlDeviceCapability =\n  | {\n      name: AnyEnum;\n      featureIdentifier: AnyEnum;\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.connectdevice';\n      name: 'Connect to Device';\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.unpairdevice';\n      name: 'Unpair Device';\n    }\n  | {\n      featureIdentifier: 'com.apple.coredevice.feature.acquireusageassertion';\n      name: 'Acquire Usage Assertion';\n    };\n\ntype DeviceCtlConnectionProperties = {\n  authenticationType: AnyEnum<'manualPairing'>;\n  isMobileDeviceOnly: boolean;\n  /** \"2024-04-20T22:50:04.244Z\" */\n  lastConnectionDate: string;\n  pairingState: AnyEnum<'paired'>;\n  /** [\"00001111-001111110110101A.coredevice.local\", \"A1A1AAA1-0011-1AA1-11A1-10A1111AA11A.coredevice.local\"] */\n  potentialHostnames: string[];\n  transportType: AnyEnum<'localNetwork' | 'wired'>;\n  tunnelState: AnyEnum<'disconnected' | 'unavailable'>;\n  tunnelTransportProtocol: AnyEnum<'tcp'>;\n};\n\ntype DeviceCtlCpuType = {\n  name: AnyEnum<'arm64e' | 'arm64' | 'arm64_32'>;\n  subType: number;\n  /** 16777228 */\n  type: number;\n};\n\n/** Run a `devicectl` command. */\nexport async function devicectlAsync(\n  args: (string | undefined)[],\n  options?: SpawnOptions\n): Promise<SpawnResult> {\n  try {\n    return await xcrunAsync(['devicectl', ...args], options);\n  } catch (error: any) {\n    if (error instanceof CommandError) {\n      throw error;\n    }\n    if ('stderr' in error) {\n      const errorCodes = getDeviceCtlErrorCodes(error.stderr);\n      if (errorCodes.includes('Locked')) {\n        throw new CommandError('APPLE_DEVICE_LOCKED', 'Device is locked, unlock and try again.');\n      }\n    }\n    throw error;\n  }\n}\n\nexport async function getConnectedAppleDevicesAsync() {\n  if (!hasDevicectlEverBeenInstalled()) {\n    debug('devicectl not found, skipping remote Apple devices.');\n    return [];\n  }\n\n  const tmpPath = createTempFilePath();\n  const devices = await devicectlAsync([\n    'list',\n    'devices',\n    '--json-output',\n    tmpPath,\n    // Give two seconds before timing out: between 5 and 9223372036854775807\n    '--timeout',\n    '5',\n  ]);\n  debug(devices.stdout);\n  const devicesJson = await JsonFile.readAsync(tmpPath);\n\n  if ((devicesJson as any)?.info?.jsonVersion !== 2) {\n    Log.warn(\n      'Unexpected devicectl JSON version output from devicectl. Connecting to physical Apple devices may not work as expected.'\n    );\n  }\n\n  assertDevicesJson(devicesJson);\n\n  return devicesJson.result.devices as DeviceCtlDevice[];\n}\n\nfunction assertDevicesJson(\n  results: any\n): asserts results is { result: { devices: DeviceCtlDevice[] } } {\n  assert(\n    results != null && 'result' in results && Array.isArray(results?.result?.devices),\n    'Malformed JSON output from devicectl: ' + JSON.stringify(results, null, 2)\n  );\n}\n\nexport async function launchBinaryOnMacAsync(\n  bundleId: string,\n  appBinaryPath: string\n): Promise<void> {\n  const args = ['-b', bundleId, appBinaryPath];\n  try {\n    await spawnAsync('open', args);\n  } catch (error: any) {\n    if ('code' in error) {\n      if (error.code === 1) {\n        throw new CommandError(\n          'MACOS_LAUNCH',\n          'Failed to launch the compatible binary on macOS: open ' +\n            args.join(' ') +\n            '\\n\\n' +\n            error.message\n        );\n      }\n    }\n    throw error;\n  }\n}\n\nasync function installAppWithDeviceCtlAsync(\n  uuid: string,\n  bundleIdOrAppPath: string,\n  onProgress: (event: { status: string; isComplete: boolean; progress: number }) => void\n): Promise<void> {\n  // 𝝠 xcrun devicectl device install app --device 00001110-001111110110101A /Users/evanbacon/Library/Developer/Xcode/DerivedData/Router-hgbqaxzhrhkiftfweydvhgttadvn/Build/Products/Debug-iphoneos/Router.app --verbose\n  return new Promise((resolve, reject) => {\n    const args: string[] = [\n      'devicectl',\n      'device',\n      'install',\n      'app',\n      '--device',\n      uuid,\n      bundleIdOrAppPath,\n    ];\n    const childProcess = spawn('xcrun', args);\n    debug('xcrun ' + args.join(' '));\n\n    let currentProgress = 0;\n    let hasStarted = false;\n\n    function updateProgress(progress: number) {\n      hasStarted = true;\n      if (progress <= currentProgress) {\n        return;\n      }\n      currentProgress = progress;\n      onProgress({\n        progress,\n        isComplete: progress === 100,\n        status: 'Installing',\n      });\n    }\n\n    childProcess.stdout.on('data', (data: Buffer) => {\n      // Sometimes more than one chunk comes at a time, here we split by system newline,\n      // then trim and filter.\n      const strings = data\n        .toString()\n        .split(EOL)\n        .map((value) => value.trim());\n\n      strings.forEach((str) => {\n        // Match the progress percentage:\n        // - '34%... 35%...' -> 34\n        // - '31%...' -> 31\n        // - 'Complete!' -> 100\n\n        const match = str.match(/(\\d+)%\\.\\.\\./);\n        if (match) {\n          updateProgress(parseInt(match[1], 10));\n        } else if (hasStarted) {\n          updateProgress(100);\n        }\n      });\n\n      debug('[stdout]:', strings);\n    });\n\n    childProcess.on('close', (code) => {\n      debug('[close]: ' + code);\n      if (code === 0) {\n        resolve();\n      } else {\n        const stderr = childProcess.stderr.read();\n        const err = new Error(stderr);\n        (err as any).code = code;\n        detach(err);\n      }\n    });\n\n    const detach = async (err?: Error) => {\n      off?.();\n      if (childProcess) {\n        return new Promise<void>((resolve) => {\n          childProcess?.on('close', resolve);\n          childProcess?.kill();\n          // childProcess = null;\n          reject(err ?? new CommandError('detached'));\n        });\n      }\n    };\n\n    const off = installExitHooks(() => detach());\n  });\n}\n\nexport async function launchAppWithDeviceCtl(deviceId: string, bundleId: string) {\n  await devicectlAsync(['device', 'process', 'launch', '--device', deviceId, bundleId]);\n}\n\n/** Find all error codes from the output log */\nfunction getDeviceCtlErrorCodes(log: string): string[] {\n  return [...log.matchAll(/BSErrorCodeDescription\\s+=\\s+(.*)$/gim)].map(([_line, code]) => code);\n}\n\nlet hasEverBeenInstalled: boolean | undefined;\n\nexport function hasDevicectlEverBeenInstalled() {\n  if (hasEverBeenInstalled) return hasEverBeenInstalled;\n  // It doesn't appear possible for devicectl to ever be uninstalled. We can just check once and store this result forever\n  // to prevent cold boots of devicectl from slowing down all invocations of `expo run ios`\n  if (fs.existsSync(DEVICE_CTL_EXISTS_PATH)) {\n    hasEverBeenInstalled = true;\n    return true;\n  }\n\n  const isInstalled = isDevicectlInstalled();\n\n  if (isInstalled) {\n    fs.writeFileSync(DEVICE_CTL_EXISTS_PATH, '1');\n  }\n  hasEverBeenInstalled = isInstalled;\n  return isInstalled;\n}\n\nfunction isDevicectlInstalled() {\n  try {\n    execSync('xcrun devicectl --version', { stdio: 'ignore' });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Wraps the apple device method for installing and running an app,\n * adds indicator and retry loop for when the device is locked.\n */\nexport async function installAndLaunchAppAsync(props: {\n  bundle: string;\n  bundleIdentifier: string;\n  udid: string;\n  deviceName: string;\n}): Promise<void> {\n  debug('Running on device:', props);\n  const { bundle, bundleIdentifier, udid, deviceName } = props;\n  let indicator: Ora | undefined;\n\n  try {\n    if (!indicator) {\n      indicator = ora(`Connecting to: ${props.deviceName}`).start();\n    }\n\n    await installAppWithDeviceCtlAsync(\n      udid,\n      bundle,\n      ({\n        status,\n        isComplete,\n        progress,\n      }: {\n        status: string;\n        isComplete: boolean;\n        progress: number;\n      }) => {\n        if (!indicator) {\n          indicator = ora(status).start();\n        }\n        indicator.text = `${chalk.bold(status)} ${progress}%`;\n        if (isComplete) {\n          indicator.succeed();\n        }\n      }\n    );\n  } catch (error: any) {\n    if (indicator) {\n      indicator.fail();\n    }\n    throw error;\n  }\n\n  async function launchAppOptionally() {\n    try {\n      await launchAppWithDeviceCtl(udid, bundleIdentifier);\n    } catch (error: any) {\n      if (indicator) {\n        indicator.fail();\n      }\n      if (error.code === 'APPLE_DEVICE_LOCKED') {\n        // Get the app name from the binary path.\n        const appName = path.basename(bundle).split('.')[0] ?? 'app';\n        if (\n          isInteractive() &&\n          (await confirmAsync({\n            message: `Cannot launch ${appName} because the device is locked. Unlock ${deviceName} to continue...`,\n            initial: true,\n          }))\n        ) {\n          return launchAppOptionally();\n        }\n        throw new CommandError(\n          `Cannot launch ${appName} on ${deviceName} because the device is locked.`\n        );\n      }\n      throw error;\n    }\n  }\n\n  await launchAppOptionally();\n}\n"],"names":["devicectlAsync","getConnectedAppleDevicesAsync","launchBinaryOnMacAsync","launchAppWithDeviceCtl","hasDevicectlEverBeenInstalled","installAndLaunchAppAsync","DEVICE_CTL_EXISTS_PATH","path","join","getExpoHomeDirectory","debug","require","args","options","xcrunAsync","error","CommandError","errorCodes","getDeviceCtlErrorCodes","stderr","includes","tmpPath","createTempFilePath","devices","stdout","devicesJson","JsonFile","readAsync","info","jsonVersion","Log","warn","assertDevicesJson","result","results","assert","Array","isArray","JSON","stringify","bundleId","appBinaryPath","spawnAsync","code","message","installAppWithDeviceCtlAsync","uuid","bundleIdOrAppPath","onProgress","Promise","resolve","reject","childProcess","spawn","currentProgress","hasStarted","updateProgress","progress","isComplete","status","on","data","strings","toString","split","EOL","map","value","trim","forEach","str","match","parseInt","read","err","Error","detach","off","kill","installExitHooks","deviceId","log","matchAll","_line","hasEverBeenInstalled","fs","existsSync","isInstalled","isDevicectlInstalled","writeFileSync","execSync","stdio","props","bundle","bundleIdentifier","udid","deviceName","indicator","ora","start","text","chalk","bold","succeed","fail","launchAppOptionally","appName","basename","isInteractive","confirmAsync","initial"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js b/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js
index 4063490..e156814 100644
--- a/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js
+++ b/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js
@@ -136,9 +136,10 @@ function evalMetroAndWrapFunctions(projectRoot, script, filename, isExporting) {
                 await (0, _metroErrorInterface.logMetroError)(projectRoot, {
                     error
                 });
-                if (isExporting) {
+                if (isExporting || error[_metroErrorInterface.IS_METRO_BUNDLE_ERROR_SYMBOL]) {
                     throw error;
                 } else {
+                    // TODO: When does this happen?
                     throw new _errors.SilentError(error);
                 }
             }
diff --git a/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js.map b/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js.map
index d47c092..10535b1 100644
--- a/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/getStaticRenderFunctions.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../src/start/server/getStaticRenderFunctions.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport fs from 'fs';\nimport path from 'path';\nimport requireString from 'require-from-string';\n\nimport { logMetroError } from './metro/metroErrorInterface';\nimport { createBundleUrlPath, ExpoMetroOptions } from './middleware/metroOptions';\nimport { augmentLogs } from './serverLogLikeMetro';\nimport { delayAsync } from '../../utils/delay';\nimport { SilentError } from '../../utils/errors';\nimport { profile } from '../../utils/profile';\n\n/** The list of input keys will become optional, everything else will remain the same. */\nexport type PickPartial<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport const cachedSourceMaps: Map<string, { url: string; map: string }> = new Map();\n\n// Support unhandled rejections\n// Detect if running in Bun\n\n// @ts-expect-error: This is a global variable that is set by Bun.\nif (!process.isBun) {\n  require('source-map-support').install({\n    retrieveSourceMap(source: string) {\n      if (cachedSourceMaps.has(source)) {\n        return cachedSourceMaps.get(source);\n      }\n      return null;\n    },\n  });\n}\n\nasync function ensureFileInRootDirectory(projectRoot: string, otherFile: string) {\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (!path.relative(projectRoot, otherFile).startsWith('..' + path.sep)) {\n    return otherFile;\n  }\n\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static-tmp');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, path.basename(otherFile));\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(otherFile, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n}\n\nexport async function createMetroEndpointAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const safeOtherFile = await ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n  const serverPath = path.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, '');\n\n  const urlFragment = createBundleUrlPath({\n    mainModuleName: serverPath,\n    lazy: false,\n    asyncRoutes: false,\n    inlineSourceMap: false,\n    engine: 'hermes',\n    minify: false,\n    bytecode: false,\n    ...props,\n  });\n\n  let url: string;\n  if (devServerUrl) {\n    url = new URL(urlFragment.replace(/^\\//, ''), devServerUrl).toString();\n  } else {\n    url = '/' + urlFragment.replace(/^\\/+/, '');\n  }\n  return url;\n}\n\nexport function evalMetroAndWrapFunctions<T = Record<string, any>>(\n  projectRoot: string,\n  script: string,\n  filename: string,\n  isExporting: boolean\n): T {\n  // TODO: Add back stack trace logic that hides traces from metro-runtime and other internal modules.\n  const contents = evalMetroNoHandling(projectRoot, script, filename);\n\n  if (!contents) {\n    // This can happen if ErrorUtils isn't working correctly on web and failing to throw an error when a module throws.\n    // This is unexpected behavior and should not be pretty formatted, therefore we're avoiding CommandError.\n    throw new Error(\n      '[Expo SSR] Module returned undefined, this could be due to a misconfiguration in Metro error handling'\n    );\n  }\n  // wrap each function with a try/catch that uses Metro's error formatter\n  return Object.keys(contents).reduce((acc, key) => {\n    const fn = contents[key];\n    if (typeof fn !== 'function') {\n      return { ...acc, [key]: fn };\n    }\n\n    acc[key] = async function (...props: any[]) {\n      try {\n        return await fn.apply(this, props);\n      } catch (error: any) {\n        await logMetroError(projectRoot, { error });\n        if (isExporting) {\n          throw error;\n        } else {\n          throw new SilentError(error);\n        }\n      }\n    };\n    return acc;\n  }, {} as any);\n}\n\nexport function evalMetroNoHandling(projectRoot: string, src: string, filename: string) {\n  augmentLogs(projectRoot);\n\n  return profile(requireString, 'eval-metro-bundle')(src, filename);\n}\n"],"names":["cachedSourceMaps","createMetroEndpointAsync","evalMetroAndWrapFunctions","evalMetroNoHandling","Map","process","isBun","require","install","retrieveSourceMap","source","has","get","ensureFileInRootDirectory","projectRoot","otherFile","path","relative","startsWith","sep","tempDir","join","fs","promises","mkdir","recursive","moduleId","basename","writeFile","readFile","delayAsync","devServerUrl","absoluteFilePath","props","root","getMetroServerRoot","safeOtherFile","serverPath","replace","urlFragment","createBundleUrlPath","mainModuleName","lazy","asyncRoutes","inlineSourceMap","engine","minify","bytecode","url","URL","toString","script","filename","isExporting","contents","Error","Object","keys","reduce","acc","key","fn","apply","error","logMetroError","SilentError","src","augmentLogs","profile","requireString"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../src/start/server/getStaticRenderFunctions.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport fs from 'fs';\nimport path from 'path';\nimport requireString from 'require-from-string';\n\nimport { IS_METRO_BUNDLE_ERROR_SYMBOL, logMetroError } from './metro/metroErrorInterface';\nimport { createBundleUrlPath, ExpoMetroOptions } from './middleware/metroOptions';\nimport { augmentLogs } from './serverLogLikeMetro';\nimport { delayAsync } from '../../utils/delay';\nimport { SilentError } from '../../utils/errors';\nimport { profile } from '../../utils/profile';\n\n/** The list of input keys will become optional, everything else will remain the same. */\nexport type PickPartial<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport const cachedSourceMaps: Map<string, { url: string; map: string }> = new Map();\n\n// Support unhandled rejections\n// Detect if running in Bun\n\n// @ts-expect-error: This is a global variable that is set by Bun.\nif (!process.isBun) {\n  require('source-map-support').install({\n    retrieveSourceMap(source: string) {\n      if (cachedSourceMaps.has(source)) {\n        return cachedSourceMaps.get(source);\n      }\n      return null;\n    },\n  });\n}\n\nasync function ensureFileInRootDirectory(projectRoot: string, otherFile: string) {\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (!path.relative(projectRoot, otherFile).startsWith('..' + path.sep)) {\n    return otherFile;\n  }\n\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static-tmp');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, path.basename(otherFile));\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(otherFile, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n}\n\nexport async function createMetroEndpointAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: PickPartial<ExpoMetroOptions, 'mainModuleName' | 'bytecode'>\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const safeOtherFile = await ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n  const serverPath = path.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, '');\n\n  const urlFragment = createBundleUrlPath({\n    mainModuleName: serverPath,\n    lazy: false,\n    asyncRoutes: false,\n    inlineSourceMap: false,\n    engine: 'hermes',\n    minify: false,\n    bytecode: false,\n    ...props,\n  });\n\n  let url: string;\n  if (devServerUrl) {\n    url = new URL(urlFragment.replace(/^\\//, ''), devServerUrl).toString();\n  } else {\n    url = '/' + urlFragment.replace(/^\\/+/, '');\n  }\n  return url;\n}\n\nexport function evalMetroAndWrapFunctions<T = Record<string, any>>(\n  projectRoot: string,\n  script: string,\n  filename: string,\n  isExporting: boolean\n): T {\n  // TODO: Add back stack trace logic that hides traces from metro-runtime and other internal modules.\n  const contents = evalMetroNoHandling(projectRoot, script, filename);\n\n  if (!contents) {\n    // This can happen if ErrorUtils isn't working correctly on web and failing to throw an error when a module throws.\n    // This is unexpected behavior and should not be pretty formatted, therefore we're avoiding CommandError.\n    throw new Error(\n      '[Expo SSR] Module returned undefined, this could be due to a misconfiguration in Metro error handling'\n    );\n  }\n  // wrap each function with a try/catch that uses Metro's error formatter\n  return Object.keys(contents).reduce((acc, key) => {\n    const fn = contents[key];\n    if (typeof fn !== 'function') {\n      return { ...acc, [key]: fn };\n    }\n\n    acc[key] = async function (...props: any[]) {\n      try {\n        return await fn.apply(this, props);\n      } catch (error: any) {\n        await logMetroError(projectRoot, { error });\n\n        if (isExporting || error[IS_METRO_BUNDLE_ERROR_SYMBOL]) {\n          throw error;\n        } else {\n          // TODO: When does this happen?\n          throw new SilentError(error);\n        }\n      }\n    };\n    return acc;\n  }, {} as any);\n}\n\nexport function evalMetroNoHandling(projectRoot: string, src: string, filename: string) {\n  augmentLogs(projectRoot);\n\n  return profile(requireString, 'eval-metro-bundle')(src, filename);\n}\n"],"names":["cachedSourceMaps","createMetroEndpointAsync","evalMetroAndWrapFunctions","evalMetroNoHandling","Map","process","isBun","require","install","retrieveSourceMap","source","has","get","ensureFileInRootDirectory","projectRoot","otherFile","path","relative","startsWith","sep","tempDir","join","fs","promises","mkdir","recursive","moduleId","basename","writeFile","readFile","delayAsync","devServerUrl","absoluteFilePath","props","root","getMetroServerRoot","safeOtherFile","serverPath","replace","urlFragment","createBundleUrlPath","mainModuleName","lazy","asyncRoutes","inlineSourceMap","engine","minify","bytecode","url","URL","toString","script","filename","isExporting","contents","Error","Object","keys","reduce","acc","key","fn","apply","error","logMetroError","IS_METRO_BUNDLE_ERROR_SYMBOL","SilentError","src","augmentLogs","profile","requireString"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
index d614a4c..254b8e2 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js
@@ -265,12 +265,13 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
     }
     async getServerManifestAsync() {
         // NOTE: This could probably be folded back into `renderStaticContent` when expo-asset and font support RSC.
-        const { getBuildTimeServerManifestAsync  } = await this.ssrLoadModule("expo-router/build/static/getServerManifest.js", {
+        const { getBuildTimeServerManifestAsync , getManifest  } = await this.ssrLoadModule("expo-router/build/static/getServerManifest.js", {
             // Only use react-server environment when the routes are using react-server rendering by default.
             environment: this.isReactServerRoutesEnabled ? "react-server" : "node"
         });
         return {
-            serverManifest: await getBuildTimeServerManifestAsync()
+            serverManifest: await getBuildTimeServerManifestAsync(),
+            htmlManifest: await getManifest()
         };
     }
     async getStaticRenderFunctionAsync() {
@@ -1238,6 +1239,9 @@ class MetroBundlerDevServer extends _bundlerDevServer.BundlerDevServer {
                 map: bundleMap
             };
         } catch (error1) {
+            // Mark the error so we know how to format and return it later.
+            // @ts-expect-error
+            error1[_metroErrorInterface.IS_METRO_BUNDLE_ERROR_SYMBOL] = true;
             this.metro._reporter.update({
                 buildID: getBuildID(buildNumber),
                 type: "bundle_build_failed"
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
index d2d4a79..3eb8073 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/MetroBundlerDevServer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport { DeltaResult, TransformInputOptions } from 'metro';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\nimport {\n  sourceMapGeneratorNonBlocking,\n  type SourceMapGeneratorOptions,\n} from 'metro/src/DeltaBundler/Serializers/sourceMapGenerator';\nimport type MetroHmrServer from 'metro/src/HmrServer';\nimport type { Client as MetroHmrClient } from 'metro/src/HmrServer';\nimport { GraphRevision } from 'metro/src/IncrementalBundler';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport getGraphId from 'metro/src/lib/getGraphId';\nimport { TransformProfile } from 'metro-babel-transformer';\nimport type { CustomResolverOptions } from 'metro-resolver/src/types';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport {\n  createServerComponentsMiddleware,\n  fileURLToFilePath,\n} from './createServerComponentsMiddleware';\nimport { createRouteHandlerMiddleware } from './createServerRouteMiddleware';\nimport { ExpoRouterServerManifestV1, fetchManifest } from './fetchRouterManifest';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { getErrorOverlayHtmlAsync } from './metroErrorInterface';\nimport { assertMetroPrivateServer, MetroPrivateServer } from './metroPrivateServer';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport {\n  getRouterDirectoryModuleIdWithManifest,\n  hasWarnedAboutApiRoutes,\n  isApiRouteConvention,\n  warnInvalidWebOutput,\n} from './router';\nimport { serializeHtmlWithAssets } from './serializeHtml';\nimport { observeAnyFileChanges, observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\nimport { BundleAssetWithFileHashes, ExportAssetMap } from '../../../export/saveAssets';\nimport { Log } from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { toPosixPath } from '../../../utils/filePath';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport {\n  cachedSourceMaps,\n  evalMetroAndWrapFunctions,\n  evalMetroNoHandling,\n} from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { DevToolsPluginMiddleware } from '../middleware/DevToolsPluginMiddleware';\nimport { createDomComponentsMiddleware } from '../middleware/DomComponentsMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport { resolveMainModuleName } from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport { RuntimeRedirectMiddleware } from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport {\n  convertPathToModuleSpecifier,\n  createBundleUrlPath,\n  createBundleUrlOsPath,\n  ExpoMetroOptions,\n  getAsyncRoutesFromExpoConfig,\n  getBaseUrlFromExpoConfig,\n  getMetroDirectBundleOptions,\n  shouldEnableAsyncImports,\n} from '../middleware/metroOptions';\nimport { prependMiddleware } from '../middleware/mutations';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\n\nexport type ExpoRouterRuntimeManifest = Awaited<\n  ReturnType<typeof import('expo-router/build/static/renderStaticContent').getManifest>\n>;\ntype MetroOnProgress = NonNullable<\n  import('metro/src/DeltaBundler/types').Options<void>['onProgress']\n>;\ntype SSRLoadModuleFunc = <T extends Record<string, any>>(\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>,\n  extras?: { hot?: boolean }\n) => Promise<T>;\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: MetroPrivateServer | null = null;\n  private hmrServer: MetroHmrServer | null = null;\n  private ssrHmrClients: Map<string, MetroHmrClient> = new Map();\n  isReactServerComponentsEnabled?: boolean;\n  isReactServerRoutesEnabled?: boolean;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  async exportExpoRouterApiRoutesAsync({\n    includeSourceMaps,\n    outputDir,\n    prerenderManifest,\n    platform,\n  }: {\n    includeSourceMaps?: boolean;\n    outputDir: string;\n    // This does not contain the API routes info.\n    prerenderManifest: ExpoRouterServerManifestV1;\n    platform: string;\n  }): Promise<{ files: ExportAssetMap; manifest: ExpoRouterServerManifestV1<string> }> {\n    const { routerRoot } = this.instanceMetroOptions;\n    assert(\n      routerRoot != null,\n      'The server must be started before calling exportExpoRouterApiRoutesAsync.'\n    );\n\n    const appDir = path.join(this.projectRoot, routerRoot);\n    const manifest = await this.getExpoRouterRoutesManifestAsync({ appDir });\n\n    const files: ExportAssetMap = new Map();\n\n    // Inject RSC middleware.\n    const rscPath = '/_flight/[...rsc]';\n\n    if (\n      this.isReactServerComponentsEnabled &&\n      // If the RSC route is not already in the manifest, add it.\n      !manifest.apiRoutes.find((route) => route.page.startsWith('/_flight/'))\n    ) {\n      debug('Adding RSC route to the manifest:', rscPath);\n      // NOTE: This might need to be sorted to the correct spot in the future.\n      manifest.apiRoutes.push({\n        file: resolveFrom(this.projectRoot, '@expo/cli/static/template/[...rsc]+api.ts'),\n        page: rscPath,\n        namedRegex: '^/_flight(?:/(?<rsc>.+?))?(?:/)?$',\n        routeKeys: { rsc: 'rsc' },\n      });\n    }\n\n    for (const route of manifest.apiRoutes) {\n      const filepath = path.isAbsolute(route.file) ? route.file : path.join(appDir, route.file);\n      const contents = await this.bundleApiRoute(filepath, { platform });\n\n      const artifactFilename =\n        route.page === rscPath\n          ? // HACK: Add RSC renderer to the output...\n            path.join(outputDir, '.' + rscPath + '.js')\n          : path.join(outputDir, path.relative(appDir, filepath.replace(/\\.[tj]sx?$/, '.js')));\n\n      if (contents) {\n        let src = contents.src;\n\n        if (includeSourceMaps && contents.map) {\n          // TODO(kitten): Merge the source map transformer in the future\n          // https://github.com/expo/expo/blob/0dffdb15/packages/%40expo/metro-config/src/serializer/serializeChunks.ts#L422-L439\n          // Alternatively, check whether `sourcesRoot` helps here\n          const artifactBasename = encodeURIComponent(path.basename(artifactFilename) + '.map');\n          src = src.replace(\n            /\\/\\/# sourceMappingURL=.*/g,\n            `//# sourceMappingURL=${artifactBasename}`\n          );\n\n          const parsedMap =\n            typeof contents.map === 'string' ? JSON.parse(contents.map) : contents.map;\n          files.set(artifactFilename + '.map', {\n            contents: JSON.stringify({\n              version: parsedMap.version,\n              sources: parsedMap.sources.map((source: string) => {\n                source =\n                  typeof source === 'string' && source.startsWith(this.projectRoot)\n                    ? path.relative(this.projectRoot, source)\n                    : source;\n                return convertPathToModuleSpecifier(source);\n              }),\n              sourcesContent: new Array(parsedMap.sources.length).fill(null),\n              names: parsedMap.names,\n              mappings: parsedMap.mappings,\n            }),\n            apiRouteId: route.page,\n            targetDomain: 'server',\n          });\n        }\n        files.set(artifactFilename, {\n          contents: src,\n          apiRouteId: route.page,\n          targetDomain: 'server',\n        });\n      }\n      // Remap the manifest files to represent the output files.\n      route.file = artifactFilename;\n    }\n\n    return {\n      manifest: {\n        ...manifest,\n        htmlRoutes: prerenderManifest.htmlRoutes,\n      },\n      files,\n    };\n  }\n\n  async getExpoRouterRoutesManifestAsync({ appDir }: { appDir: string }) {\n    // getBuiltTimeServerManifest\n    const { exp } = getConfig(this.projectRoot);\n    const manifest = await fetchManifest(this.projectRoot, {\n      ...exp.extra?.router?.platformRoutes,\n      asJson: true,\n      appDir,\n    });\n\n    if (!manifest) {\n      throw new CommandError(\n        'EXPO_ROUTER_SERVER_MANIFEST',\n        'Unexpected error: server manifest could not be fetched.'\n      );\n    }\n\n    return manifest;\n  }\n\n  async getServerManifestAsync(): Promise<{\n    serverManifest: ExpoRouterServerManifestV1;\n  }> {\n    // NOTE: This could probably be folded back into `renderStaticContent` when expo-asset and font support RSC.\n    const { getBuildTimeServerManifestAsync } = await this.ssrLoadModule<\n      typeof import('expo-router/build/static/getServerManifest')\n    >('expo-router/build/static/getServerManifest.js', {\n      // Only use react-server environment when the routes are using react-server rendering by default.\n      environment: this.isReactServerRoutesEnabled ? 'react-server' : 'node',\n    });\n\n    return {\n      serverManifest: await getBuildTimeServerManifestAsync(),\n    };\n  }\n\n  async getStaticRenderFunctionAsync(): Promise<{\n    serverManifest: ExpoRouterServerManifestV1;\n    manifest: ExpoRouterRuntimeManifest;\n    renderAsync: (path: string) => Promise<string>;\n  }> {\n    const url = this.getDevServerUrlOrAssert();\n\n    const { getStaticContent, getManifest, getBuildTimeServerManifestAsync } =\n      await this.ssrLoadModule<typeof import('expo-router/build/static/renderStaticContent')>(\n        'expo-router/node/render.js',\n        {\n          // This must always use the legacy rendering resolution (no `react-server`) because it leverages\n          // the previous React SSG utilities which aren't available in React 19.\n          environment: 'node',\n        }\n      );\n\n    const { exp } = getConfig(this.projectRoot);\n\n    return {\n      serverManifest: await getBuildTimeServerManifestAsync(),\n      // Get routes from Expo Router.\n      manifest: await getManifest({ preserveApiRoutes: false, ...exp.extra?.router }),\n      // Get route generating function\n      async renderAsync(path: string) {\n        return await getStaticContent(new URL(path, url));\n      },\n    };\n  }\n\n  async getStaticResourcesAsync({\n    includeSourceMaps,\n    mainModuleName,\n    clientBoundaries = this.instanceMetroOptions.clientBoundaries ?? [],\n    platform = 'web',\n  }: {\n    includeSourceMaps?: boolean;\n    mainModuleName?: string;\n    clientBoundaries?: string[];\n    platform?: string;\n  } = {}) {\n    const { mode, minify, isExporting, baseUrl, reactCompiler, routerRoot, asyncRoutes } =\n      this.instanceMetroOptions;\n    assert(\n      mode != null &&\n        isExporting != null &&\n        baseUrl != null &&\n        routerRoot != null &&\n        reactCompiler != null &&\n        asyncRoutes != null,\n      'The server must be started before calling getStaticResourcesAsync.'\n    );\n\n    const resolvedMainModuleName =\n      mainModuleName ?? './' + resolveMainModuleName(this.projectRoot, { platform });\n    return await this.metroImportAsArtifactsAsync(resolvedMainModuleName, {\n      splitChunks: isExporting && !env.EXPO_NO_BUNDLE_SPLITTING,\n      platform,\n      mode,\n      minify,\n      environment: 'client',\n      serializerIncludeMaps: includeSourceMaps,\n      mainModuleName: resolvedMainModuleName,\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n      asyncRoutes,\n      baseUrl,\n      isExporting,\n      routerRoot,\n      clientBoundaries,\n      reactCompiler,\n      bytecode: false,\n    });\n  }\n\n  private async getStaticPageAsync(pathname: string) {\n    const { mode, isExporting, clientBoundaries, baseUrl, reactCompiler, routerRoot, asyncRoutes } =\n      this.instanceMetroOptions;\n    assert(\n      mode != null &&\n        isExporting != null &&\n        baseUrl != null &&\n        reactCompiler != null &&\n        routerRoot != null &&\n        asyncRoutes != null,\n      'The server must be started before calling getStaticPageAsync.'\n    );\n    const platform = 'web';\n\n    const devBundleUrlPathname = createBundleUrlPath({\n      splitChunks: isExporting && !env.EXPO_NO_BUNDLE_SPLITTING,\n      platform,\n      mode,\n      environment: 'client',\n      reactCompiler,\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n      baseUrl,\n      isExporting,\n      asyncRoutes,\n      routerRoot,\n      clientBoundaries,\n      bytecode: false,\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await this.ssrLoadModule<\n        typeof import('expo-router/build/static/renderStaticContent')\n      >('expo-router/node/render.js', {\n        // This must always use the legacy rendering resolution (no `react-server`) because it leverages\n        // the previous React SSG utilities which aren't available in React 19.\n        environment: 'node',\n        minify: false,\n        isExporting,\n        platform,\n      });\n\n      const location = new URL(pathname, this.getDevServerUrlOrAssert());\n      return await getStaticContent(location);\n    };\n\n    const [{ artifacts: resources }, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({\n        clientBoundaries: [],\n      }),\n      bundleStaticHtml(),\n    ]);\n    const content = serializeHtmlWithAssets({\n      isExporting,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n      baseUrl,\n      hydrate: env.EXPO_WEB_DEV_HYDRATE,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  // Set when the server is started.\n  private instanceMetroOptions: Partial<ExpoMetroOptions> = {};\n\n  private ssrLoadModule: SSRLoadModuleFunc = async (\n    filePath,\n    specificOptions = {},\n    extras = {}\n  ) => {\n    const res = await this.ssrLoadModuleContents(filePath, specificOptions);\n\n    if (extras.hot && this.instanceMetroOptions.isExporting !== true) {\n      // Register SSR HMR\n      const serverRoot = getMetroServerRoot(this.projectRoot);\n      const relativePath = path.relative(serverRoot, res.filename);\n      const url = new URL(relativePath, this.getDevServerUrlOrAssert());\n      this.setupHmr(url);\n    }\n\n    return evalMetroAndWrapFunctions(\n      this.projectRoot,\n      res.src,\n      res.filename,\n      specificOptions.isExporting ?? this.instanceMetroOptions.isExporting!\n    );\n  };\n\n  private async metroImportAsArtifactsAsync(\n    filePath: string,\n    specificOptions: Partial<Omit<ExpoMetroOptions, 'serializerOutput'>> = {}\n  ) {\n    const results = await this.ssrLoadModuleContents(filePath, {\n      serializerOutput: 'static',\n      ...specificOptions,\n    });\n\n    // NOTE: This could potentially need more validation in the future.\n    if (results.artifacts && results.assets) {\n      return {\n        artifacts: results.artifacts,\n        assets: results.assets,\n        src: results.src,\n        filename: results.filename,\n        map: results.map,\n      };\n    }\n    throw new CommandError('Invalid bundler results: ' + results);\n  }\n\n  private async metroLoadModuleContents(\n    filePath: string,\n    specificOptions: ExpoMetroOptions,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ) {\n    const { baseUrl } = this.instanceMetroOptions;\n    assert(baseUrl != null, 'The server must be started before calling metroLoadModuleContents.');\n\n    const opts: ExpoMetroOptions = {\n      // TODO: Possibly issues with using an absolute path here...\n      // mainModuleName: filePath,\n      lazy: false,\n      asyncRoutes: false,\n      inlineSourceMap: false,\n      engine: 'hermes',\n      minify: false,\n      // bytecode: false,\n      // Bundle in Node.js mode for SSR.\n      environment: 'node',\n      // platform: 'web',\n      // mode: 'development',\n      //\n      ...this.instanceMetroOptions,\n      baseUrl,\n      // routerRoot,\n      // isExporting,\n      ...specificOptions,\n    };\n\n    const expoBundleOptions = getMetroDirectBundleOptions(opts);\n\n    const resolverOptions = {\n      customResolverOptions: expoBundleOptions.customResolverOptions ?? {},\n      dev: expoBundleOptions.dev ?? true,\n    };\n\n    const transformOptions: TransformInputOptions = {\n      dev: expoBundleOptions.dev ?? true,\n      hot: true,\n      minify: expoBundleOptions.minify ?? false,\n      type: 'module',\n      unstable_transformProfile:\n        extraOptions.unstable_transformProfile ??\n        expoBundleOptions.unstable_transformProfile ??\n        'default',\n      customTransformOptions: expoBundleOptions.customTransformOptions ?? Object.create(null),\n      platform: expoBundleOptions.platform ?? 'web',\n      // @ts-expect-error: `runtimeBytecodeVersion` does not exist in `expoBundleOptions` or `TransformInputOptions`\n      runtimeBytecodeVersion: expoBundleOptions.runtimeBytecodeVersion,\n    };\n\n    const resolvedEntryFilePath = await this.resolveRelativePathAsync(filePath, {\n      resolverOptions,\n      transformOptions,\n    });\n\n    // Use fully qualified URL with all options to represent the file path that's used for source maps and HMR. This prevents collisions.\n    const filename = createBundleUrlOsPath({\n      ...opts,\n      mainModuleName: resolvedEntryFilePath,\n    });\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    const results = await this._bundleDirectAsync(resolvedEntryFilePath, {\n      graphOptions: {\n        lazy: expoBundleOptions.lazy ?? false,\n        shallow: expoBundleOptions.shallow ?? false,\n      },\n      resolverOptions,\n      serializerOptions: {\n        ...expoBundleOptions.serializerOptions,\n\n        inlineSourceMap: expoBundleOptions.inlineSourceMap ?? false,\n        modulesOnly: expoBundleOptions.modulesOnly ?? false,\n        runModule: expoBundleOptions.runModule ?? true,\n        // @ts-expect-error\n        sourceUrl: expoBundleOptions.sourceUrl,\n        // @ts-expect-error\n        sourceMapUrl: extraOptions.sourceMapUrl ?? expoBundleOptions.sourceMapUrl,\n      },\n      transformOptions,\n    });\n\n    return {\n      ...results,\n      filename,\n    };\n  }\n\n  private async ssrLoadModuleContents(\n    filePath: string,\n    specificOptions: Partial<ExpoMetroOptions> = {}\n  ) {\n    const { baseUrl, routerRoot, isExporting } = this.instanceMetroOptions;\n    assert(\n      baseUrl != null && routerRoot != null && isExporting != null,\n      'The server must be started before calling ssrLoadModuleContents.'\n    );\n\n    const opts: ExpoMetroOptions = {\n      // TODO: Possibly issues with using an absolute path here...\n      mainModuleName: convertPathToModuleSpecifier(filePath),\n      lazy: false,\n      asyncRoutes: false,\n      inlineSourceMap: false,\n      engine: 'hermes',\n      minify: false,\n      bytecode: false,\n      // Bundle in Node.js mode for SSR unless RSC is enabled.\n      environment: this.isReactServerComponentsEnabled ? 'react-server' : 'node',\n      platform: 'web',\n      mode: 'development',\n      //\n      ...this.instanceMetroOptions,\n\n      // Mostly disable compiler in SSR bundles.\n      reactCompiler: false,\n      baseUrl,\n      routerRoot,\n      isExporting,\n\n      ...specificOptions,\n    };\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    const { filename, bundle, map, ...rest } = await this.metroLoadModuleContents(filePath, opts);\n    const scriptContents = wrapBundle(bundle);\n\n    if (map) {\n      debug('Registering SSR source map for:', filename);\n      cachedSourceMaps.set(filename, { url: this.projectRoot, map });\n    } else {\n      debug('No SSR source map found for:', filename);\n    }\n\n    return {\n      ...rest,\n      src: scriptContents,\n      filename,\n      map,\n    };\n  }\n\n  async nativeExportBundleAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    files: ExportAssetMap,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{\n    artifacts: SerialAsset[];\n    assets: readonly BundleAssetWithFileHashes[];\n    files?: ExportAssetMap;\n  }> {\n    if (this.isReactServerComponentsEnabled) {\n      return this.singlePageReactServerComponentExportAsync(options, files, extraOptions);\n    }\n\n    return this.legacySinglePageExportBundleAsync(options, extraOptions);\n  }\n\n  private async singlePageReactServerComponentExportAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'baseUrl' | 'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    files: ExportAssetMap,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{\n    artifacts: SerialAsset[];\n    assets: readonly BundleAssetWithFileHashes[];\n    files: ExportAssetMap;\n  }> {\n    // NOTE(EvanBacon): This will not support any code elimination since it's a static pass.\n    let {\n      reactClientReferences: clientBoundaries,\n      reactServerReferences: serverActionReferencesInServer,\n      cssModules,\n    } = await this.rscRenderer!.getExpoRouterClientReferencesAsync(\n      {\n        platform: options.platform,\n        domRoot: options.domRoot,\n      },\n      files\n    );\n\n    // TODO: The output keys should be in production format or use a lookup manifest.\n\n    debug('Evaluated client boundaries:', clientBoundaries);\n\n    // Run metro bundler and create the JS bundles/source maps.\n    let bundle = await this.legacySinglePageExportBundleAsync(\n      {\n        ...options,\n        clientBoundaries,\n      },\n      extraOptions\n    );\n\n    // Get the React server action boundaries from the client bundle.\n    const reactServerReferences = bundle.artifacts\n      .filter((a) => a.type === 'js')\n      .map((artifact) =>\n        artifact.metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref))\n      )\n      // TODO: Segment by module for splitting.\n      .flat()\n      .filter(Boolean) as string[];\n\n    if (!reactServerReferences) {\n      // Issue with babel plugin / metro-config.\n      throw new Error(\n        'Static server action references were not returned from the Metro client bundle'\n      );\n    }\n\n    debug('React server action boundaries from client:', reactServerReferences);\n\n    // When we export the server actions that were imported from the client, we may need to re-bundle the client with the new client boundaries.\n    const { clientBoundaries: nestedClientBoundaries } =\n      await this.rscRenderer!.exportServerActionsAsync(\n        {\n          platform: options.platform,\n          domRoot: options.domRoot,\n          entryPoints: [...serverActionReferencesInServer, ...reactServerReferences],\n        },\n        files\n      );\n\n    // TODO: Check against all modules in the initial client bundles.\n    const hasUniqueClientBoundaries = nestedClientBoundaries.some(\n      (boundary) => !clientBoundaries.includes(boundary)\n    );\n\n    if (hasUniqueClientBoundaries) {\n      debug('Re-bundling client with nested client boundaries:', nestedClientBoundaries);\n      clientBoundaries = [...new Set(clientBoundaries.concat(nestedClientBoundaries))];\n      // Re-bundle the client with the new client boundaries that only exist in server actions that were imported from the client.\n      // Run metro bundler and create the JS bundles/source maps.\n      bundle = await this.legacySinglePageExportBundleAsync(\n        {\n          ...options,\n          clientBoundaries,\n        },\n        extraOptions\n      );\n    }\n\n    // Inject the global CSS that was imported during the server render.\n    bundle.artifacts.push(...cssModules);\n\n    const serverRoot = getMetroServerRoot(this.projectRoot);\n\n    // HACK: Maybe this should be done in the serializer.\n    const clientBoundariesAsOpaqueIds = clientBoundaries.map((boundary) =>\n      // NOTE(cedric): relative module specifiers / IDs should always be POSIX formatted\n      toPosixPath(path.relative(serverRoot, boundary))\n    );\n    const moduleIdToSplitBundle = (\n      bundle.artifacts\n        .map((artifact) => artifact?.metadata?.paths && Object.values(artifact.metadata.paths))\n        .filter(Boolean)\n        .flat() as Record<string, string>[]\n    ).reduce((acc, paths) => ({ ...acc, ...paths }), {});\n\n    debug('SSR Manifest:', moduleIdToSplitBundle, clientBoundariesAsOpaqueIds);\n\n    const ssrManifest = new Map<string, string>();\n\n    if (Object.keys(moduleIdToSplitBundle).length) {\n      clientBoundariesAsOpaqueIds.forEach((boundary) => {\n        if (boundary in moduleIdToSplitBundle) {\n          ssrManifest.set(boundary, moduleIdToSplitBundle[boundary]);\n        } else {\n          throw new Error(\n            `Could not find boundary \"${boundary}\" in the SSR manifest. Available: ${Object.keys(moduleIdToSplitBundle).join(', ')}`\n          );\n        }\n      });\n    } else {\n      // Native apps with bundle splitting disabled.\n      debug('No split bundles');\n      clientBoundariesAsOpaqueIds.forEach((boundary) => {\n        // @ts-expect-error\n        ssrManifest.set(boundary, null);\n      });\n    }\n\n    // Export the static RSC files\n    await this.rscRenderer!.exportRoutesAsync(\n      {\n        platform: options.platform,\n        ssrManifest,\n      },\n      files\n    );\n\n    // Save the SSR manifest so we can perform more replacements in the server renderer and with server actions.\n    files.set(`_expo/rsc/${options.platform}/ssr-manifest.js`, {\n      targetDomain: 'server',\n      contents:\n        'module.exports = ' +\n        JSON.stringify(\n          // TODO: Add a less leaky version of this across the framework with just [key, value] (module ID, chunk).\n          Object.fromEntries(\n            Array.from(ssrManifest.entries()).map(([key, value]) => [\n              path.join(serverRoot, key),\n              [key, value],\n            ])\n          )\n        ),\n    });\n\n    return { ...bundle, files };\n  }\n\n  async legacySinglePageExportBundleAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{ artifacts: SerialAsset[]; assets: readonly BundleAssetWithFileHashes[] }> {\n    const { baseUrl, routerRoot, isExporting } = this.instanceMetroOptions;\n    assert(options.mainModuleName != null, 'mainModuleName must be provided in options.');\n    assert(\n      baseUrl != null && routerRoot != null && isExporting != null,\n      'The server must be started before calling legacySinglePageExportBundleAsync.'\n    );\n\n    const opts: ExpoMetroOptions = {\n      ...this.instanceMetroOptions,\n      baseUrl,\n      routerRoot,\n      isExporting,\n      ...options,\n      environment: 'client',\n      serializerOutput: 'static',\n    };\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    if (!opts.mainModuleName.startsWith('/') && !path.isAbsolute(opts.mainModuleName)) {\n      opts.mainModuleName = './' + opts.mainModuleName;\n    }\n\n    const output = await this.metroLoadModuleContents(opts.mainModuleName, opts, extraOptions);\n\n    return {\n      artifacts: output.artifacts!,\n      assets: output.assets!,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  rscRenderer: Awaited<ReturnType<typeof createServerComponentsMiddleware>> | null = null;\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const config = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n    const { exp } = config;\n    // NOTE: This will change in the future when it's less experimental, we enable React 19, and turn on more RSC flags by default.\n    const isReactServerComponentsEnabled =\n      !!exp.experiments?.reactServerComponentRoutes || !!exp.experiments?.reactServerFunctions;\n    const isReactServerActionsOnlyEnabled =\n      !exp.experiments?.reactServerComponentRoutes && !!exp.experiments?.reactServerFunctions;\n    this.isReactServerComponentsEnabled = isReactServerComponentsEnabled;\n    this.isReactServerRoutesEnabled = !!exp.experiments?.reactServerComponentRoutes;\n\n    const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n    const hasApiRoutes = isReactServerComponentsEnabled || exp.web?.output === 'server';\n    const baseUrl = getBaseUrlFromExpoConfig(exp);\n    const asyncRoutes = getAsyncRoutesFromExpoConfig(exp, options.mode ?? 'development', 'web');\n    const routerRoot = getRouterDirectoryModuleIdWithManifest(this.projectRoot, exp);\n    const reactCompiler = !!exp.experiments?.reactCompiler;\n    const appDir = path.join(this.projectRoot, routerRoot);\n    const mode = options.mode ?? 'development';\n\n    if (isReactServerComponentsEnabled && useServerRendering) {\n      throw new CommandError(\n        `Experimental server component support does not support 'web.output: ${exp.web!.output}' yet. Use 'web.output: \"single\"' during the experimental phase.`\n      );\n    }\n\n    const instanceMetroOptions = {\n      isExporting: !!options.isExporting,\n      baseUrl,\n      mode,\n      routerRoot,\n      reactCompiler,\n      minify: options.minify,\n      asyncRoutes,\n      // Options that are changing between platforms like engine, platform, and environment aren't set here.\n    };\n    this.instanceMetroOptions = instanceMetroOptions;\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, hmrServer, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions,\n      {\n        isExporting: !!options.isExporting,\n        exp,\n      }\n    );\n\n    if (!options.isExporting) {\n      const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n      // Important that we noop source maps for context modules as soon as possible.\n      prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n      // We need the manifest handler to be the first middleware to run so our\n      // routes take precedence over static files. For example, the manifest is\n      // served from '/' and if the user has an index.html file in their project\n      // then the manifest handler will never run, the static middleware will run\n      // and serve index.html instead of the manifest.\n      // https://github.com/expo/expo/issues/13114\n      prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n      middleware.use(\n        new InterstitialPageMiddleware(this.projectRoot, {\n          // TODO: Prevent this from becoming stale.\n          scheme: options.location.scheme ?? null,\n        }).getHandler()\n      );\n      middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n      middleware.use(\n        new DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler()\n      );\n\n      const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n        getLocation: ({ runtime }) => {\n          if (runtime === 'custom') {\n            return this.urlCreator?.constructDevClientUrl();\n          } else {\n            return this.urlCreator?.constructUrl({\n              scheme: 'exp',\n            });\n          }\n        },\n      });\n      middleware.use(deepLinkMiddleware.getHandler());\n\n      const serverRoot = getMetroServerRoot(this.projectRoot);\n\n      const domComponentRenderer = createDomComponentsMiddleware(\n        {\n          metroRoot: serverRoot,\n          projectRoot: this.projectRoot,\n        },\n        instanceMetroOptions\n      );\n      // Add support for DOM components.\n      // TODO: Maybe put behind a flag for now?\n      middleware.use(domComponentRenderer);\n\n      middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n      // Append support for redirecting unhandled requests to the index.html page on web.\n      if (this.isTargetingWeb()) {\n        // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n        middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n        // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n        middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n      }\n\n      if (useServerRendering || isReactServerComponentsEnabled) {\n        observeAnyFileChanges(\n          {\n            metro,\n            server,\n          },\n          (events) => {\n            if (hasApiRoutes) {\n              // NOTE(EvanBacon): We aren't sure what files the API routes are using so we'll just invalidate\n              // aggressively to ensure we always have the latest. The only caching we really get here is for\n              // cases where the user is making subsequent requests to the same API route without changing anything.\n              // This is useful for testing but pretty suboptimal. Luckily our caching is pretty aggressive so it makes\n              // up for a lot of the overhead.\n              this.invalidateApiRouteCache();\n            } else if (!hasWarnedAboutApiRoutes()) {\n              for (const event of events) {\n                if (\n                  // If the user did not delete a file that matches the Expo Router API Route convention, then we should warn that\n                  // API Routes are not enabled in the project.\n                  event.metadata?.type !== 'd' &&\n                  // Ensure the file is in the project's routes directory to prevent false positives in monorepos.\n                  event.filePath.startsWith(appDir) &&\n                  isApiRouteConvention(event.filePath)\n                ) {\n                  warnInvalidWebOutput();\n                }\n              }\n            }\n          }\n        );\n      }\n\n      // If React 19 is enabled, then add RSC middleware to the dev server.\n      if (isReactServerComponentsEnabled) {\n        this.bindRSCDevModuleInjectionHandler();\n        const rscMiddleware = createServerComponentsMiddleware(this.projectRoot, {\n          instanceMetroOptions: this.instanceMetroOptions,\n          rscPath: '/_flight',\n          ssrLoadModule: this.ssrLoadModule.bind(this),\n          ssrLoadModuleArtifacts: this.metroImportAsArtifactsAsync.bind(this),\n          useClientRouter: isReactServerActionsOnlyEnabled,\n          createModuleId: metro._createModuleId.bind(metro),\n        });\n        this.rscRenderer = rscMiddleware;\n        middleware.use(rscMiddleware.middleware);\n        this.onReloadRscEvent = rscMiddleware.onReloadRscEvent;\n      }\n\n      // Append support for redirecting unhandled requests to the index.html page on web.\n      if (this.isTargetingWeb()) {\n        if (!useServerRendering || isReactServerComponentsEnabled) {\n          // This MUST run last since it's the fallback.\n          middleware.use(\n            new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n          );\n        } else {\n          middleware.use(\n            createRouteHandlerMiddleware(this.projectRoot, {\n              appDir,\n              routerRoot,\n              config,\n              ...config.exp.extra?.router,\n              bundleApiRoute: (functionFilePath) =>\n                this.ssrImportApiRoute(functionFilePath, { platform: 'web' }),\n              getStaticPageAsync: (pathname) => {\n                return this.getStaticPageAsync(pathname);\n              },\n            })\n          );\n        }\n      }\n    } else {\n      // If React 19 is enabled, then add RSC middleware to the dev server.\n      if (isReactServerComponentsEnabled) {\n        this.bindRSCDevModuleInjectionHandler();\n        const rscMiddleware = createServerComponentsMiddleware(this.projectRoot, {\n          instanceMetroOptions: this.instanceMetroOptions,\n          rscPath: '/_flight',\n          ssrLoadModule: this.ssrLoadModule.bind(this),\n          ssrLoadModuleArtifacts: this.metroImportAsArtifactsAsync.bind(this),\n          useClientRouter: isReactServerActionsOnlyEnabled,\n          createModuleId: metro._createModuleId.bind(metro),\n        });\n        this.rscRenderer = rscMiddleware;\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        this.hmrServer = null;\n        this.ssrHmrClients = new Map();\n        callback?.(err);\n      });\n    };\n\n    assertMetroPrivateServer(metro);\n    this.metro = metro;\n    this.hmrServer = hmrServer;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  private onReloadRscEvent: (() => void) | null = null;\n\n  private async registerSsrHmrAsync(url: string, onReload: () => void) {\n    if (!this.hmrServer || this.ssrHmrClients.has(url)) {\n      return;\n    }\n\n    debug('[SSR] Register HMR:', url);\n\n    const sendFn = (message: string) => {\n      const data = JSON.parse(String(message)) as { type: string; body: any };\n\n      switch (data.type) {\n        case 'bundle-registered':\n        case 'update-done':\n        case 'update-start':\n          break;\n        case 'update':\n          {\n            const update = data.body;\n            const {\n              isInitialUpdate,\n              added,\n              modified,\n              deleted,\n            }: {\n              isInitialUpdate?: boolean;\n              added: {\n                module: [number | string, string];\n                sourceURL: string;\n                sourceMappingURL: string;\n              }[];\n              modified: {\n                module: [number | string, string];\n                sourceURL: string;\n                sourceMappingURL: string;\n              }[];\n              deleted: (number | string)[];\n            } = update;\n\n            const hasUpdate = added.length || modified.length || deleted.length;\n\n            // NOTE: We throw away the updates and instead simply send a trigger to the client to re-fetch the server route.\n            if (!isInitialUpdate && hasUpdate) {\n              // Clear all SSR modules before sending the reload event. This ensures that the next event will rebuild the in-memory state from scratch.\n              // if (typeof globalThis.__c === 'function') globalThis.__c();\n\n              onReload();\n            }\n          }\n          break;\n        case 'error':\n          // GraphNotFound can mean that we have an issue in metroOptions where the URL doesn't match the object props.\n          Log.error('[SSR] HMR Error: ' + JSON.stringify(data, null, 2));\n\n          if (data.body?.type === 'GraphNotFoundError') {\n            Log.error(\n              'Available SSR HMR keys:',\n              // @ts-expect-error\n              (this.metro?._bundler._revisionsByGraphId as Map).keys()\n            );\n          }\n          break;\n        default:\n          debug('Unknown HMR message:', data);\n          break;\n      }\n    };\n\n    const client = await this.hmrServer!.onClientConnect(url, sendFn);\n    this.ssrHmrClients.set(url, client);\n    // Opt in...\n    client.optedIntoHMR = true;\n    await this.hmrServer!._registerEntryPoint(client, url, sendFn);\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite.js'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    return startTypescriptTypeGenerationAsync({\n      server: this.instance?.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n\n  // API Routes\n\n  private pendingRouteOperations = new Map<\n    string,\n    Promise<{ src: string; filename: string; map: string } | null>\n  >();\n\n  // Bundle the API Route with Metro and return the string contents to be evaluated in the server.\n  private async bundleApiRoute(\n    filePath: string,\n    { platform }: { platform: string }\n  ): Promise<{ src: string; filename: string; map?: any } | null | undefined> {\n    if (this.pendingRouteOperations.has(filePath)) {\n      return this.pendingRouteOperations.get(filePath);\n    }\n    const bundleAsync = async () => {\n      try {\n        debug('Bundle API route:', this.instanceMetroOptions.routerRoot, filePath);\n        return await this.ssrLoadModuleContents(filePath, {\n          isExporting: this.instanceMetroOptions.isExporting,\n          platform,\n        });\n      } catch (error: any) {\n        const appDir = this.instanceMetroOptions?.routerRoot\n          ? path.join(this.projectRoot, this.instanceMetroOptions!.routerRoot!)\n          : undefined;\n        const relativePath = appDir ? path.relative(appDir, filePath) : filePath;\n\n        // Expected errors: invalid syntax, missing resolutions.\n        // Wrap with command error for better error messages.\n        const err = new CommandError(\n          'API_ROUTE',\n          chalk`Failed to bundle API Route: {bold ${relativePath}}\\n\\n` + error.message\n        );\n\n        for (const key in error) {\n          // @ts-expect-error\n          err[key] = error[key];\n        }\n\n        throw err;\n      } finally {\n        // pendingRouteOperations.delete(filepath);\n      }\n    };\n    const route = bundleAsync();\n\n    this.pendingRouteOperations.set(filePath, route);\n    return route;\n  }\n\n  private async ssrImportApiRoute(\n    filePath: string,\n    { platform }: { platform: string }\n  ): Promise<null | Record<string, Function> | Response> {\n    // TODO: Cache the evaluated function.\n    try {\n      const apiRoute = await this.bundleApiRoute(filePath, { platform });\n\n      if (!apiRoute?.src) {\n        return null;\n      }\n      return evalMetroNoHandling(this.projectRoot, apiRoute.src, apiRoute.filename);\n    } catch (error) {\n      // Format any errors that were thrown in the global scope of the evaluation.\n      if (error instanceof Error) {\n        try {\n          const htmlServerError = await getErrorOverlayHtmlAsync({\n            error,\n            projectRoot: this.projectRoot,\n            routerRoot: this.instanceMetroOptions.routerRoot!,\n          });\n\n          return new Response(htmlServerError, {\n            status: 500,\n            headers: {\n              'Content-Type': 'text/html',\n            },\n          });\n        } catch (internalError) {\n          debug('Failed to generate Metro server error UI for API Route error:', internalError);\n          throw error;\n        }\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private invalidateApiRouteCache() {\n    this.pendingRouteOperations.clear();\n  }\n\n  // Ensure the global is available for SSR CSS modules to inject client updates.\n  private bindRSCDevModuleInjectionHandler() {\n    // Used by SSR CSS modules to broadcast client updates.\n    // @ts-expect-error\n    globalThis.__expo_rsc_inject_module = this.sendClientModule.bind(this);\n  }\n\n  // NOTE: This can only target a single platform at a time (web).\n  // used for sending RSC CSS to the root client in development.\n  private sendClientModule({ code, id }: { code: string; id: string }) {\n    this.broadcastMessage('sendDevCommand', {\n      name: 'module-import',\n      data: {\n        code,\n        id,\n      },\n    });\n  }\n\n  // Metro HMR\n\n  private setupHmr(url: URL) {\n    const onReload = () => {\n      // Send reload command to client from Fast Refresh code.\n      debug('[SSR]: Reload requested.');\n\n      this.onReloadRscEvent?.();\n\n      this.broadcastMessage('sendDevCommand', {\n        name: 'rsc-reload',\n        // TODO: Target only certain platforms\n        // platform,\n      });\n    };\n\n    this.registerSsrHmrAsync(url.toString(), onReload);\n  }\n\n  // Direct Metro access\n\n  // Emulates the Metro dev server .bundle endpoint without having to go through a server.\n  private async _bundleDirectAsync(\n    resolvedEntryFilePath: string,\n    {\n      transformOptions,\n      resolverOptions,\n      graphOptions,\n      serializerOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n      serializerOptions: {\n        modulesOnly: boolean;\n        runModule: boolean;\n        sourceMapUrl: string;\n        sourceUrl: string;\n        inlineSourceMap: boolean;\n        excludeSource: boolean;\n      };\n      graphOptions: {\n        shallow: boolean;\n        lazy: boolean;\n      };\n    }\n  ): Promise<{\n    numModifiedFiles: number;\n    lastModifiedDate: Date;\n    nextRevId: string;\n    bundle: string;\n    map: string;\n\n    // Defined if the output is multi-bundle.\n    artifacts?: SerialAsset[];\n    assets?: readonly BundleAssetWithFileHashes[];\n  }> {\n    assert(this.metro, 'Metro server must be running to bundle directly.');\n    const config = this.metro._config;\n    const buildNumber = this.metro.getNewBuildNumber();\n    const bundlePerfLogger = config.unstable_perfLoggerFactory?.('BUNDLING_REQUEST', {\n      key: buildNumber,\n    });\n\n    const onProgress: MetroOnProgress = (transformedFileCount: number, totalFileCount: number) => {\n      this.metro?._reporter?.update?.({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_transform_progressed',\n        transformedFileCount,\n        totalFileCount,\n      });\n    };\n\n    const revPromise = this.getMetroRevision(resolvedEntryFilePath, {\n      graphOptions,\n      transformOptions,\n      resolverOptions,\n    });\n\n    bundlePerfLogger?.point('resolvingAndTransformingDependencies_start');\n    bundlePerfLogger?.annotate({\n      bool: {\n        initial_build: revPromise == null,\n      },\n    });\n    this.metro?._reporter.update({\n      buildID: getBuildID(buildNumber),\n      bundleDetails: {\n        bundleType: transformOptions.type,\n        dev: transformOptions.dev,\n        entryFile: resolvedEntryFilePath,\n        minify: transformOptions.minify,\n        platform: transformOptions.platform,\n        customResolverOptions: resolverOptions.customResolverOptions,\n        customTransformOptions: transformOptions.customTransformOptions ?? {},\n      },\n      isPrefetch: false,\n      type: 'bundle_build_started',\n    });\n\n    try {\n      let delta: DeltaResult;\n      let revision: GraphRevision;\n\n      // TODO: Some bug in Metro/RSC causes this to break when changing imports in server components.\n      // We should resolve the bug because it results in ~6x faster bundling to reuse the graph revision.\n      if (transformOptions.customTransformOptions?.environment === 'react-server') {\n        const props = await this.metro.getBundler().initializeGraph(\n          // NOTE: Using absolute path instead of relative input path is a breaking change.\n          // entryFile,\n          resolvedEntryFilePath,\n\n          transformOptions,\n          resolverOptions,\n          {\n            onProgress,\n            shallow: graphOptions.shallow,\n            lazy: graphOptions.lazy,\n          }\n        );\n        delta = props.delta;\n        revision = props.revision;\n      } else {\n        const props = await (revPromise != null\n          ? this.metro.getBundler().updateGraph(await revPromise, false)\n          : this.metro.getBundler().initializeGraph(\n              // NOTE: Using absolute path instead of relative input path is a breaking change.\n              // entryFile,\n              resolvedEntryFilePath,\n\n              transformOptions,\n              resolverOptions,\n              {\n                onProgress,\n                shallow: graphOptions.shallow,\n                lazy: graphOptions.lazy,\n              }\n            ));\n        delta = props.delta;\n        revision = props.revision;\n      }\n\n      bundlePerfLogger?.annotate({\n        int: {\n          graph_node_count: revision.graph.dependencies.size,\n        },\n      });\n      bundlePerfLogger?.point('resolvingAndTransformingDependencies_end');\n      bundlePerfLogger?.point('serializingBundle_start');\n\n      const shouldAddToIgnoreList = this.metro._shouldAddModuleToIgnoreList.bind(this.metro);\n\n      const serializer = this.getMetroSerializer();\n\n      const bundle = await serializer(\n        // NOTE: Using absolute path instead of relative input path is a breaking change.\n        // entryFile,\n        resolvedEntryFilePath,\n\n        revision.prepend as any,\n        revision.graph as any,\n        {\n          asyncRequireModulePath: await this.metro._resolveRelativePath(\n            config.transformer.asyncRequireModulePath,\n            {\n              relativeTo: 'project',\n              resolverOptions,\n              transformOptions,\n            }\n          ),\n          // ...serializerOptions,\n          processModuleFilter: config.serializer.processModuleFilter,\n          createModuleId: this.metro._createModuleId,\n          getRunModuleStatement: config.serializer.getRunModuleStatement,\n          includeAsyncPaths: graphOptions.lazy,\n          dev: transformOptions.dev,\n          projectRoot: config.projectRoot,\n          modulesOnly: serializerOptions.modulesOnly,\n          runBeforeMainModule: config.serializer.getModulesRunBeforeMainModule(\n            resolvedEntryFilePath\n            // path.relative(config.projectRoot, entryFile)\n          ),\n          runModule: serializerOptions.runModule,\n          sourceMapUrl: serializerOptions.sourceMapUrl,\n          sourceUrl: serializerOptions.sourceUrl,\n          inlineSourceMap: serializerOptions.inlineSourceMap,\n          serverRoot: config.server.unstable_serverRoot ?? config.projectRoot,\n          shouldAddToIgnoreList,\n\n          // @ts-expect-error: passed to our serializer to enable non-serial return values.\n          serializerOptions,\n        }\n      );\n\n      this.metro._reporter.update({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_build_done',\n      });\n\n      bundlePerfLogger?.point('serializingBundle_end');\n\n      let bundleCode: string | null = null;\n      let bundleMap: string | null = null;\n\n      // @ts-expect-error: If the output is multi-bundle...\n      if (serializerOptions.output === 'static') {\n        try {\n          const parsed = typeof bundle === 'string' ? JSON.parse(bundle) : bundle;\n\n          assert(\n            'artifacts' in parsed && Array.isArray(parsed.artifacts),\n            'Expected serializer to return an object with key artifacts to contain an array of serial assets.'\n          );\n\n          const artifacts = parsed.artifacts as SerialAsset[];\n          const assets = parsed.assets;\n\n          const bundleCode = artifacts.filter((asset) => asset.type === 'js')[0];\n          const bundleMap = artifacts.filter((asset) => asset.type === 'map')?.[0]?.source ?? '';\n\n          return {\n            numModifiedFiles: delta.reset\n              ? delta.added.size + revision.prepend.length\n              : delta.added.size + delta.modified.size + delta.deleted.size,\n            lastModifiedDate: revision.date,\n            nextRevId: revision.id,\n            bundle: bundleCode.source,\n            map: bundleMap,\n            artifacts,\n            assets,\n          };\n        } catch (error: any) {\n          throw new Error(\n            'Serializer did not return expected format. The project copy of `expo/metro-config` may be out of date. Error: ' +\n              error.message\n          );\n        }\n      }\n\n      if (typeof bundle === 'string') {\n        bundleCode = bundle;\n\n        // Create the source map in a second pass...\n        let { prepend, graph } = revision;\n        if (serializerOptions.modulesOnly) {\n          prepend = [];\n        }\n\n        bundleMap = await sourceMapStringAsync(\n          [\n            //\n            ...prepend,\n            ...this.metro._getSortedModules(graph),\n          ],\n          {\n            excludeSource: serializerOptions.excludeSource,\n            processModuleFilter: config.serializer.processModuleFilter,\n            shouldAddToIgnoreList,\n          }\n        );\n      } else {\n        bundleCode = bundle.code;\n        bundleMap = bundle.map;\n      }\n\n      return {\n        numModifiedFiles: delta.reset\n          ? delta.added.size + revision.prepend.length\n          : delta.added.size + delta.modified.size + delta.deleted.size,\n        lastModifiedDate: revision.date,\n        nextRevId: revision.id,\n        bundle: bundleCode,\n        map: bundleMap,\n      };\n    } catch (error) {\n      this.metro._reporter.update({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_build_failed',\n      });\n\n      throw error;\n    }\n  }\n\n  private getMetroSerializer() {\n    return (\n      this.metro?._config?.serializer.customSerializer ||\n      ((entryPoint, preModules, graph, options) =>\n        bundleToString(baseJSBundle(entryPoint, preModules, graph, options)).code)\n    );\n  }\n\n  private getMetroRevision(\n    resolvedEntryFilePath: string,\n    {\n      graphOptions,\n      transformOptions,\n      resolverOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n      graphOptions: {\n        shallow: boolean;\n        lazy: boolean;\n      };\n    }\n  ) {\n    assert(this.metro, 'Metro server must be running to bundle directly.');\n    const config = this.metro._config;\n\n    const graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n      unstable_allowRequireContext: config.transformer.unstable_allowRequireContext,\n      resolverOptions,\n      shallow: graphOptions.shallow,\n      lazy: graphOptions.lazy,\n    });\n    return this.metro.getBundler().getRevisionByGraphId(graphId);\n  }\n\n  private async resolveRelativePathAsync(\n    moduleId: string,\n    {\n      resolverOptions,\n      transformOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n    }\n  ) {\n    assert(this.metro, 'cannot invoke resolveRelativePathAsync without metro instance');\n    return await this.metro._resolveRelativePath(convertPathToModuleSpecifier(moduleId), {\n      relativeTo: 'server',\n      resolverOptions,\n      transformOptions,\n    });\n  }\n}\n\nfunction getBuildID(buildNumber: number): string {\n  return buildNumber.toString(36);\n}\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n\nasync function sourceMapStringAsync(\n  modules: readonly import('metro/src/DeltaBundler/types').Module<any>[],\n  options: SourceMapGeneratorOptions\n): Promise<string> {\n  return (await sourceMapGeneratorNonBlocking(modules, options)).toString(undefined, {\n    excludeSource: options.excludeSource,\n  });\n}\n"],"names":["MetroBundlerDevServer","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","BundlerDevServer","metro","hmrServer","ssrHmrClients","Map","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","exportExpoRouterApiRoutesAsync","includeSourceMaps","outputDir","prerenderManifest","platform","routerRoot","instanceMetroOptions","assert","appDir","path","join","projectRoot","manifest","getExpoRouterRoutesManifestAsync","files","rscPath","isReactServerComponentsEnabled","apiRoutes","find","route","page","startsWith","push","file","resolveFrom","namedRegex","routeKeys","rsc","filepath","isAbsolute","contents","bundleApiRoute","artifactFilename","relative","replace","src","map","artifactBasename","encodeURIComponent","basename","parsedMap","JSON","parse","set","stringify","version","sources","source","convertPathToModuleSpecifier","sourcesContent","Array","length","fill","names","mappings","apiRouteId","targetDomain","htmlRoutes","exp","getConfig","fetchManifest","extra","router","platformRoutes","asJson","CommandError","getServerManifestAsync","getBuildTimeServerManifestAsync","ssrLoadModule","environment","isReactServerRoutesEnabled","serverManifest","getStaticRenderFunctionAsync","url","getDevServerUrlOrAssert","getStaticContent","getManifest","preserveApiRoutes","renderAsync","URL","getStaticResourcesAsync","mainModuleName","clientBoundaries","mode","minify","isExporting","baseUrl","reactCompiler","asyncRoutes","resolvedMainModuleName","resolveMainModuleName","metroImportAsArtifactsAsync","splitChunks","EXPO_NO_BUNDLE_SPLITTING","serializerIncludeMaps","lazy","shouldEnableAsyncImports","bytecode","getStaticPageAsync","pathname","devBundleUrlPathname","createBundleUrlPath","bundleStaticHtml","location","artifacts","resources","staticHtml","Promise","all","content","serializeHtmlWithAssets","template","devBundleUrl","hydrate","EXPO_WEB_DEV_HYDRATE","filePath","specificOptions","extras","res","ssrLoadModuleContents","hot","serverRoot","getMetroServerRoot","relativePath","filename","setupHmr","evalMetroAndWrapFunctions","results","serializerOutput","assets","metroLoadModuleContents","extraOptions","opts","inlineSourceMap","engine","expoBundleOptions","getMetroDirectBundleOptions","resolverOptions","customResolverOptions","dev","transformOptions","type","unstable_transformProfile","customTransformOptions","Object","create","runtimeBytecodeVersion","resolvedEntryFilePath","resolveRelativePathAsync","createBundleUrlOsPath","_bundleDirectAsync","graphOptions","shallow","serializerOptions","modulesOnly","runModule","sourceUrl","sourceMapUrl","bundle","rest","scriptContents","wrapBundle","cachedSourceMaps","nativeExportBundleAsync","singlePageReactServerComponentExportAsync","legacySinglePageExportBundleAsync","reactClientReferences","reactServerReferences","serverActionReferencesInServer","cssModules","rscRenderer","getExpoRouterClientReferencesAsync","domRoot","filter","a","artifact","metadata","ref","fileURLToFilePath","flat","Boolean","Error","nestedClientBoundaries","exportServerActionsAsync","entryPoints","hasUniqueClientBoundaries","some","boundary","includes","Set","concat","clientBoundariesAsOpaqueIds","toPosixPath","moduleIdToSplitBundle","paths","values","reduce","acc","ssrManifest","keys","forEach","exportRoutesAsync","fromEntries","from","entries","key","value","output","watchEnvironmentVariables","instance","envFiles","runtimeEnv","getFiles","NODE_ENV","fileName","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","config","skipSDKVersionRequirement","experiments","reactServerComponentRoutes","reactServerFunctions","isReactServerActionsOnlyEnabled","useServerRendering","web","hasApiRoutes","getBaseUrlFromExpoConfig","getAsyncRoutesFromExpoConfig","getRouterDirectoryModuleIdWithManifest","parsedOptions","maxWorkers","resetCache","resetDevServer","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","DevToolsPluginMiddleware","devToolsPluginManager","deepLinkMiddleware","RuntimeRedirectMiddleware","getLocation","runtime","constructDevClientUrl","constructUrl","domComponentRenderer","createDomComponentsMiddleware","metroRoot","CreateFileMiddleware","isTargetingWeb","ServeStaticMiddleware","FaviconMiddleware","observeAnyFileChanges","events","invalidateApiRouteCache","hasWarnedAboutApiRoutes","event","isApiRouteConvention","warnInvalidWebOutput","bindRSCDevModuleInjectionHandler","rscMiddleware","createServerComponentsMiddleware","bind","ssrLoadModuleArtifacts","useClientRouter","createModuleId","_createModuleId","onReloadRscEvent","HistoryFallbackMiddleware","internal","createRouteHandlerMiddleware","functionFilePath","ssrImportApiRoute","originalClose","close","callback","err","assertMetroPrivateServer","host","protocol","registerSsrHmrAsync","onReload","has","sendFn","message","data","String","update","body","isInitialUpdate","added","modified","deleted","hasUpdate","Log","error","_bundler","_revisionsByGraphId","client","onClientConnect","optedIntoHMR","_registerEntryPoint","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","req","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","pendingRouteOperations","get","bundleAsync","undefined","apiRoute","evalMetroNoHandling","htmlServerError","getErrorOverlayHtmlAsync","Response","status","headers","internalError","clear","globalThis","__expo_rsc_inject_module","sendClientModule","code","id","broadcastMessage","toString","_config","buildNumber","getNewBuildNumber","bundlePerfLogger","unstable_perfLoggerFactory","onProgress","transformedFileCount","totalFileCount","_reporter","buildID","getBuildID","revPromise","getMetroRevision","point","annotate","bool","initial_build","bundleDetails","bundleType","entryFile","isPrefetch","delta","revision","props","getBundler","initializeGraph","updateGraph","int","graph_node_count","graph","dependencies","size","shouldAddToIgnoreList","_shouldAddModuleToIgnoreList","serializer","getMetroSerializer","prepend","asyncRequireModulePath","_resolveRelativePath","transformer","relativeTo","processModuleFilter","getRunModuleStatement","includeAsyncPaths","runBeforeMainModule","getModulesRunBeforeMainModule","unstable_serverRoot","bundleCode","bundleMap","parsed","isArray","asset","numModifiedFiles","reset","lastModifiedDate","date","nextRevId","sourceMapStringAsync","_getSortedModules","excludeSource","customSerializer","entryPoint","preModules","bundleToString","baseJSBundle","graphId","getGraphId","unstable_allowRequireContext","getRevisionByGraphId","moduleId","str","modules","sourceMapGeneratorNonBlocking"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/MetroBundlerDevServer.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getConfig } from '@expo/config';\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport * as runtimeEnv from '@expo/env';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport { DeltaResult, TransformInputOptions } from 'metro';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\nimport {\n  sourceMapGeneratorNonBlocking,\n  type SourceMapGeneratorOptions,\n} from 'metro/src/DeltaBundler/Serializers/sourceMapGenerator';\nimport type MetroHmrServer from 'metro/src/HmrServer';\nimport type { Client as MetroHmrClient } from 'metro/src/HmrServer';\nimport { GraphRevision } from 'metro/src/IncrementalBundler';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport getGraphId from 'metro/src/lib/getGraphId';\nimport { TransformProfile } from 'metro-babel-transformer';\nimport type { CustomResolverOptions } from 'metro-resolver/src/types';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport {\n  createServerComponentsMiddleware,\n  fileURLToFilePath,\n} from './createServerComponentsMiddleware';\nimport { createRouteHandlerMiddleware } from './createServerRouteMiddleware';\nimport { ExpoRouterServerManifestV1, fetchManifest } from './fetchRouterManifest';\nimport { instantiateMetroAsync } from './instantiateMetro';\nimport { getErrorOverlayHtmlAsync, IS_METRO_BUNDLE_ERROR_SYMBOL } from './metroErrorInterface';\nimport { assertMetroPrivateServer, MetroPrivateServer } from './metroPrivateServer';\nimport { metroWatchTypeScriptFiles } from './metroWatchTypeScriptFiles';\nimport {\n  getRouterDirectoryModuleIdWithManifest,\n  hasWarnedAboutApiRoutes,\n  isApiRouteConvention,\n  warnInvalidWebOutput,\n} from './router';\nimport { serializeHtmlWithAssets } from './serializeHtml';\nimport { observeAnyFileChanges, observeFileChanges } from './waitForMetroToObserveTypeScriptFile';\nimport { BundleAssetWithFileHashes, ExportAssetMap } from '../../../export/saveAssets';\nimport { Log } from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { toPosixPath } from '../../../utils/filePath';\nimport { getFreePortAsync } from '../../../utils/port';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport {\n  cachedSourceMaps,\n  evalMetroAndWrapFunctions,\n  evalMetroNoHandling,\n} from '../getStaticRenderFunctions';\nimport { ContextModuleSourceMapsMiddleware } from '../middleware/ContextModuleSourceMapsMiddleware';\nimport { CreateFileMiddleware } from '../middleware/CreateFileMiddleware';\nimport { DevToolsPluginMiddleware } from '../middleware/DevToolsPluginMiddleware';\nimport { createDomComponentsMiddleware } from '../middleware/DomComponentsMiddleware';\nimport { FaviconMiddleware } from '../middleware/FaviconMiddleware';\nimport { HistoryFallbackMiddleware } from '../middleware/HistoryFallbackMiddleware';\nimport { InterstitialPageMiddleware } from '../middleware/InterstitialPageMiddleware';\nimport { resolveMainModuleName } from '../middleware/ManifestMiddleware';\nimport { ReactDevToolsPageMiddleware } from '../middleware/ReactDevToolsPageMiddleware';\nimport { RuntimeRedirectMiddleware } from '../middleware/RuntimeRedirectMiddleware';\nimport { ServeStaticMiddleware } from '../middleware/ServeStaticMiddleware';\nimport {\n  convertPathToModuleSpecifier,\n  createBundleUrlPath,\n  createBundleUrlOsPath,\n  ExpoMetroOptions,\n  getAsyncRoutesFromExpoConfig,\n  getBaseUrlFromExpoConfig,\n  getMetroDirectBundleOptions,\n  shouldEnableAsyncImports,\n} from '../middleware/metroOptions';\nimport { prependMiddleware } from '../middleware/mutations';\nimport { startTypescriptTypeGenerationAsync } from '../type-generation/startTypescriptTypeGeneration';\n\nexport type ExpoRouterRuntimeManifest = Awaited<\n  ReturnType<typeof import('expo-router/build/static/renderStaticContent').getManifest>\n>;\ntype MetroOnProgress = NonNullable<\n  import('metro/src/DeltaBundler/types').Options<void>['onProgress']\n>;\ntype SSRLoadModuleFunc = <T extends Record<string, any>>(\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>,\n  extras?: { hot?: boolean }\n) => Promise<T>;\n\nconst debug = require('debug')('expo:start:server:metro') as typeof console.log;\n\n/** Default port to use for apps running in Expo Go. */\nconst EXPO_GO_METRO_PORT = 8081;\n\n/** Default port to use for apps that run in standard React Native projects or Expo Dev Clients. */\nconst DEV_CLIENT_METRO_PORT = 8081;\n\nexport class MetroBundlerDevServer extends BundlerDevServer {\n  private metro: MetroPrivateServer | null = null;\n  private hmrServer: MetroHmrServer | null = null;\n  private ssrHmrClients: Map<string, MetroHmrClient> = new Map();\n  isReactServerComponentsEnabled?: boolean;\n  isReactServerRoutesEnabled?: boolean;\n\n  get name(): string {\n    return 'metro';\n  }\n\n  async resolvePortAsync(options: Partial<BundlerStartOptions> = {}): Promise<number> {\n    const port =\n      // If the manually defined port is busy then an error should be thrown...\n      options.port ??\n      // Otherwise use the default port based on the runtime target.\n      (options.devClient\n        ? // Don't check if the port is busy if we're using the dev client since most clients are hardcoded to 8081.\n          Number(process.env.RCT_METRO_PORT) || DEV_CLIENT_METRO_PORT\n        : // Otherwise (running in Expo Go) use a free port that falls back on the classic 8081 port.\n          await getFreePortAsync(EXPO_GO_METRO_PORT));\n\n    return port;\n  }\n\n  async exportExpoRouterApiRoutesAsync({\n    includeSourceMaps,\n    outputDir,\n    prerenderManifest,\n    platform,\n  }: {\n    includeSourceMaps?: boolean;\n    outputDir: string;\n    // This does not contain the API routes info.\n    prerenderManifest: ExpoRouterServerManifestV1;\n    platform: string;\n  }): Promise<{ files: ExportAssetMap; manifest: ExpoRouterServerManifestV1<string> }> {\n    const { routerRoot } = this.instanceMetroOptions;\n    assert(\n      routerRoot != null,\n      'The server must be started before calling exportExpoRouterApiRoutesAsync.'\n    );\n\n    const appDir = path.join(this.projectRoot, routerRoot);\n    const manifest = await this.getExpoRouterRoutesManifestAsync({ appDir });\n\n    const files: ExportAssetMap = new Map();\n\n    // Inject RSC middleware.\n    const rscPath = '/_flight/[...rsc]';\n\n    if (\n      this.isReactServerComponentsEnabled &&\n      // If the RSC route is not already in the manifest, add it.\n      !manifest.apiRoutes.find((route) => route.page.startsWith('/_flight/'))\n    ) {\n      debug('Adding RSC route to the manifest:', rscPath);\n      // NOTE: This might need to be sorted to the correct spot in the future.\n      manifest.apiRoutes.push({\n        file: resolveFrom(this.projectRoot, '@expo/cli/static/template/[...rsc]+api.ts'),\n        page: rscPath,\n        namedRegex: '^/_flight(?:/(?<rsc>.+?))?(?:/)?$',\n        routeKeys: { rsc: 'rsc' },\n      });\n    }\n\n    for (const route of manifest.apiRoutes) {\n      const filepath = path.isAbsolute(route.file) ? route.file : path.join(appDir, route.file);\n      const contents = await this.bundleApiRoute(filepath, { platform });\n\n      const artifactFilename =\n        route.page === rscPath\n          ? // HACK: Add RSC renderer to the output...\n            path.join(outputDir, '.' + rscPath + '.js')\n          : path.join(outputDir, path.relative(appDir, filepath.replace(/\\.[tj]sx?$/, '.js')));\n\n      if (contents) {\n        let src = contents.src;\n\n        if (includeSourceMaps && contents.map) {\n          // TODO(kitten): Merge the source map transformer in the future\n          // https://github.com/expo/expo/blob/0dffdb15/packages/%40expo/metro-config/src/serializer/serializeChunks.ts#L422-L439\n          // Alternatively, check whether `sourcesRoot` helps here\n          const artifactBasename = encodeURIComponent(path.basename(artifactFilename) + '.map');\n          src = src.replace(\n            /\\/\\/# sourceMappingURL=.*/g,\n            `//# sourceMappingURL=${artifactBasename}`\n          );\n\n          const parsedMap =\n            typeof contents.map === 'string' ? JSON.parse(contents.map) : contents.map;\n          files.set(artifactFilename + '.map', {\n            contents: JSON.stringify({\n              version: parsedMap.version,\n              sources: parsedMap.sources.map((source: string) => {\n                source =\n                  typeof source === 'string' && source.startsWith(this.projectRoot)\n                    ? path.relative(this.projectRoot, source)\n                    : source;\n                return convertPathToModuleSpecifier(source);\n              }),\n              sourcesContent: new Array(parsedMap.sources.length).fill(null),\n              names: parsedMap.names,\n              mappings: parsedMap.mappings,\n            }),\n            apiRouteId: route.page,\n            targetDomain: 'server',\n          });\n        }\n        files.set(artifactFilename, {\n          contents: src,\n          apiRouteId: route.page,\n          targetDomain: 'server',\n        });\n      }\n      // Remap the manifest files to represent the output files.\n      route.file = artifactFilename;\n    }\n\n    return {\n      manifest: {\n        ...manifest,\n        htmlRoutes: prerenderManifest.htmlRoutes,\n      },\n      files,\n    };\n  }\n\n  async getExpoRouterRoutesManifestAsync({ appDir }: { appDir: string }) {\n    // getBuiltTimeServerManifest\n    const { exp } = getConfig(this.projectRoot);\n    const manifest = await fetchManifest(this.projectRoot, {\n      ...exp.extra?.router?.platformRoutes,\n      asJson: true,\n      appDir,\n    });\n\n    if (!manifest) {\n      throw new CommandError(\n        'EXPO_ROUTER_SERVER_MANIFEST',\n        'Unexpected error: server manifest could not be fetched.'\n      );\n    }\n\n    return manifest;\n  }\n\n  async getServerManifestAsync(): Promise<{\n    serverManifest: ExpoRouterServerManifestV1;\n    htmlManifest: ExpoRouterRuntimeManifest;\n  }> {\n    // NOTE: This could probably be folded back into `renderStaticContent` when expo-asset and font support RSC.\n    const { getBuildTimeServerManifestAsync, getManifest } = await this.ssrLoadModule<\n      typeof import('expo-router/build/static/getServerManifest')\n    >('expo-router/build/static/getServerManifest.js', {\n      // Only use react-server environment when the routes are using react-server rendering by default.\n      environment: this.isReactServerRoutesEnabled ? 'react-server' : 'node',\n    });\n\n    return {\n      serverManifest: await getBuildTimeServerManifestAsync(),\n      htmlManifest: await getManifest(),\n    };\n  }\n\n  async getStaticRenderFunctionAsync(): Promise<{\n    serverManifest: ExpoRouterServerManifestV1;\n    manifest: ExpoRouterRuntimeManifest;\n    renderAsync: (path: string) => Promise<string>;\n  }> {\n    const url = this.getDevServerUrlOrAssert();\n\n    const { getStaticContent, getManifest, getBuildTimeServerManifestAsync } =\n      await this.ssrLoadModule<typeof import('expo-router/build/static/renderStaticContent')>(\n        'expo-router/node/render.js',\n        {\n          // This must always use the legacy rendering resolution (no `react-server`) because it leverages\n          // the previous React SSG utilities which aren't available in React 19.\n          environment: 'node',\n        }\n      );\n\n    const { exp } = getConfig(this.projectRoot);\n\n    return {\n      serverManifest: await getBuildTimeServerManifestAsync(),\n      // Get routes from Expo Router.\n      manifest: await getManifest({ preserveApiRoutes: false, ...exp.extra?.router }),\n      // Get route generating function\n      async renderAsync(path: string) {\n        return await getStaticContent(new URL(path, url));\n      },\n    };\n  }\n\n  async getStaticResourcesAsync({\n    includeSourceMaps,\n    mainModuleName,\n    clientBoundaries = this.instanceMetroOptions.clientBoundaries ?? [],\n    platform = 'web',\n  }: {\n    includeSourceMaps?: boolean;\n    mainModuleName?: string;\n    clientBoundaries?: string[];\n    platform?: string;\n  } = {}) {\n    const { mode, minify, isExporting, baseUrl, reactCompiler, routerRoot, asyncRoutes } =\n      this.instanceMetroOptions;\n    assert(\n      mode != null &&\n        isExporting != null &&\n        baseUrl != null &&\n        routerRoot != null &&\n        reactCompiler != null &&\n        asyncRoutes != null,\n      'The server must be started before calling getStaticResourcesAsync.'\n    );\n\n    const resolvedMainModuleName =\n      mainModuleName ?? './' + resolveMainModuleName(this.projectRoot, { platform });\n    return await this.metroImportAsArtifactsAsync(resolvedMainModuleName, {\n      splitChunks: isExporting && !env.EXPO_NO_BUNDLE_SPLITTING,\n      platform,\n      mode,\n      minify,\n      environment: 'client',\n      serializerIncludeMaps: includeSourceMaps,\n      mainModuleName: resolvedMainModuleName,\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n      asyncRoutes,\n      baseUrl,\n      isExporting,\n      routerRoot,\n      clientBoundaries,\n      reactCompiler,\n      bytecode: false,\n    });\n  }\n\n  private async getStaticPageAsync(pathname: string) {\n    const { mode, isExporting, clientBoundaries, baseUrl, reactCompiler, routerRoot, asyncRoutes } =\n      this.instanceMetroOptions;\n    assert(\n      mode != null &&\n        isExporting != null &&\n        baseUrl != null &&\n        reactCompiler != null &&\n        routerRoot != null &&\n        asyncRoutes != null,\n      'The server must be started before calling getStaticPageAsync.'\n    );\n    const platform = 'web';\n\n    const devBundleUrlPathname = createBundleUrlPath({\n      splitChunks: isExporting && !env.EXPO_NO_BUNDLE_SPLITTING,\n      platform,\n      mode,\n      environment: 'client',\n      reactCompiler,\n      mainModuleName: resolveMainModuleName(this.projectRoot, { platform }),\n      lazy: shouldEnableAsyncImports(this.projectRoot),\n      baseUrl,\n      isExporting,\n      asyncRoutes,\n      routerRoot,\n      clientBoundaries,\n      bytecode: false,\n    });\n\n    const bundleStaticHtml = async (): Promise<string> => {\n      const { getStaticContent } = await this.ssrLoadModule<\n        typeof import('expo-router/build/static/renderStaticContent')\n      >('expo-router/node/render.js', {\n        // This must always use the legacy rendering resolution (no `react-server`) because it leverages\n        // the previous React SSG utilities which aren't available in React 19.\n        environment: 'node',\n        minify: false,\n        isExporting,\n        platform,\n      });\n\n      const location = new URL(pathname, this.getDevServerUrlOrAssert());\n      return await getStaticContent(location);\n    };\n\n    const [{ artifacts: resources }, staticHtml] = await Promise.all([\n      this.getStaticResourcesAsync({\n        clientBoundaries: [],\n      }),\n      bundleStaticHtml(),\n    ]);\n    const content = serializeHtmlWithAssets({\n      isExporting,\n      resources,\n      template: staticHtml,\n      devBundleUrl: devBundleUrlPathname,\n      baseUrl,\n      hydrate: env.EXPO_WEB_DEV_HYDRATE,\n    });\n    return {\n      content,\n      resources,\n    };\n  }\n\n  // Set when the server is started.\n  private instanceMetroOptions: Partial<ExpoMetroOptions> = {};\n\n  private ssrLoadModule: SSRLoadModuleFunc = async (\n    filePath,\n    specificOptions = {},\n    extras = {}\n  ) => {\n    const res = await this.ssrLoadModuleContents(filePath, specificOptions);\n\n    if (extras.hot && this.instanceMetroOptions.isExporting !== true) {\n      // Register SSR HMR\n      const serverRoot = getMetroServerRoot(this.projectRoot);\n      const relativePath = path.relative(serverRoot, res.filename);\n      const url = new URL(relativePath, this.getDevServerUrlOrAssert());\n      this.setupHmr(url);\n    }\n\n    return evalMetroAndWrapFunctions(\n      this.projectRoot,\n      res.src,\n      res.filename,\n      specificOptions.isExporting ?? this.instanceMetroOptions.isExporting!\n    );\n  };\n\n  private async metroImportAsArtifactsAsync(\n    filePath: string,\n    specificOptions: Partial<Omit<ExpoMetroOptions, 'serializerOutput'>> = {}\n  ) {\n    const results = await this.ssrLoadModuleContents(filePath, {\n      serializerOutput: 'static',\n      ...specificOptions,\n    });\n\n    // NOTE: This could potentially need more validation in the future.\n    if (results.artifacts && results.assets) {\n      return {\n        artifacts: results.artifacts,\n        assets: results.assets,\n        src: results.src,\n        filename: results.filename,\n        map: results.map,\n      };\n    }\n    throw new CommandError('Invalid bundler results: ' + results);\n  }\n\n  private async metroLoadModuleContents(\n    filePath: string,\n    specificOptions: ExpoMetroOptions,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ) {\n    const { baseUrl } = this.instanceMetroOptions;\n    assert(baseUrl != null, 'The server must be started before calling metroLoadModuleContents.');\n\n    const opts: ExpoMetroOptions = {\n      // TODO: Possibly issues with using an absolute path here...\n      // mainModuleName: filePath,\n      lazy: false,\n      asyncRoutes: false,\n      inlineSourceMap: false,\n      engine: 'hermes',\n      minify: false,\n      // bytecode: false,\n      // Bundle in Node.js mode for SSR.\n      environment: 'node',\n      // platform: 'web',\n      // mode: 'development',\n      //\n      ...this.instanceMetroOptions,\n      baseUrl,\n      // routerRoot,\n      // isExporting,\n      ...specificOptions,\n    };\n\n    const expoBundleOptions = getMetroDirectBundleOptions(opts);\n\n    const resolverOptions = {\n      customResolverOptions: expoBundleOptions.customResolverOptions ?? {},\n      dev: expoBundleOptions.dev ?? true,\n    };\n\n    const transformOptions: TransformInputOptions = {\n      dev: expoBundleOptions.dev ?? true,\n      hot: true,\n      minify: expoBundleOptions.minify ?? false,\n      type: 'module',\n      unstable_transformProfile:\n        extraOptions.unstable_transformProfile ??\n        expoBundleOptions.unstable_transformProfile ??\n        'default',\n      customTransformOptions: expoBundleOptions.customTransformOptions ?? Object.create(null),\n      platform: expoBundleOptions.platform ?? 'web',\n      // @ts-expect-error: `runtimeBytecodeVersion` does not exist in `expoBundleOptions` or `TransformInputOptions`\n      runtimeBytecodeVersion: expoBundleOptions.runtimeBytecodeVersion,\n    };\n\n    const resolvedEntryFilePath = await this.resolveRelativePathAsync(filePath, {\n      resolverOptions,\n      transformOptions,\n    });\n\n    // Use fully qualified URL with all options to represent the file path that's used for source maps and HMR. This prevents collisions.\n    const filename = createBundleUrlOsPath({\n      ...opts,\n      mainModuleName: resolvedEntryFilePath,\n    });\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    const results = await this._bundleDirectAsync(resolvedEntryFilePath, {\n      graphOptions: {\n        lazy: expoBundleOptions.lazy ?? false,\n        shallow: expoBundleOptions.shallow ?? false,\n      },\n      resolverOptions,\n      serializerOptions: {\n        ...expoBundleOptions.serializerOptions,\n\n        inlineSourceMap: expoBundleOptions.inlineSourceMap ?? false,\n        modulesOnly: expoBundleOptions.modulesOnly ?? false,\n        runModule: expoBundleOptions.runModule ?? true,\n        // @ts-expect-error\n        sourceUrl: expoBundleOptions.sourceUrl,\n        // @ts-expect-error\n        sourceMapUrl: extraOptions.sourceMapUrl ?? expoBundleOptions.sourceMapUrl,\n      },\n      transformOptions,\n    });\n\n    return {\n      ...results,\n      filename,\n    };\n  }\n\n  private async ssrLoadModuleContents(\n    filePath: string,\n    specificOptions: Partial<ExpoMetroOptions> = {}\n  ) {\n    const { baseUrl, routerRoot, isExporting } = this.instanceMetroOptions;\n    assert(\n      baseUrl != null && routerRoot != null && isExporting != null,\n      'The server must be started before calling ssrLoadModuleContents.'\n    );\n\n    const opts: ExpoMetroOptions = {\n      // TODO: Possibly issues with using an absolute path here...\n      mainModuleName: convertPathToModuleSpecifier(filePath),\n      lazy: false,\n      asyncRoutes: false,\n      inlineSourceMap: false,\n      engine: 'hermes',\n      minify: false,\n      bytecode: false,\n      // Bundle in Node.js mode for SSR unless RSC is enabled.\n      environment: this.isReactServerComponentsEnabled ? 'react-server' : 'node',\n      platform: 'web',\n      mode: 'development',\n      //\n      ...this.instanceMetroOptions,\n\n      // Mostly disable compiler in SSR bundles.\n      reactCompiler: false,\n      baseUrl,\n      routerRoot,\n      isExporting,\n\n      ...specificOptions,\n    };\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    const { filename, bundle, map, ...rest } = await this.metroLoadModuleContents(filePath, opts);\n    const scriptContents = wrapBundle(bundle);\n\n    if (map) {\n      debug('Registering SSR source map for:', filename);\n      cachedSourceMaps.set(filename, { url: this.projectRoot, map });\n    } else {\n      debug('No SSR source map found for:', filename);\n    }\n\n    return {\n      ...rest,\n      src: scriptContents,\n      filename,\n      map,\n    };\n  }\n\n  async nativeExportBundleAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    files: ExportAssetMap,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{\n    artifacts: SerialAsset[];\n    assets: readonly BundleAssetWithFileHashes[];\n    files?: ExportAssetMap;\n  }> {\n    if (this.isReactServerComponentsEnabled) {\n      return this.singlePageReactServerComponentExportAsync(options, files, extraOptions);\n    }\n\n    return this.legacySinglePageExportBundleAsync(options, extraOptions);\n  }\n\n  private async singlePageReactServerComponentExportAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'baseUrl' | 'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    files: ExportAssetMap,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{\n    artifacts: SerialAsset[];\n    assets: readonly BundleAssetWithFileHashes[];\n    files: ExportAssetMap;\n  }> {\n    // NOTE(EvanBacon): This will not support any code elimination since it's a static pass.\n    let {\n      reactClientReferences: clientBoundaries,\n      reactServerReferences: serverActionReferencesInServer,\n      cssModules,\n    } = await this.rscRenderer!.getExpoRouterClientReferencesAsync(\n      {\n        platform: options.platform,\n        domRoot: options.domRoot,\n      },\n      files\n    );\n\n    // TODO: The output keys should be in production format or use a lookup manifest.\n\n    debug('Evaluated client boundaries:', clientBoundaries);\n\n    // Run metro bundler and create the JS bundles/source maps.\n    let bundle = await this.legacySinglePageExportBundleAsync(\n      {\n        ...options,\n        clientBoundaries,\n      },\n      extraOptions\n    );\n\n    // Get the React server action boundaries from the client bundle.\n    const reactServerReferences = bundle.artifacts\n      .filter((a) => a.type === 'js')\n      .map((artifact) =>\n        artifact.metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref))\n      )\n      // TODO: Segment by module for splitting.\n      .flat()\n      .filter(Boolean) as string[];\n\n    if (!reactServerReferences) {\n      // Issue with babel plugin / metro-config.\n      throw new Error(\n        'Static server action references were not returned from the Metro client bundle'\n      );\n    }\n\n    debug('React server action boundaries from client:', reactServerReferences);\n\n    // When we export the server actions that were imported from the client, we may need to re-bundle the client with the new client boundaries.\n    const { clientBoundaries: nestedClientBoundaries } =\n      await this.rscRenderer!.exportServerActionsAsync(\n        {\n          platform: options.platform,\n          domRoot: options.domRoot,\n          entryPoints: [...serverActionReferencesInServer, ...reactServerReferences],\n        },\n        files\n      );\n\n    // TODO: Check against all modules in the initial client bundles.\n    const hasUniqueClientBoundaries = nestedClientBoundaries.some(\n      (boundary) => !clientBoundaries.includes(boundary)\n    );\n\n    if (hasUniqueClientBoundaries) {\n      debug('Re-bundling client with nested client boundaries:', nestedClientBoundaries);\n      clientBoundaries = [...new Set(clientBoundaries.concat(nestedClientBoundaries))];\n      // Re-bundle the client with the new client boundaries that only exist in server actions that were imported from the client.\n      // Run metro bundler and create the JS bundles/source maps.\n      bundle = await this.legacySinglePageExportBundleAsync(\n        {\n          ...options,\n          clientBoundaries,\n        },\n        extraOptions\n      );\n    }\n\n    // Inject the global CSS that was imported during the server render.\n    bundle.artifacts.push(...cssModules);\n\n    const serverRoot = getMetroServerRoot(this.projectRoot);\n\n    // HACK: Maybe this should be done in the serializer.\n    const clientBoundariesAsOpaqueIds = clientBoundaries.map((boundary) =>\n      // NOTE(cedric): relative module specifiers / IDs should always be POSIX formatted\n      toPosixPath(path.relative(serverRoot, boundary))\n    );\n    const moduleIdToSplitBundle = (\n      bundle.artifacts\n        .map((artifact) => artifact?.metadata?.paths && Object.values(artifact.metadata.paths))\n        .filter(Boolean)\n        .flat() as Record<string, string>[]\n    ).reduce((acc, paths) => ({ ...acc, ...paths }), {});\n\n    debug('SSR Manifest:', moduleIdToSplitBundle, clientBoundariesAsOpaqueIds);\n\n    const ssrManifest = new Map<string, string>();\n\n    if (Object.keys(moduleIdToSplitBundle).length) {\n      clientBoundariesAsOpaqueIds.forEach((boundary) => {\n        if (boundary in moduleIdToSplitBundle) {\n          ssrManifest.set(boundary, moduleIdToSplitBundle[boundary]);\n        } else {\n          throw new Error(\n            `Could not find boundary \"${boundary}\" in the SSR manifest. Available: ${Object.keys(moduleIdToSplitBundle).join(', ')}`\n          );\n        }\n      });\n    } else {\n      // Native apps with bundle splitting disabled.\n      debug('No split bundles');\n      clientBoundariesAsOpaqueIds.forEach((boundary) => {\n        // @ts-expect-error\n        ssrManifest.set(boundary, null);\n      });\n    }\n\n    // Export the static RSC files\n    await this.rscRenderer!.exportRoutesAsync(\n      {\n        platform: options.platform,\n        ssrManifest,\n      },\n      files\n    );\n\n    // Save the SSR manifest so we can perform more replacements in the server renderer and with server actions.\n    files.set(`_expo/rsc/${options.platform}/ssr-manifest.js`, {\n      targetDomain: 'server',\n      contents:\n        'module.exports = ' +\n        JSON.stringify(\n          // TODO: Add a less leaky version of this across the framework with just [key, value] (module ID, chunk).\n          Object.fromEntries(\n            Array.from(ssrManifest.entries()).map(([key, value]) => [\n              path.join(serverRoot, key),\n              [key, value],\n            ])\n          )\n        ),\n    });\n\n    return { ...bundle, files };\n  }\n\n  async legacySinglePageExportBundleAsync(\n    options: Omit<\n      ExpoMetroOptions,\n      'routerRoot' | 'asyncRoutes' | 'isExporting' | 'serializerOutput' | 'environment'\n    >,\n    extraOptions: {\n      sourceMapUrl?: string;\n      unstable_transformProfile?: TransformProfile;\n    } = {}\n  ): Promise<{ artifacts: SerialAsset[]; assets: readonly BundleAssetWithFileHashes[] }> {\n    const { baseUrl, routerRoot, isExporting } = this.instanceMetroOptions;\n    assert(options.mainModuleName != null, 'mainModuleName must be provided in options.');\n    assert(\n      baseUrl != null && routerRoot != null && isExporting != null,\n      'The server must be started before calling legacySinglePageExportBundleAsync.'\n    );\n\n    const opts: ExpoMetroOptions = {\n      ...this.instanceMetroOptions,\n      baseUrl,\n      routerRoot,\n      isExporting,\n      ...options,\n      environment: 'client',\n      serializerOutput: 'static',\n    };\n\n    // https://github.com/facebook/metro/blob/2405f2f6c37a1b641cc379b9c733b1eff0c1c2a1/packages/metro/src/lib/parseOptionsFromUrl.js#L55-L87\n    if (!opts.mainModuleName.startsWith('/') && !path.isAbsolute(opts.mainModuleName)) {\n      opts.mainModuleName = './' + opts.mainModuleName;\n    }\n\n    const output = await this.metroLoadModuleContents(opts.mainModuleName, opts, extraOptions);\n\n    return {\n      artifacts: output.artifacts!,\n      assets: output.assets!,\n    };\n  }\n\n  async watchEnvironmentVariables() {\n    if (!this.instance) {\n      throw new Error(\n        'Cannot observe environment variable changes without a running Metro instance.'\n      );\n    }\n    if (!this.metro) {\n      // This can happen when the run command is used and the server is already running in another\n      // process.\n      debug('Skipping Environment Variable observation because Metro is not running (headless).');\n      return;\n    }\n\n    const envFiles = runtimeEnv\n      .getFiles(process.env.NODE_ENV)\n      .map((fileName) => path.join(this.projectRoot, fileName));\n\n    observeFileChanges(\n      {\n        metro: this.metro,\n        server: this.instance.server,\n      },\n      envFiles,\n      () => {\n        debug('Reloading environment variables...');\n        // Force reload the environment variables.\n        runtimeEnv.load(this.projectRoot, { force: true });\n      }\n    );\n  }\n\n  rscRenderer: Awaited<ReturnType<typeof createServerComponentsMiddleware>> | null = null;\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    options.port = await this.resolvePortAsync(options);\n    this.urlCreator = this.getUrlCreator(options);\n\n    const config = getConfig(this.projectRoot, { skipSDKVersionRequirement: true });\n    const { exp } = config;\n    // NOTE: This will change in the future when it's less experimental, we enable React 19, and turn on more RSC flags by default.\n    const isReactServerComponentsEnabled =\n      !!exp.experiments?.reactServerComponentRoutes || !!exp.experiments?.reactServerFunctions;\n    const isReactServerActionsOnlyEnabled =\n      !exp.experiments?.reactServerComponentRoutes && !!exp.experiments?.reactServerFunctions;\n    this.isReactServerComponentsEnabled = isReactServerComponentsEnabled;\n    this.isReactServerRoutesEnabled = !!exp.experiments?.reactServerComponentRoutes;\n\n    const useServerRendering = ['static', 'server'].includes(exp.web?.output ?? '');\n    const hasApiRoutes = isReactServerComponentsEnabled || exp.web?.output === 'server';\n    const baseUrl = getBaseUrlFromExpoConfig(exp);\n    const asyncRoutes = getAsyncRoutesFromExpoConfig(exp, options.mode ?? 'development', 'web');\n    const routerRoot = getRouterDirectoryModuleIdWithManifest(this.projectRoot, exp);\n    const reactCompiler = !!exp.experiments?.reactCompiler;\n    const appDir = path.join(this.projectRoot, routerRoot);\n    const mode = options.mode ?? 'development';\n\n    if (isReactServerComponentsEnabled && useServerRendering) {\n      throw new CommandError(\n        `Experimental server component support does not support 'web.output: ${exp.web!.output}' yet. Use 'web.output: \"single\"' during the experimental phase.`\n      );\n    }\n\n    const instanceMetroOptions = {\n      isExporting: !!options.isExporting,\n      baseUrl,\n      mode,\n      routerRoot,\n      reactCompiler,\n      minify: options.minify,\n      asyncRoutes,\n      // Options that are changing between platforms like engine, platform, and environment aren't set here.\n    };\n    this.instanceMetroOptions = instanceMetroOptions;\n\n    const parsedOptions = {\n      port: options.port,\n      maxWorkers: options.maxWorkers,\n      resetCache: options.resetDevServer,\n    };\n\n    // Required for symbolication:\n    process.env.EXPO_DEV_SERVER_ORIGIN = `http://localhost:${options.port}`;\n\n    const { metro, hmrServer, server, middleware, messageSocket } = await instantiateMetroAsync(\n      this,\n      parsedOptions,\n      {\n        isExporting: !!options.isExporting,\n        exp,\n      }\n    );\n\n    if (!options.isExporting) {\n      const manifestMiddleware = await this.getManifestMiddlewareAsync(options);\n\n      // Important that we noop source maps for context modules as soon as possible.\n      prependMiddleware(middleware, new ContextModuleSourceMapsMiddleware().getHandler());\n\n      // We need the manifest handler to be the first middleware to run so our\n      // routes take precedence over static files. For example, the manifest is\n      // served from '/' and if the user has an index.html file in their project\n      // then the manifest handler will never run, the static middleware will run\n      // and serve index.html instead of the manifest.\n      // https://github.com/expo/expo/issues/13114\n      prependMiddleware(middleware, manifestMiddleware.getHandler());\n\n      middleware.use(\n        new InterstitialPageMiddleware(this.projectRoot, {\n          // TODO: Prevent this from becoming stale.\n          scheme: options.location.scheme ?? null,\n        }).getHandler()\n      );\n      middleware.use(new ReactDevToolsPageMiddleware(this.projectRoot).getHandler());\n      middleware.use(\n        new DevToolsPluginMiddleware(this.projectRoot, this.devToolsPluginManager).getHandler()\n      );\n\n      const deepLinkMiddleware = new RuntimeRedirectMiddleware(this.projectRoot, {\n        getLocation: ({ runtime }) => {\n          if (runtime === 'custom') {\n            return this.urlCreator?.constructDevClientUrl();\n          } else {\n            return this.urlCreator?.constructUrl({\n              scheme: 'exp',\n            });\n          }\n        },\n      });\n      middleware.use(deepLinkMiddleware.getHandler());\n\n      const serverRoot = getMetroServerRoot(this.projectRoot);\n\n      const domComponentRenderer = createDomComponentsMiddleware(\n        {\n          metroRoot: serverRoot,\n          projectRoot: this.projectRoot,\n        },\n        instanceMetroOptions\n      );\n      // Add support for DOM components.\n      // TODO: Maybe put behind a flag for now?\n      middleware.use(domComponentRenderer);\n\n      middleware.use(new CreateFileMiddleware(this.projectRoot).getHandler());\n\n      // Append support for redirecting unhandled requests to the index.html page on web.\n      if (this.isTargetingWeb()) {\n        // This MUST be after the manifest middleware so it doesn't have a chance to serve the template `public/index.html`.\n        middleware.use(new ServeStaticMiddleware(this.projectRoot).getHandler());\n\n        // This should come after the static middleware so it doesn't serve the favicon from `public/favicon.ico`.\n        middleware.use(new FaviconMiddleware(this.projectRoot).getHandler());\n      }\n\n      if (useServerRendering || isReactServerComponentsEnabled) {\n        observeAnyFileChanges(\n          {\n            metro,\n            server,\n          },\n          (events) => {\n            if (hasApiRoutes) {\n              // NOTE(EvanBacon): We aren't sure what files the API routes are using so we'll just invalidate\n              // aggressively to ensure we always have the latest. The only caching we really get here is for\n              // cases where the user is making subsequent requests to the same API route without changing anything.\n              // This is useful for testing but pretty suboptimal. Luckily our caching is pretty aggressive so it makes\n              // up for a lot of the overhead.\n              this.invalidateApiRouteCache();\n            } else if (!hasWarnedAboutApiRoutes()) {\n              for (const event of events) {\n                if (\n                  // If the user did not delete a file that matches the Expo Router API Route convention, then we should warn that\n                  // API Routes are not enabled in the project.\n                  event.metadata?.type !== 'd' &&\n                  // Ensure the file is in the project's routes directory to prevent false positives in monorepos.\n                  event.filePath.startsWith(appDir) &&\n                  isApiRouteConvention(event.filePath)\n                ) {\n                  warnInvalidWebOutput();\n                }\n              }\n            }\n          }\n        );\n      }\n\n      // If React 19 is enabled, then add RSC middleware to the dev server.\n      if (isReactServerComponentsEnabled) {\n        this.bindRSCDevModuleInjectionHandler();\n        const rscMiddleware = createServerComponentsMiddleware(this.projectRoot, {\n          instanceMetroOptions: this.instanceMetroOptions,\n          rscPath: '/_flight',\n          ssrLoadModule: this.ssrLoadModule.bind(this),\n          ssrLoadModuleArtifacts: this.metroImportAsArtifactsAsync.bind(this),\n          useClientRouter: isReactServerActionsOnlyEnabled,\n          createModuleId: metro._createModuleId.bind(metro),\n        });\n        this.rscRenderer = rscMiddleware;\n        middleware.use(rscMiddleware.middleware);\n        this.onReloadRscEvent = rscMiddleware.onReloadRscEvent;\n      }\n\n      // Append support for redirecting unhandled requests to the index.html page on web.\n      if (this.isTargetingWeb()) {\n        if (!useServerRendering || isReactServerComponentsEnabled) {\n          // This MUST run last since it's the fallback.\n          middleware.use(\n            new HistoryFallbackMiddleware(manifestMiddleware.getHandler().internal).getHandler()\n          );\n        } else {\n          middleware.use(\n            createRouteHandlerMiddleware(this.projectRoot, {\n              appDir,\n              routerRoot,\n              config,\n              ...config.exp.extra?.router,\n              bundleApiRoute: (functionFilePath) =>\n                this.ssrImportApiRoute(functionFilePath, { platform: 'web' }),\n              getStaticPageAsync: (pathname) => {\n                return this.getStaticPageAsync(pathname);\n              },\n            })\n          );\n        }\n      }\n    } else {\n      // If React 19 is enabled, then add RSC middleware to the dev server.\n      if (isReactServerComponentsEnabled) {\n        this.bindRSCDevModuleInjectionHandler();\n        const rscMiddleware = createServerComponentsMiddleware(this.projectRoot, {\n          instanceMetroOptions: this.instanceMetroOptions,\n          rscPath: '/_flight',\n          ssrLoadModule: this.ssrLoadModule.bind(this),\n          ssrLoadModuleArtifacts: this.metroImportAsArtifactsAsync.bind(this),\n          useClientRouter: isReactServerActionsOnlyEnabled,\n          createModuleId: metro._createModuleId.bind(metro),\n        });\n        this.rscRenderer = rscMiddleware;\n      }\n    }\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        this.metro = null;\n        this.hmrServer = null;\n        this.ssrHmrClients = new Map();\n        callback?.(err);\n      });\n    };\n\n    assertMetroPrivateServer(metro);\n    this.metro = metro;\n    this.hmrServer = hmrServer;\n    return {\n      server,\n      location: {\n        // The port is the main thing we want to send back.\n        port: options.port,\n        // localhost isn't always correct.\n        host: 'localhost',\n        // http is the only supported protocol on native.\n        url: `http://localhost:${options.port}`,\n        protocol: 'http',\n      },\n      middleware,\n      messageSocket,\n    };\n  }\n\n  private onReloadRscEvent: (() => void) | null = null;\n\n  private async registerSsrHmrAsync(url: string, onReload: () => void) {\n    if (!this.hmrServer || this.ssrHmrClients.has(url)) {\n      return;\n    }\n\n    debug('[SSR] Register HMR:', url);\n\n    const sendFn = (message: string) => {\n      const data = JSON.parse(String(message)) as { type: string; body: any };\n\n      switch (data.type) {\n        case 'bundle-registered':\n        case 'update-done':\n        case 'update-start':\n          break;\n        case 'update':\n          {\n            const update = data.body;\n            const {\n              isInitialUpdate,\n              added,\n              modified,\n              deleted,\n            }: {\n              isInitialUpdate?: boolean;\n              added: {\n                module: [number | string, string];\n                sourceURL: string;\n                sourceMappingURL: string;\n              }[];\n              modified: {\n                module: [number | string, string];\n                sourceURL: string;\n                sourceMappingURL: string;\n              }[];\n              deleted: (number | string)[];\n            } = update;\n\n            const hasUpdate = added.length || modified.length || deleted.length;\n\n            // NOTE: We throw away the updates and instead simply send a trigger to the client to re-fetch the server route.\n            if (!isInitialUpdate && hasUpdate) {\n              // Clear all SSR modules before sending the reload event. This ensures that the next event will rebuild the in-memory state from scratch.\n              // if (typeof globalThis.__c === 'function') globalThis.__c();\n\n              onReload();\n            }\n          }\n          break;\n        case 'error':\n          // GraphNotFound can mean that we have an issue in metroOptions where the URL doesn't match the object props.\n          Log.error('[SSR] HMR Error: ' + JSON.stringify(data, null, 2));\n\n          if (data.body?.type === 'GraphNotFoundError') {\n            Log.error(\n              'Available SSR HMR keys:',\n              // @ts-expect-error\n              (this.metro?._bundler._revisionsByGraphId as Map).keys()\n            );\n          }\n          break;\n        default:\n          debug('Unknown HMR message:', data);\n          break;\n      }\n    };\n\n    const client = await this.hmrServer!.onClientConnect(url, sendFn);\n    this.ssrHmrClients.set(url, client);\n    // Opt in...\n    client.optedIntoHMR = true;\n    await this.hmrServer!._registerEntryPoint(client, url, sendFn);\n  }\n\n  public async waitForTypeScriptAsync(): Promise<boolean> {\n    if (!this.instance) {\n      throw new Error('Cannot wait for TypeScript without a running server.');\n    }\n\n    return new Promise<boolean>((resolve) => {\n      if (!this.metro) {\n        // This can happen when the run command is used and the server is already running in another\n        // process. In this case we can't wait for the TypeScript check to complete because we don't\n        // have access to the Metro server.\n        debug('Skipping TypeScript check because Metro is not running (headless).');\n        return resolve(false);\n      }\n\n      const off = metroWatchTypeScriptFiles({\n        projectRoot: this.projectRoot,\n        server: this.instance!.server,\n        metro: this.metro,\n        tsconfig: true,\n        throttle: true,\n        eventTypes: ['change', 'add'],\n        callback: async () => {\n          // Run once, this prevents the TypeScript project prerequisite from running on every file change.\n          off();\n          const { TypeScriptProjectPrerequisite } = await import(\n            '../../doctor/typescript/TypeScriptProjectPrerequisite.js'\n          );\n\n          try {\n            const req = new TypeScriptProjectPrerequisite(this.projectRoot);\n            await req.bootstrapAsync();\n            resolve(true);\n          } catch (error: any) {\n            // Ensure the process doesn't fail if the TypeScript check fails.\n            // This could happen during the install.\n            Log.log();\n            Log.error(\n              chalk.red`Failed to automatically setup TypeScript for your project. Try restarting the dev server to fix.`\n            );\n            Log.exception(error);\n            resolve(false);\n          }\n        },\n      });\n    });\n  }\n\n  public async startTypeScriptServices() {\n    return startTypescriptTypeGenerationAsync({\n      server: this.instance?.server,\n      metro: this.metro,\n      projectRoot: this.projectRoot,\n    });\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./metro.config.js', './metro.config.json', './rn-cli.config.js'];\n  }\n\n  // API Routes\n\n  private pendingRouteOperations = new Map<\n    string,\n    Promise<{ src: string; filename: string; map: string } | null>\n  >();\n\n  // Bundle the API Route with Metro and return the string contents to be evaluated in the server.\n  private async bundleApiRoute(\n    filePath: string,\n    { platform }: { platform: string }\n  ): Promise<{ src: string; filename: string; map?: any } | null | undefined> {\n    if (this.pendingRouteOperations.has(filePath)) {\n      return this.pendingRouteOperations.get(filePath);\n    }\n    const bundleAsync = async () => {\n      try {\n        debug('Bundle API route:', this.instanceMetroOptions.routerRoot, filePath);\n        return await this.ssrLoadModuleContents(filePath, {\n          isExporting: this.instanceMetroOptions.isExporting,\n          platform,\n        });\n      } catch (error: any) {\n        const appDir = this.instanceMetroOptions?.routerRoot\n          ? path.join(this.projectRoot, this.instanceMetroOptions!.routerRoot!)\n          : undefined;\n        const relativePath = appDir ? path.relative(appDir, filePath) : filePath;\n\n        // Expected errors: invalid syntax, missing resolutions.\n        // Wrap with command error for better error messages.\n        const err = new CommandError(\n          'API_ROUTE',\n          chalk`Failed to bundle API Route: {bold ${relativePath}}\\n\\n` + error.message\n        );\n\n        for (const key in error) {\n          // @ts-expect-error\n          err[key] = error[key];\n        }\n\n        throw err;\n      } finally {\n        // pendingRouteOperations.delete(filepath);\n      }\n    };\n    const route = bundleAsync();\n\n    this.pendingRouteOperations.set(filePath, route);\n    return route;\n  }\n\n  private async ssrImportApiRoute(\n    filePath: string,\n    { platform }: { platform: string }\n  ): Promise<null | Record<string, Function> | Response> {\n    // TODO: Cache the evaluated function.\n    try {\n      const apiRoute = await this.bundleApiRoute(filePath, { platform });\n\n      if (!apiRoute?.src) {\n        return null;\n      }\n      return evalMetroNoHandling(this.projectRoot, apiRoute.src, apiRoute.filename);\n    } catch (error) {\n      // Format any errors that were thrown in the global scope of the evaluation.\n      if (error instanceof Error) {\n        try {\n          const htmlServerError = await getErrorOverlayHtmlAsync({\n            error,\n            projectRoot: this.projectRoot,\n            routerRoot: this.instanceMetroOptions.routerRoot!,\n          });\n\n          return new Response(htmlServerError, {\n            status: 500,\n            headers: {\n              'Content-Type': 'text/html',\n            },\n          });\n        } catch (internalError) {\n          debug('Failed to generate Metro server error UI for API Route error:', internalError);\n          throw error;\n        }\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private invalidateApiRouteCache() {\n    this.pendingRouteOperations.clear();\n  }\n\n  // Ensure the global is available for SSR CSS modules to inject client updates.\n  private bindRSCDevModuleInjectionHandler() {\n    // Used by SSR CSS modules to broadcast client updates.\n    // @ts-expect-error\n    globalThis.__expo_rsc_inject_module = this.sendClientModule.bind(this);\n  }\n\n  // NOTE: This can only target a single platform at a time (web).\n  // used for sending RSC CSS to the root client in development.\n  private sendClientModule({ code, id }: { code: string; id: string }) {\n    this.broadcastMessage('sendDevCommand', {\n      name: 'module-import',\n      data: {\n        code,\n        id,\n      },\n    });\n  }\n\n  // Metro HMR\n\n  private setupHmr(url: URL) {\n    const onReload = () => {\n      // Send reload command to client from Fast Refresh code.\n      debug('[SSR]: Reload requested.');\n\n      this.onReloadRscEvent?.();\n\n      this.broadcastMessage('sendDevCommand', {\n        name: 'rsc-reload',\n        // TODO: Target only certain platforms\n        // platform,\n      });\n    };\n\n    this.registerSsrHmrAsync(url.toString(), onReload);\n  }\n\n  // Direct Metro access\n\n  // Emulates the Metro dev server .bundle endpoint without having to go through a server.\n  private async _bundleDirectAsync(\n    resolvedEntryFilePath: string,\n    {\n      transformOptions,\n      resolverOptions,\n      graphOptions,\n      serializerOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n      serializerOptions: {\n        modulesOnly: boolean;\n        runModule: boolean;\n        sourceMapUrl: string;\n        sourceUrl: string;\n        inlineSourceMap: boolean;\n        excludeSource: boolean;\n      };\n      graphOptions: {\n        shallow: boolean;\n        lazy: boolean;\n      };\n    }\n  ): Promise<{\n    numModifiedFiles: number;\n    lastModifiedDate: Date;\n    nextRevId: string;\n    bundle: string;\n    map: string;\n\n    // Defined if the output is multi-bundle.\n    artifacts?: SerialAsset[];\n    assets?: readonly BundleAssetWithFileHashes[];\n  }> {\n    assert(this.metro, 'Metro server must be running to bundle directly.');\n    const config = this.metro._config;\n    const buildNumber = this.metro.getNewBuildNumber();\n    const bundlePerfLogger = config.unstable_perfLoggerFactory?.('BUNDLING_REQUEST', {\n      key: buildNumber,\n    });\n\n    const onProgress: MetroOnProgress = (transformedFileCount: number, totalFileCount: number) => {\n      this.metro?._reporter?.update?.({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_transform_progressed',\n        transformedFileCount,\n        totalFileCount,\n      });\n    };\n\n    const revPromise = this.getMetroRevision(resolvedEntryFilePath, {\n      graphOptions,\n      transformOptions,\n      resolverOptions,\n    });\n\n    bundlePerfLogger?.point('resolvingAndTransformingDependencies_start');\n    bundlePerfLogger?.annotate({\n      bool: {\n        initial_build: revPromise == null,\n      },\n    });\n    this.metro?._reporter.update({\n      buildID: getBuildID(buildNumber),\n      bundleDetails: {\n        bundleType: transformOptions.type,\n        dev: transformOptions.dev,\n        entryFile: resolvedEntryFilePath,\n        minify: transformOptions.minify,\n        platform: transformOptions.platform,\n        customResolverOptions: resolverOptions.customResolverOptions,\n        customTransformOptions: transformOptions.customTransformOptions ?? {},\n      },\n      isPrefetch: false,\n      type: 'bundle_build_started',\n    });\n\n    try {\n      let delta: DeltaResult;\n      let revision: GraphRevision;\n\n      // TODO: Some bug in Metro/RSC causes this to break when changing imports in server components.\n      // We should resolve the bug because it results in ~6x faster bundling to reuse the graph revision.\n      if (transformOptions.customTransformOptions?.environment === 'react-server') {\n        const props = await this.metro.getBundler().initializeGraph(\n          // NOTE: Using absolute path instead of relative input path is a breaking change.\n          // entryFile,\n          resolvedEntryFilePath,\n\n          transformOptions,\n          resolverOptions,\n          {\n            onProgress,\n            shallow: graphOptions.shallow,\n            lazy: graphOptions.lazy,\n          }\n        );\n        delta = props.delta;\n        revision = props.revision;\n      } else {\n        const props = await (revPromise != null\n          ? this.metro.getBundler().updateGraph(await revPromise, false)\n          : this.metro.getBundler().initializeGraph(\n              // NOTE: Using absolute path instead of relative input path is a breaking change.\n              // entryFile,\n              resolvedEntryFilePath,\n\n              transformOptions,\n              resolverOptions,\n              {\n                onProgress,\n                shallow: graphOptions.shallow,\n                lazy: graphOptions.lazy,\n              }\n            ));\n        delta = props.delta;\n        revision = props.revision;\n      }\n\n      bundlePerfLogger?.annotate({\n        int: {\n          graph_node_count: revision.graph.dependencies.size,\n        },\n      });\n      bundlePerfLogger?.point('resolvingAndTransformingDependencies_end');\n      bundlePerfLogger?.point('serializingBundle_start');\n\n      const shouldAddToIgnoreList = this.metro._shouldAddModuleToIgnoreList.bind(this.metro);\n\n      const serializer = this.getMetroSerializer();\n\n      const bundle = await serializer(\n        // NOTE: Using absolute path instead of relative input path is a breaking change.\n        // entryFile,\n        resolvedEntryFilePath,\n\n        revision.prepend as any,\n        revision.graph as any,\n        {\n          asyncRequireModulePath: await this.metro._resolveRelativePath(\n            config.transformer.asyncRequireModulePath,\n            {\n              relativeTo: 'project',\n              resolverOptions,\n              transformOptions,\n            }\n          ),\n          // ...serializerOptions,\n          processModuleFilter: config.serializer.processModuleFilter,\n          createModuleId: this.metro._createModuleId,\n          getRunModuleStatement: config.serializer.getRunModuleStatement,\n          includeAsyncPaths: graphOptions.lazy,\n          dev: transformOptions.dev,\n          projectRoot: config.projectRoot,\n          modulesOnly: serializerOptions.modulesOnly,\n          runBeforeMainModule: config.serializer.getModulesRunBeforeMainModule(\n            resolvedEntryFilePath\n            // path.relative(config.projectRoot, entryFile)\n          ),\n          runModule: serializerOptions.runModule,\n          sourceMapUrl: serializerOptions.sourceMapUrl,\n          sourceUrl: serializerOptions.sourceUrl,\n          inlineSourceMap: serializerOptions.inlineSourceMap,\n          serverRoot: config.server.unstable_serverRoot ?? config.projectRoot,\n          shouldAddToIgnoreList,\n\n          // @ts-expect-error: passed to our serializer to enable non-serial return values.\n          serializerOptions,\n        }\n      );\n\n      this.metro._reporter.update({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_build_done',\n      });\n\n      bundlePerfLogger?.point('serializingBundle_end');\n\n      let bundleCode: string | null = null;\n      let bundleMap: string | null = null;\n\n      // @ts-expect-error: If the output is multi-bundle...\n      if (serializerOptions.output === 'static') {\n        try {\n          const parsed = typeof bundle === 'string' ? JSON.parse(bundle) : bundle;\n\n          assert(\n            'artifacts' in parsed && Array.isArray(parsed.artifacts),\n            'Expected serializer to return an object with key artifacts to contain an array of serial assets.'\n          );\n\n          const artifacts = parsed.artifacts as SerialAsset[];\n          const assets = parsed.assets;\n\n          const bundleCode = artifacts.filter((asset) => asset.type === 'js')[0];\n          const bundleMap = artifacts.filter((asset) => asset.type === 'map')?.[0]?.source ?? '';\n\n          return {\n            numModifiedFiles: delta.reset\n              ? delta.added.size + revision.prepend.length\n              : delta.added.size + delta.modified.size + delta.deleted.size,\n            lastModifiedDate: revision.date,\n            nextRevId: revision.id,\n            bundle: bundleCode.source,\n            map: bundleMap,\n            artifacts,\n            assets,\n          };\n        } catch (error: any) {\n          throw new Error(\n            'Serializer did not return expected format. The project copy of `expo/metro-config` may be out of date. Error: ' +\n              error.message\n          );\n        }\n      }\n\n      if (typeof bundle === 'string') {\n        bundleCode = bundle;\n\n        // Create the source map in a second pass...\n        let { prepend, graph } = revision;\n        if (serializerOptions.modulesOnly) {\n          prepend = [];\n        }\n\n        bundleMap = await sourceMapStringAsync(\n          [\n            //\n            ...prepend,\n            ...this.metro._getSortedModules(graph),\n          ],\n          {\n            excludeSource: serializerOptions.excludeSource,\n            processModuleFilter: config.serializer.processModuleFilter,\n            shouldAddToIgnoreList,\n          }\n        );\n      } else {\n        bundleCode = bundle.code;\n        bundleMap = bundle.map;\n      }\n\n      return {\n        numModifiedFiles: delta.reset\n          ? delta.added.size + revision.prepend.length\n          : delta.added.size + delta.modified.size + delta.deleted.size,\n        lastModifiedDate: revision.date,\n        nextRevId: revision.id,\n        bundle: bundleCode,\n        map: bundleMap,\n      };\n    } catch (error) {\n      // Mark the error so we know how to format and return it later.\n      // @ts-expect-error\n      error[IS_METRO_BUNDLE_ERROR_SYMBOL] = true;\n\n      this.metro._reporter.update({\n        buildID: getBuildID(buildNumber),\n        type: 'bundle_build_failed',\n      });\n\n      throw error;\n    }\n  }\n\n  private getMetroSerializer() {\n    return (\n      this.metro?._config?.serializer.customSerializer ||\n      ((entryPoint, preModules, graph, options) =>\n        bundleToString(baseJSBundle(entryPoint, preModules, graph, options)).code)\n    );\n  }\n\n  private getMetroRevision(\n    resolvedEntryFilePath: string,\n    {\n      graphOptions,\n      transformOptions,\n      resolverOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n      graphOptions: {\n        shallow: boolean;\n        lazy: boolean;\n      };\n    }\n  ) {\n    assert(this.metro, 'Metro server must be running to bundle directly.');\n    const config = this.metro._config;\n\n    const graphId = getGraphId(resolvedEntryFilePath, transformOptions, {\n      unstable_allowRequireContext: config.transformer.unstable_allowRequireContext,\n      resolverOptions,\n      shallow: graphOptions.shallow,\n      lazy: graphOptions.lazy,\n    });\n    return this.metro.getBundler().getRevisionByGraphId(graphId);\n  }\n\n  private async resolveRelativePathAsync(\n    moduleId: string,\n    {\n      resolverOptions,\n      transformOptions,\n    }: {\n      transformOptions: TransformInputOptions;\n      resolverOptions: {\n        customResolverOptions: CustomResolverOptions;\n        dev: boolean;\n      };\n    }\n  ) {\n    assert(this.metro, 'cannot invoke resolveRelativePathAsync without metro instance');\n    return await this.metro._resolveRelativePath(convertPathToModuleSpecifier(moduleId), {\n      relativeTo: 'server',\n      resolverOptions,\n      transformOptions,\n    });\n  }\n}\n\nfunction getBuildID(buildNumber: number): string {\n  return buildNumber.toString(36);\n}\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n\nasync function sourceMapStringAsync(\n  modules: readonly import('metro/src/DeltaBundler/types').Module<any>[],\n  options: SourceMapGeneratorOptions\n): Promise<string> {\n  return (await sourceMapGeneratorNonBlocking(modules, options)).toString(undefined, {\n    excludeSource: options.excludeSource,\n  });\n}\n"],"names":["MetroBundlerDevServer","debug","require","EXPO_GO_METRO_PORT","DEV_CLIENT_METRO_PORT","BundlerDevServer","metro","hmrServer","ssrHmrClients","Map","name","resolvePortAsync","options","port","devClient","Number","process","env","RCT_METRO_PORT","getFreePortAsync","exportExpoRouterApiRoutesAsync","includeSourceMaps","outputDir","prerenderManifest","platform","routerRoot","instanceMetroOptions","assert","appDir","path","join","projectRoot","manifest","getExpoRouterRoutesManifestAsync","files","rscPath","isReactServerComponentsEnabled","apiRoutes","find","route","page","startsWith","push","file","resolveFrom","namedRegex","routeKeys","rsc","filepath","isAbsolute","contents","bundleApiRoute","artifactFilename","relative","replace","src","map","artifactBasename","encodeURIComponent","basename","parsedMap","JSON","parse","set","stringify","version","sources","source","convertPathToModuleSpecifier","sourcesContent","Array","length","fill","names","mappings","apiRouteId","targetDomain","htmlRoutes","exp","getConfig","fetchManifest","extra","router","platformRoutes","asJson","CommandError","getServerManifestAsync","getBuildTimeServerManifestAsync","getManifest","ssrLoadModule","environment","isReactServerRoutesEnabled","serverManifest","htmlManifest","getStaticRenderFunctionAsync","url","getDevServerUrlOrAssert","getStaticContent","preserveApiRoutes","renderAsync","URL","getStaticResourcesAsync","mainModuleName","clientBoundaries","mode","minify","isExporting","baseUrl","reactCompiler","asyncRoutes","resolvedMainModuleName","resolveMainModuleName","metroImportAsArtifactsAsync","splitChunks","EXPO_NO_BUNDLE_SPLITTING","serializerIncludeMaps","lazy","shouldEnableAsyncImports","bytecode","getStaticPageAsync","pathname","devBundleUrlPathname","createBundleUrlPath","bundleStaticHtml","location","artifacts","resources","staticHtml","Promise","all","content","serializeHtmlWithAssets","template","devBundleUrl","hydrate","EXPO_WEB_DEV_HYDRATE","filePath","specificOptions","extras","res","ssrLoadModuleContents","hot","serverRoot","getMetroServerRoot","relativePath","filename","setupHmr","evalMetroAndWrapFunctions","results","serializerOutput","assets","metroLoadModuleContents","extraOptions","opts","inlineSourceMap","engine","expoBundleOptions","getMetroDirectBundleOptions","resolverOptions","customResolverOptions","dev","transformOptions","type","unstable_transformProfile","customTransformOptions","Object","create","runtimeBytecodeVersion","resolvedEntryFilePath","resolveRelativePathAsync","createBundleUrlOsPath","_bundleDirectAsync","graphOptions","shallow","serializerOptions","modulesOnly","runModule","sourceUrl","sourceMapUrl","bundle","rest","scriptContents","wrapBundle","cachedSourceMaps","nativeExportBundleAsync","singlePageReactServerComponentExportAsync","legacySinglePageExportBundleAsync","reactClientReferences","reactServerReferences","serverActionReferencesInServer","cssModules","rscRenderer","getExpoRouterClientReferencesAsync","domRoot","filter","a","artifact","metadata","ref","fileURLToFilePath","flat","Boolean","Error","nestedClientBoundaries","exportServerActionsAsync","entryPoints","hasUniqueClientBoundaries","some","boundary","includes","Set","concat","clientBoundariesAsOpaqueIds","toPosixPath","moduleIdToSplitBundle","paths","values","reduce","acc","ssrManifest","keys","forEach","exportRoutesAsync","fromEntries","from","entries","key","value","output","watchEnvironmentVariables","instance","envFiles","runtimeEnv","getFiles","NODE_ENV","fileName","observeFileChanges","server","load","force","startImplementationAsync","urlCreator","getUrlCreator","config","skipSDKVersionRequirement","experiments","reactServerComponentRoutes","reactServerFunctions","isReactServerActionsOnlyEnabled","useServerRendering","web","hasApiRoutes","getBaseUrlFromExpoConfig","getAsyncRoutesFromExpoConfig","getRouterDirectoryModuleIdWithManifest","parsedOptions","maxWorkers","resetCache","resetDevServer","EXPO_DEV_SERVER_ORIGIN","middleware","messageSocket","instantiateMetroAsync","manifestMiddleware","getManifestMiddlewareAsync","prependMiddleware","ContextModuleSourceMapsMiddleware","getHandler","use","InterstitialPageMiddleware","scheme","ReactDevToolsPageMiddleware","DevToolsPluginMiddleware","devToolsPluginManager","deepLinkMiddleware","RuntimeRedirectMiddleware","getLocation","runtime","constructDevClientUrl","constructUrl","domComponentRenderer","createDomComponentsMiddleware","metroRoot","CreateFileMiddleware","isTargetingWeb","ServeStaticMiddleware","FaviconMiddleware","observeAnyFileChanges","events","invalidateApiRouteCache","hasWarnedAboutApiRoutes","event","isApiRouteConvention","warnInvalidWebOutput","bindRSCDevModuleInjectionHandler","rscMiddleware","createServerComponentsMiddleware","bind","ssrLoadModuleArtifacts","useClientRouter","createModuleId","_createModuleId","onReloadRscEvent","HistoryFallbackMiddleware","internal","createRouteHandlerMiddleware","functionFilePath","ssrImportApiRoute","originalClose","close","callback","err","assertMetroPrivateServer","host","protocol","registerSsrHmrAsync","onReload","has","sendFn","message","data","String","update","body","isInitialUpdate","added","modified","deleted","hasUpdate","Log","error","_bundler","_revisionsByGraphId","client","onClientConnect","optedIntoHMR","_registerEntryPoint","waitForTypeScriptAsync","resolve","off","metroWatchTypeScriptFiles","tsconfig","throttle","eventTypes","TypeScriptProjectPrerequisite","req","bootstrapAsync","log","chalk","red","exception","startTypeScriptServices","startTypescriptTypeGenerationAsync","getConfigModuleIds","pendingRouteOperations","get","bundleAsync","undefined","apiRoute","evalMetroNoHandling","htmlServerError","getErrorOverlayHtmlAsync","Response","status","headers","internalError","clear","globalThis","__expo_rsc_inject_module","sendClientModule","code","id","broadcastMessage","toString","_config","buildNumber","getNewBuildNumber","bundlePerfLogger","unstable_perfLoggerFactory","onProgress","transformedFileCount","totalFileCount","_reporter","buildID","getBuildID","revPromise","getMetroRevision","point","annotate","bool","initial_build","bundleDetails","bundleType","entryFile","isPrefetch","delta","revision","props","getBundler","initializeGraph","updateGraph","int","graph_node_count","graph","dependencies","size","shouldAddToIgnoreList","_shouldAddModuleToIgnoreList","serializer","getMetroSerializer","prepend","asyncRequireModulePath","_resolveRelativePath","transformer","relativeTo","processModuleFilter","getRunModuleStatement","includeAsyncPaths","runBeforeMainModule","getModulesRunBeforeMainModule","unstable_serverRoot","bundleCode","bundleMap","parsed","isArray","asset","numModifiedFiles","reset","lastModifiedDate","date","nextRevId","sourceMapStringAsync","_getSortedModules","excludeSource","IS_METRO_BUNDLE_ERROR_SYMBOL","customSerializer","entryPoint","preModules","bundleToString","baseJSBundle","graphId","getGraphId","unstable_allowRequireContext","getRevisionByGraphId","moduleId","str","modules","sourceMapGeneratorNonBlocking"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js b/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js
index 8873042..a5e2755 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js
@@ -126,11 +126,21 @@ const _default = defaultResolver;
     if (closestPackageJson) {
         const pkg = options.readPackageSync(options.readFileSync, closestPackageJson);
         (0, _assert().default)(pkg, "package.json should be read by `readPackageSync`");
-        if (pkg.name === moduleName) {
-            const resolved = _resolveExports().exports(pkg, segments.join("/") || ".", createResolveOptions(options.conditions));
+        // Added support for the package.json "imports" field (#-prefixed paths)
+        if (path.startsWith("#")) {
+            const resolved = _resolveExports().imports(pkg, path, createResolveOptions(options.conditions));
             if (resolved) {
+                // TODO: Should we attempt to resolve every path in the array?
                 return (0, _path().resolve)((0, _path().dirname)(closestPackageJson), resolved[0]);
             }
+            // NOTE: resolve.imports would have thrown by this point.
+            return path;
+        }
+        if (pkg.name === moduleName) {
+            const resolved1 = _resolveExports().exports(pkg, segments.join("/") || ".", createResolveOptions(options.conditions));
+            if (resolved1) {
+                return (0, _path().resolve)((0, _path().dirname)(closestPackageJson), resolved1[0]);
+            }
             if (pkg.exports) {
                 throw new Error("`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue");
             }
@@ -147,9 +157,9 @@ const _default = defaultResolver;
     }
     const pkg1 = options.readPackageSync(options.readFileSync, packageJsonPath);
     (0, _assert().default)(pkg1, "package.json should be read by `readPackageSync`");
-    const resolved1 = _resolveExports().exports(pkg1, segments.join("/") || ".", createResolveOptions(options.conditions));
-    if (resolved1) {
-        return (0, _path().resolve)((0, _path().dirname)(packageJsonPath), resolved1[0]);
+    const resolved2 = _resolveExports().exports(pkg1, segments.join("/") || ".", createResolveOptions(options.conditions));
+    if (resolved2) {
+        return (0, _path().resolve)((0, _path().dirname)(packageJsonPath), resolved2[0]);
     }
     if (pkg1.exports) {
         throw new Error("`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue");
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js.map b/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js.map
index cbdfcad..9059ba0 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/createJResolver.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/createJResolver.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Fork of the jest resolver but with additional settings for Metro and pnp removed.\n * https://github.com/jestjs/jest/blob/d1a2ed7fea4bdc19836274cd810c8360e3ab62f3/packages/jest-resolve/src/defaultResolver.ts#L1\n */\nimport type { JSONObject as PackageJSON } from '@expo/json-file';\nimport assert from 'assert';\nimport { dirname, isAbsolute, resolve as pathResolve } from 'path';\nimport { sync as resolveSync, SyncOpts as UpstreamResolveOptions } from 'resolve';\nimport * as resolve from 'resolve.exports';\n\n/**\n * Allows transforming parsed `package.json` contents.\n *\n * @param pkg - Parsed `package.json` contents.\n * @param file - Path to `package.json` file.\n * @param dir - Directory that contains the `package.json`.\n *\n * @returns Transformed `package.json` contents.\n */\ntype PackageFilter = (pkg: PackageJSON, file: string, dir: string) => PackageJSON;\n\n/**\n * Allows transforming a path within a package.\n *\n * @param pkg - Parsed `package.json` contents.\n * @param path - Path being resolved.\n * @param relativePath - Path relative from the `package.json` location.\n *\n * @returns Relative path that will be joined from the `package.json` location.\n */\ntype PathFilter = (pkg: PackageJSON, path: string, relativePath: string) => string;\n\ntype ResolverOptions = {\n  /** Directory to begin resolving from. */\n  basedir: string;\n  /** List of export conditions. */\n  conditions?: string[];\n  /** Instance of default resolver. */\n  defaultResolver: typeof defaultResolver;\n  /** List of file extensions to search in order. */\n  extensions?: string[];\n  /**\n   * List of directory names to be looked up for modules recursively.\n   *\n   * @defaultValue\n   * The default is `['node_modules']`.\n   */\n  moduleDirectory?: string[];\n  /**\n   * List of `require.paths` to use if nothing is found in `node_modules`.\n   *\n   * @defaultValue\n   * The default is `undefined`.\n   */\n  paths?: string[];\n  /** Allows transforming parsed `package.json` contents. */\n  packageFilter?: PackageFilter;\n  /** Allows transforms a path within a package. */\n  pathFilter?: PathFilter;\n  /** Current root directory. */\n  rootDir?: string;\n\n  enablePackageExports?: boolean;\n\n  blockList: RegExp[];\n\n  getPackageForModule: import('metro-resolver').CustomResolutionContext['getPackageForModule'];\n} & Pick<\n  UpstreamResolveOptions,\n  | 'readPackageSync'\n  | 'realpathSync'\n  | 'moduleDirectory'\n  | 'extensions'\n  | 'preserveSymlinks'\n  | 'includeCoreModules'\n>;\n\ntype UpstreamResolveOptionsWithConditions = UpstreamResolveOptions &\n  ResolverOptions & {\n    pathExists: (file: string) => boolean;\n  };\n\nconst defaultResolver = (\n  path: string,\n  {\n    enablePackageExports,\n    blockList = [],\n    ...options\n  }: Omit<ResolverOptions, 'defaultResolver' | 'getPackageForModule'> & {\n    isDirectory: (file: string) => boolean;\n    isFile: (file: string) => boolean;\n    pathExists: (file: string) => boolean;\n  }\n): string => {\n  // @ts-expect-error\n  const resolveOptions: UpstreamResolveOptionsWithConditions = {\n    ...options,\n    preserveSymlinks: options.preserveSymlinks,\n    defaultResolver,\n  };\n\n  // resolveSync dereferences symlinks to ensure we don't create a separate\n  // module instance depending on how it was referenced.\n  const result = resolveSync(enablePackageExports ? getPathInModule(path, resolveOptions) : path, {\n    ...resolveOptions,\n    preserveSymlinks: !options.preserveSymlinks,\n  });\n\n  return result;\n};\n\nexport default defaultResolver;\n\n/*\n * helper functions\n */\n\nfunction getPathInModule(path: string, options: UpstreamResolveOptionsWithConditions): string {\n  if (shouldIgnoreRequestForExports(path)) {\n    return path;\n  }\n\n  const segments = path.split('/');\n\n  let moduleName = segments.shift();\n\n  if (!moduleName) {\n    return path;\n  }\n\n  if (moduleName.startsWith('@')) {\n    moduleName = `${moduleName}/${segments.shift()}`;\n  }\n\n  // Disable package exports for babel/runtime for https://github.com/facebook/metro/issues/984/\n  if (moduleName === '@babel/runtime') {\n    return path;\n  }\n\n  // self-reference\n  const closestPackageJson = findClosestPackageJson(options.basedir, options);\n  if (closestPackageJson) {\n    const pkg = options.readPackageSync!(options.readFileSync!, closestPackageJson);\n    assert(pkg, 'package.json should be read by `readPackageSync`');\n\n    if (pkg.name === moduleName) {\n      const resolved = resolve.exports(\n        pkg,\n        (segments.join('/') || '.') as resolve.Exports.Entry,\n        createResolveOptions(options.conditions)\n      );\n\n      if (resolved) {\n        return pathResolve(dirname(closestPackageJson), resolved[0]);\n      }\n\n      if (pkg.exports) {\n        throw new Error(\n          \"`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue\"\n        );\n      }\n    }\n  }\n\n  let packageJsonPath = '';\n\n  try {\n    packageJsonPath = resolveSync(`${moduleName}/package.json`, options);\n  } catch {\n    // ignore if package.json cannot be found\n  }\n\n  if (!packageJsonPath) {\n    return path;\n  }\n\n  const pkg = options.readPackageSync!(options.readFileSync!, packageJsonPath);\n  assert(pkg, 'package.json should be read by `readPackageSync`');\n\n  const resolved = resolve.exports(\n    pkg,\n    (segments.join('/') || '.') as resolve.Exports.Entry,\n    createResolveOptions(options.conditions)\n  );\n\n  if (resolved) {\n    return pathResolve(dirname(packageJsonPath), resolved[0]);\n  }\n\n  if (pkg.exports) {\n    throw new Error(\n      \"`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue\"\n    );\n  }\n\n  return path;\n}\n\nfunction createResolveOptions(conditions: string[] | undefined): resolve.Options {\n  return conditions\n    ? { conditions, unsafe: true }\n    : // no conditions were passed - let's assume this is Jest internal and it should be `require`\n      { browser: false, require: true };\n}\n\n// if it's a relative import or an absolute path, imports/exports are ignored\nconst shouldIgnoreRequestForExports = (path: string) => path.startsWith('.') || isAbsolute(path);\n\n// adapted from\n// https://github.com/lukeed/escalade/blob/2477005062cdbd8407afc90d3f48f4930354252b/src/sync.js\nfunction findClosestPackageJson(\n  start: string,\n  options: UpstreamResolveOptionsWithConditions\n): string | undefined {\n  let dir = pathResolve('.', start);\n  if (!options.isDirectory!(dir)) {\n    dir = dirname(dir);\n  }\n\n  while (true) {\n    const pkgJsonFile = pathResolve(dir, './package.json');\n    const hasPackageJson = options.pathExists!(pkgJsonFile);\n\n    if (hasPackageJson) {\n      return pkgJsonFile;\n    }\n\n    const prevDir = dir;\n    dir = dirname(dir);\n\n    if (prevDir === dir) {\n      return undefined;\n    }\n  }\n}\n"],"names":["defaultResolver","path","enablePackageExports","blockList","options","resolveOptions","preserveSymlinks","result","resolveSync","getPathInModule","shouldIgnoreRequestForExports","segments","split","moduleName","shift","startsWith","closestPackageJson","findClosestPackageJson","basedir","pkg","readPackageSync","readFileSync","assert","name","resolved","resolve","exports","join","createResolveOptions","conditions","pathResolve","dirname","Error","packageJsonPath","unsafe","browser","require","isAbsolute","start","dir","isDirectory","pkgJsonFile","hasPackageJson","pathExists","prevDir","undefined"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/createJResolver.ts"],"sourcesContent":["/**\n * Copyright © 2023 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Fork of the jest resolver but with additional settings for Metro and pnp removed.\n * https://github.com/jestjs/jest/blob/d1a2ed7fea4bdc19836274cd810c8360e3ab62f3/packages/jest-resolve/src/defaultResolver.ts#L1\n */\nimport type { JSONObject as PackageJSON } from '@expo/json-file';\nimport assert from 'assert';\nimport { dirname, isAbsolute, resolve as pathResolve } from 'path';\nimport { sync as resolveSync, SyncOpts as UpstreamResolveOptions } from 'resolve';\nimport * as resolve from 'resolve.exports';\n\n/**\n * Allows transforming parsed `package.json` contents.\n *\n * @param pkg - Parsed `package.json` contents.\n * @param file - Path to `package.json` file.\n * @param dir - Directory that contains the `package.json`.\n *\n * @returns Transformed `package.json` contents.\n */\ntype PackageFilter = (pkg: PackageJSON, file: string, dir: string) => PackageJSON;\n\n/**\n * Allows transforming a path within a package.\n *\n * @param pkg - Parsed `package.json` contents.\n * @param path - Path being resolved.\n * @param relativePath - Path relative from the `package.json` location.\n *\n * @returns Relative path that will be joined from the `package.json` location.\n */\ntype PathFilter = (pkg: PackageJSON, path: string, relativePath: string) => string;\n\ntype ResolverOptions = {\n  /** Directory to begin resolving from. */\n  basedir: string;\n  /** List of export conditions. */\n  conditions?: string[];\n  /** Instance of default resolver. */\n  defaultResolver: typeof defaultResolver;\n  /** List of file extensions to search in order. */\n  extensions?: string[];\n  /**\n   * List of directory names to be looked up for modules recursively.\n   *\n   * @defaultValue\n   * The default is `['node_modules']`.\n   */\n  moduleDirectory?: string[];\n  /**\n   * List of `require.paths` to use if nothing is found in `node_modules`.\n   *\n   * @defaultValue\n   * The default is `undefined`.\n   */\n  paths?: string[];\n  /** Allows transforming parsed `package.json` contents. */\n  packageFilter?: PackageFilter;\n  /** Allows transforms a path within a package. */\n  pathFilter?: PathFilter;\n  /** Current root directory. */\n  rootDir?: string;\n\n  enablePackageExports?: boolean;\n\n  blockList: RegExp[];\n\n  getPackageForModule: import('metro-resolver').CustomResolutionContext['getPackageForModule'];\n} & Pick<\n  UpstreamResolveOptions,\n  | 'readPackageSync'\n  | 'realpathSync'\n  | 'moduleDirectory'\n  | 'extensions'\n  | 'preserveSymlinks'\n  | 'includeCoreModules'\n>;\n\ntype UpstreamResolveOptionsWithConditions = UpstreamResolveOptions &\n  ResolverOptions & {\n    pathExists: (file: string) => boolean;\n  };\n\nconst defaultResolver = (\n  path: string,\n  {\n    enablePackageExports,\n    blockList = [],\n    ...options\n  }: Omit<ResolverOptions, 'defaultResolver' | 'getPackageForModule'> & {\n    isDirectory: (file: string) => boolean;\n    isFile: (file: string) => boolean;\n    pathExists: (file: string) => boolean;\n  }\n): string => {\n  // @ts-expect-error\n  const resolveOptions: UpstreamResolveOptionsWithConditions = {\n    ...options,\n    preserveSymlinks: options.preserveSymlinks,\n    defaultResolver,\n  };\n\n  // resolveSync dereferences symlinks to ensure we don't create a separate\n  // module instance depending on how it was referenced.\n  const result = resolveSync(enablePackageExports ? getPathInModule(path, resolveOptions) : path, {\n    ...resolveOptions,\n    preserveSymlinks: !options.preserveSymlinks,\n  });\n\n  return result;\n};\n\nexport default defaultResolver;\n\n/*\n * helper functions\n */\n\nfunction getPathInModule(path: string, options: UpstreamResolveOptionsWithConditions): string {\n  if (shouldIgnoreRequestForExports(path)) {\n    return path;\n  }\n\n  const segments = path.split('/');\n\n  let moduleName = segments.shift();\n\n  if (!moduleName) {\n    return path;\n  }\n\n  if (moduleName.startsWith('@')) {\n    moduleName = `${moduleName}/${segments.shift()}`;\n  }\n\n  // Disable package exports for babel/runtime for https://github.com/facebook/metro/issues/984/\n  if (moduleName === '@babel/runtime') {\n    return path;\n  }\n\n  // self-reference\n  const closestPackageJson = findClosestPackageJson(options.basedir, options);\n  if (closestPackageJson) {\n    const pkg = options.readPackageSync!(options.readFileSync!, closestPackageJson);\n    assert(pkg, 'package.json should be read by `readPackageSync`');\n\n    // Added support for the package.json \"imports\" field (#-prefixed paths)\n    if (path.startsWith('#')) {\n      const resolved = resolve.imports(pkg, path, createResolveOptions(options.conditions));\n      if (resolved) {\n        // TODO: Should we attempt to resolve every path in the array?\n        return pathResolve(dirname(closestPackageJson), resolved[0]);\n      }\n      // NOTE: resolve.imports would have thrown by this point.\n      return path;\n    }\n\n    if (pkg.name === moduleName) {\n      const resolved = resolve.exports(\n        pkg,\n        (segments.join('/') || '.') as resolve.Exports.Entry,\n        createResolveOptions(options.conditions)\n      );\n\n      if (resolved) {\n        return pathResolve(dirname(closestPackageJson), resolved[0]);\n      }\n\n      if (pkg.exports) {\n        throw new Error(\n          \"`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue\"\n        );\n      }\n    }\n  }\n\n  let packageJsonPath = '';\n\n  try {\n    packageJsonPath = resolveSync(`${moduleName}/package.json`, options);\n  } catch {\n    // ignore if package.json cannot be found\n  }\n\n  if (!packageJsonPath) {\n    return path;\n  }\n\n  const pkg = options.readPackageSync!(options.readFileSync!, packageJsonPath);\n  assert(pkg, 'package.json should be read by `readPackageSync`');\n\n  const resolved = resolve.exports(\n    pkg,\n    (segments.join('/') || '.') as resolve.Exports.Entry,\n    createResolveOptions(options.conditions)\n  );\n\n  if (resolved) {\n    return pathResolve(dirname(packageJsonPath), resolved[0]);\n  }\n\n  if (pkg.exports) {\n    throw new Error(\n      \"`exports` exists, but no results - this is a bug in Expo CLI's Metro resolver. Please report an issue\"\n    );\n  }\n\n  return path;\n}\n\nfunction createResolveOptions(conditions: string[] | undefined): resolve.Options {\n  return conditions\n    ? { conditions, unsafe: true }\n    : // no conditions were passed - let's assume this is Jest internal and it should be `require`\n      { browser: false, require: true };\n}\n\n// if it's a relative import or an absolute path, imports/exports are ignored\nconst shouldIgnoreRequestForExports = (path: string) => path.startsWith('.') || isAbsolute(path);\n\n// adapted from\n// https://github.com/lukeed/escalade/blob/2477005062cdbd8407afc90d3f48f4930354252b/src/sync.js\nfunction findClosestPackageJson(\n  start: string,\n  options: UpstreamResolveOptionsWithConditions\n): string | undefined {\n  let dir = pathResolve('.', start);\n  if (!options.isDirectory!(dir)) {\n    dir = dirname(dir);\n  }\n\n  while (true) {\n    const pkgJsonFile = pathResolve(dir, './package.json');\n    const hasPackageJson = options.pathExists!(pkgJsonFile);\n\n    if (hasPackageJson) {\n      return pkgJsonFile;\n    }\n\n    const prevDir = dir;\n    dir = dirname(dir);\n\n    if (prevDir === dir) {\n      return undefined;\n    }\n  }\n}\n"],"names":["defaultResolver","path","enablePackageExports","blockList","options","resolveOptions","preserveSymlinks","result","resolveSync","getPathInModule","shouldIgnoreRequestForExports","segments","split","moduleName","shift","startsWith","closestPackageJson","findClosestPackageJson","basedir","pkg","readPackageSync","readFileSync","assert","resolved","resolve","imports","createResolveOptions","conditions","pathResolve","dirname","name","exports","join","Error","packageJsonPath","unsafe","browser","require","isAbsolute","start","dir","isDirectory","pkgJsonFile","hasPackageJson","pathExists","prevDir","undefined"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js b/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js
index 94346cf..73d2562 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js
@@ -53,6 +53,7 @@ function _url() {
     return data;
 }
 const _metroErrorInterface = require("./metroErrorInterface");
+const _xcodeCompilerLogger = require("../../../export/embed/xcodeCompilerLogger");
 const _ansi = require("../../../utils/ansi");
 const _filePath = require("../../../utils/filePath");
 const _fn = require("../../../utils/fn");
@@ -109,6 +110,14 @@ function createServerComponentsMiddleware(projectRoot, { rscPath , instanceMetro
                 await (0, _metroErrorInterface.logMetroError)(projectRoot, {
                     error
                 });
+                if (error[_metroErrorInterface.IS_METRO_BUNDLE_ERROR_SYMBOL]) {
+                    throw new Response(JSON.stringify(error), {
+                        status: (0, _xcodeCompilerLogger.isPossiblyUnableToResolveError)(error) ? 404 : 500,
+                        headers: {
+                            "Content-Type": "application/json"
+                        }
+                    });
+                }
                 const sanitizedServerMessage = (0, _ansi.stripAnsi)(error.message) ?? error.message;
                 throw new Response(sanitizedServerMessage, {
                     status: 500,
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js.map b/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js.map
index 1310b65..da39286 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/createServerComponentsMiddleware.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/createServerComponentsMiddleware.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport { getRscMiddleware } from '@expo/server/build/middleware/rsc';\nimport assert from 'assert';\nimport path from 'path';\nimport url from 'url';\n\nimport { logMetroError } from './metroErrorInterface';\nimport { ExportAssetMap } from '../../../export/saveAssets';\nimport { stripAnsi } from '../../../utils/ansi';\nimport { toPosixPath } from '../../../utils/filePath';\nimport { memoize } from '../../../utils/fn';\nimport { getIpAddress } from '../../../utils/ip';\nimport { streamToStringAsync } from '../../../utils/stream';\nimport { createBuiltinAPIRequestHandler } from '../middleware/createBuiltinAPIRequestHandler';\nimport {\n  createBundleUrlSearchParams,\n  ExpoMetroOptions,\n  getMetroOptionsFromUrl,\n} from '../middleware/metroOptions';\n\nconst debug = require('debug')('expo:rsc') as typeof console.log;\n\ntype SSRLoadModuleArtifactsFunc = (\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>\n) => Promise<{ artifacts: SerialAsset[]; src: string }>;\n\ntype SSRLoadModuleFunc = <T extends Record<string, any>>(\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>,\n  extras?: { hot?: boolean }\n) => Promise<T>;\n\nconst getMetroServerRootMemo = memoize(getMetroServerRoot);\n\nexport function createServerComponentsMiddleware(\n  projectRoot: string,\n  {\n    rscPath,\n    instanceMetroOptions,\n    ssrLoadModule,\n    ssrLoadModuleArtifacts,\n    useClientRouter,\n    createModuleId,\n  }: {\n    rscPath: string;\n    instanceMetroOptions: Partial<ExpoMetroOptions>;\n    ssrLoadModule: SSRLoadModuleFunc;\n    ssrLoadModuleArtifacts: SSRLoadModuleArtifactsFunc;\n    useClientRouter: boolean;\n    createModuleId: (\n      filePath: string,\n      context: { platform: string; environment: string }\n    ) => string | number;\n  }\n) {\n  const routerModule = useClientRouter\n    ? 'expo-router/build/rsc/router/noopRouter'\n    : 'expo-router/build/rsc/router/expo-definedRouter';\n\n  const rscMiddleware = getRscMiddleware({\n    config: {},\n    // Disabled in development\n    baseUrl: '',\n    rscPath,\n    onError: console.error,\n    renderRsc: async (args) => {\n      // In development we should add simulated versions of common production headers.\n      if (args.headers['x-real-ip'] == null) {\n        args.headers['x-real-ip'] = getIpAddress();\n      }\n      if (args.headers['x-forwarded-for'] == null) {\n        args.headers['x-forwarded-for'] = args.headers['x-real-ip'];\n      }\n      if (args.headers['x-forwarded-proto'] == null) {\n        args.headers['x-forwarded-proto'] = 'http';\n      }\n\n      // Dev server-only implementation.\n      try {\n        return await renderRscToReadableStream({\n          ...args,\n          headers: new Headers(args.headers),\n          body: args.body!,\n        });\n      } catch (error: any) {\n        // If you get a codeFrame error during SSR like when using a Class component in React Server Components, then this\n        // will throw with:\n        // {\n        //   rawObject: {\n        //     type: 'TransformError',\n        //     lineNumber: 0,\n        //     errors: [ [Object] ],\n        //     name: 'SyntaxError',\n        //     message: '...',\n        //   }\n        // }\n\n        // TODO: Revisit all error handling now that we do direct metro bundling...\n        await logMetroError(projectRoot, { error });\n\n        const sanitizedServerMessage = stripAnsi(error.message) ?? error.message;\n        throw new Response(sanitizedServerMessage, {\n          status: 500,\n          headers: {\n            'Content-Type': 'text/plain',\n          },\n        });\n      }\n    },\n  });\n\n  let rscPathPrefix = rscPath;\n  if (rscPathPrefix !== '/') {\n    rscPathPrefix += '/';\n  }\n\n  async function exportServerActionsAsync(\n    {\n      platform,\n      entryPoints,\n      domRoot,\n    }: { platform: string; entryPoints: string[]; domRoot?: string },\n    files: ExportAssetMap\n  ): Promise<{\n    clientBoundaries: string[];\n    manifest: Record<string, [string, string]>;\n  }> {\n    const uniqueEntryPoints = [...new Set(entryPoints)];\n    // TODO: Support multiple entry points in a single split server bundle...\n    const manifest: Record<string, [string, string]> = {};\n    const nestedClientBoundaries: string[] = [];\n    const nestedServerBoundaries: string[] = [];\n    const processedEntryPoints = new Set<string>();\n    async function processEntryPoint(entryPoint: string) {\n      processedEntryPoints.add(entryPoint);\n\n      const contents = await ssrLoadModuleArtifacts(entryPoint, {\n        environment: 'react-server',\n        platform,\n        // Ignore the metro runtime to avoid overwriting the original in the API route.\n        modulesOnly: true,\n        // Required\n        runModule: true,\n        // Required to ensure assets load as client boundaries.\n        domRoot,\n      });\n\n      const reactClientReferences = contents.artifacts\n        .filter((a) => a.type === 'js')[0]\n        .metadata.reactClientReferences?.map((ref) => fileURLToFilePath(ref));\n\n      if (reactClientReferences) {\n        nestedClientBoundaries.push(...reactClientReferences!);\n      }\n      const reactServerReferences = contents.artifacts\n        .filter((a) => a.type === 'js')[0]\n        .metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref));\n\n      if (reactServerReferences) {\n        nestedServerBoundaries.push(...reactServerReferences!);\n      }\n\n      // Naive check to ensure the module runtime is not included in the server action bundle.\n      if (contents.src.includes('The experimental Metro feature')) {\n        throw new Error(\n          'Internal error: module runtime should not be included in server action bundles: ' +\n            entryPoint\n        );\n      }\n\n      const relativeName = createModuleId(entryPoint, {\n        platform,\n        environment: 'react-server',\n      });\n      const safeName = path.basename(contents.artifacts.find((a) => a.type === 'js')!.filename!);\n\n      const outputName = `_expo/rsc/${platform}/${safeName}`;\n      // While we're here, export the router for the server to dynamically render RSC.\n      files.set(outputName, {\n        targetDomain: 'server',\n        contents: wrapBundle(contents.src),\n      });\n\n      // Import relative to `dist/server/_expo/rsc/web/router.js`\n      manifest[entryPoint] = [String(relativeName), outputName];\n    }\n\n    async function processEntryPoints(entryPoints: string[], recursions = 0) {\n      // Arbitrary recursion limit to prevent infinite loops.\n      if (recursions > 10) {\n        throw new Error('Recursion limit exceeded while processing server boundaries');\n      }\n\n      for (const entryPoint of entryPoints) {\n        await processEntryPoint(entryPoint);\n      }\n\n      // When a server action has other server actions inside of it, we need to process those as well to ensure all entry points are in the manifest and accounted for.\n      let uniqueNestedServerBoundaries = [...new Set(nestedServerBoundaries)];\n      // Filter out values that have already been processed.\n      uniqueNestedServerBoundaries = uniqueNestedServerBoundaries.filter(\n        (value) => !processedEntryPoints.has(value)\n      );\n      if (uniqueNestedServerBoundaries.length) {\n        debug('bundling nested server action boundaries', uniqueNestedServerBoundaries);\n        return processEntryPoints(uniqueNestedServerBoundaries, recursions + 1);\n      }\n    }\n\n    await processEntryPoints(uniqueEntryPoints);\n\n    // Save the SSR manifest so we can perform more replacements in the server renderer and with server actions.\n    files.set(`_expo/rsc/${platform}/action-manifest.js`, {\n      targetDomain: 'server',\n      contents: 'module.exports = ' + JSON.stringify(manifest),\n    });\n\n    return { manifest, clientBoundaries: nestedClientBoundaries };\n  }\n\n  async function getExpoRouterClientReferencesAsync(\n    { platform, domRoot }: { platform: string; domRoot?: string },\n    files: ExportAssetMap\n  ): Promise<{\n    reactClientReferences: string[];\n    reactServerReferences: string[];\n    cssModules: SerialAsset[];\n  }> {\n    const contents = await ssrLoadModuleArtifacts(routerModule, {\n      environment: 'react-server',\n      platform,\n      modulesOnly: true,\n      domRoot,\n    });\n\n    // Extract the global CSS modules that are imported from the router.\n    // These will be injected in the head of the HTML document for the website.\n    const cssModules = contents.artifacts.filter((a) => a.type.startsWith('css'));\n\n    const reactServerReferences = contents.artifacts\n      .filter((a) => a.type === 'js')[0]\n      .metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref));\n\n    if (!reactServerReferences) {\n      throw new Error(\n        'Static server action references were not returned from the Metro SSR bundle for definedRouter'\n      );\n    }\n    debug('React client boundaries:', reactServerReferences);\n\n    const reactClientReferences = contents.artifacts\n      .filter((a) => a.type === 'js')[0]\n      .metadata.reactClientReferences?.map((ref) => fileURLToFilePath(ref));\n\n    if (!reactClientReferences) {\n      throw new Error(\n        'Static client references were not returned from the Metro SSR bundle for definedRouter'\n      );\n    }\n    debug('React client boundaries:', reactClientReferences);\n\n    // While we're here, export the router for the server to dynamically render RSC.\n    files.set(`_expo/rsc/${platform}/router.js`, {\n      targetDomain: 'server',\n      contents: wrapBundle(contents.src),\n    });\n\n    return { reactClientReferences, reactServerReferences, cssModules };\n  }\n\n  const routerCache = new Map<\n    string,\n    typeof import('expo-router/build/rsc/router/expo-definedRouter')\n  >();\n\n  async function getExpoRouterRscEntriesGetterAsync({ platform }: { platform: string }) {\n    // We can only cache this if we're using the client router since it doesn't change or use HMR\n    if (routerCache.has(platform) && useClientRouter) {\n      return routerCache.get(platform)!;\n    }\n\n    const router = await ssrLoadModule<\n      typeof import('expo-router/build/rsc/router/expo-definedRouter')\n    >(\n      routerModule,\n      {\n        environment: 'react-server',\n        // modulesOnly: true,\n        platform,\n      },\n      {\n        hot: !useClientRouter,\n      }\n    );\n\n    routerCache.set(platform, router);\n    return router;\n  }\n\n  function getResolveClientEntry(context: {\n    platform: string;\n    engine?: 'hermes' | null;\n    ssrManifest?: Map<string, string>;\n  }): (\n    file: string,\n    isServer: boolean\n  ) => {\n    id: string;\n    chunks: string[];\n  } {\n    const serverRoot = getMetroServerRootMemo(projectRoot);\n\n    const {\n      mode,\n      minify = false,\n      isExporting,\n      baseUrl,\n      routerRoot,\n      asyncRoutes,\n      preserveEnvVars,\n      reactCompiler,\n      lazy,\n    } = instanceMetroOptions;\n\n    assert(\n      isExporting != null &&\n        baseUrl != null &&\n        mode != null &&\n        routerRoot != null &&\n        asyncRoutes != null,\n      `The server must be started. (isExporting: ${isExporting}, baseUrl: ${baseUrl}, mode: ${mode}, routerRoot: ${routerRoot}, asyncRoutes: ${asyncRoutes})`\n    );\n\n    return (file: string, isServer: boolean) => {\n      if (isExporting) {\n        assert(context.ssrManifest, 'SSR manifest must exist when exporting');\n        const relativeFilePath = toPosixPath(path.relative(serverRoot, file));\n\n        assert(\n          context.ssrManifest.has(relativeFilePath),\n          `SSR manifest is missing client boundary \"${relativeFilePath}\"`\n        );\n\n        const chunk = context.ssrManifest.get(relativeFilePath);\n\n        return {\n          id: String(createModuleId(file, { platform: context.platform, environment: 'client' })),\n          chunks: chunk != null ? [chunk] : [],\n        };\n      }\n\n      const environment = isServer ? 'react-server' : 'client';\n      const searchParams = createBundleUrlSearchParams({\n        mainModuleName: '',\n        platform: context.platform,\n        mode,\n        minify,\n        lazy,\n        preserveEnvVars,\n        asyncRoutes,\n        baseUrl,\n        routerRoot,\n        isExporting,\n        reactCompiler: !!reactCompiler,\n        engine: context.engine ?? undefined,\n        bytecode: false,\n        clientBoundaries: [],\n        inlineSourceMap: false,\n        environment,\n        modulesOnly: true,\n        runModule: false,\n      });\n\n      searchParams.set('resolver.clientboundary', String(true));\n\n      const clientReferenceUrl = new URL('http://a');\n\n      // TICKLE: Handshake 1\n      searchParams.set('xRSC', '1');\n\n      clientReferenceUrl.search = searchParams.toString();\n\n      const filePath = file.startsWith('file://') ? fileURLToFilePath(file) : file;\n\n      const relativeFilePath = path.relative(serverRoot, filePath);\n\n      clientReferenceUrl.pathname = relativeFilePath;\n\n      // Ensure url.pathname ends with '.bundle'\n      if (!clientReferenceUrl.pathname.endsWith('.bundle')) {\n        clientReferenceUrl.pathname += '.bundle';\n      }\n\n      // Return relative URLs to help Android fetch from wherever it was loaded from since it doesn't support localhost.\n      const chunkName = clientReferenceUrl.pathname + clientReferenceUrl.search;\n\n      return {\n        id: String(createModuleId(filePath, { platform: context.platform, environment })),\n        chunks: [chunkName],\n      };\n    };\n  }\n\n  const rscRendererCache = new Map<string, typeof import('expo-router/build/rsc/rsc-renderer')>();\n\n  async function getRscRendererAsync(platform: string) {\n    // NOTE(EvanBacon): We memoize this now that there's a persistent server storage cache for Server Actions.\n    if (rscRendererCache.has(platform)) {\n      return rscRendererCache.get(platform)!;\n    }\n\n    // TODO: Extract CSS Modules / Assets from the bundler process\n    const renderer = await ssrLoadModule<typeof import('expo-router/build/rsc/rsc-renderer')>(\n      'expo-router/build/rsc/rsc-renderer',\n      {\n        environment: 'react-server',\n        platform,\n      }\n    );\n\n    rscRendererCache.set(platform, renderer);\n    return renderer;\n  }\n\n  const rscRenderContext = new Map<string, any>();\n\n  function getRscRenderContext(platform: string) {\n    // NOTE(EvanBacon): We memoize this now that there's a persistent server storage cache for Server Actions.\n    if (rscRenderContext.has(platform)) {\n      return rscRenderContext.get(platform)!;\n    }\n\n    const context = {};\n\n    rscRenderContext.set(platform, context);\n    return context;\n  }\n\n  async function renderRscToReadableStream(\n    {\n      input,\n      headers,\n      method,\n      platform,\n      body,\n      engine,\n      contentType,\n      ssrManifest,\n      decodedBody,\n    }: {\n      input: string;\n      headers: Headers;\n      method: 'POST' | 'GET';\n      platform: string;\n      body?: ReadableStream<Uint8Array>;\n      engine?: 'hermes' | null;\n      contentType?: string;\n      ssrManifest?: Map<string, string>;\n      decodedBody?: unknown;\n    },\n    isExporting: boolean | undefined = instanceMetroOptions.isExporting\n  ) {\n    assert(\n      isExporting != null,\n      'The server must be started before calling renderRscToReadableStream.'\n    );\n\n    if (method === 'POST') {\n      assert(body, 'Server request must be provided when method is POST (server actions)');\n    }\n\n    const context = getRscRenderContext(platform);\n\n    context['__expo_requestHeaders'] = headers;\n\n    const { renderRsc } = await getRscRendererAsync(platform);\n\n    return renderRsc(\n      {\n        body,\n        decodedBody,\n        context,\n        config: {},\n        input,\n        contentType,\n      },\n      {\n        isExporting,\n        entries: await getExpoRouterRscEntriesGetterAsync({ platform }),\n        resolveClientEntry: getResolveClientEntry({ platform, engine, ssrManifest }),\n        async loadServerModuleRsc(urlFragment) {\n          const serverRoot = getMetroServerRootMemo(projectRoot);\n\n          debug('[SSR] loadServerModuleRsc:', urlFragment);\n\n          const options = getMetroOptionsFromUrl(urlFragment);\n\n          return ssrLoadModule(path.join(serverRoot, options.mainModuleName), options, {\n            hot: true,\n          });\n        },\n      }\n    );\n  }\n\n  return {\n    // Get the static client boundaries (no dead code elimination allowed) for the production export.\n    getExpoRouterClientReferencesAsync,\n    exportServerActionsAsync,\n\n    async exportRoutesAsync(\n      {\n        platform,\n        ssrManifest,\n      }: {\n        platform: string;\n        ssrManifest: Map<string, string>;\n      },\n      files: ExportAssetMap\n    ) {\n      // TODO: When we add web SSR support, we need to extract CSS Modules / Assets from the bundler process to prevent FLOUC.\n      const { getBuildConfig } = (await getExpoRouterRscEntriesGetterAsync({ platform })).default;\n\n      // Get all the routes to render.\n      const buildConfig = await getBuildConfig!(async () =>\n        // TODO: Rework prefetching code to use Metro runtime.\n        []\n      );\n\n      await Promise.all(\n        Array.from(buildConfig).map(async ({ entries }) => {\n          for (const { input, isStatic } of entries || []) {\n            if (!isStatic) {\n              debug('Skipping static export for route', { input });\n              continue;\n            }\n            const destRscFile = path.join('_flight', platform, encodeInput(input));\n\n            const pipe = await renderRscToReadableStream(\n              {\n                input,\n                method: 'GET',\n                platform,\n                headers: new Headers(),\n                ssrManifest,\n              },\n              true\n            );\n\n            const rsc = await streamToStringAsync(pipe);\n            debug('RSC Payload', { platform, input, rsc });\n\n            files.set(destRscFile, {\n              contents: rsc,\n              targetDomain: 'client',\n              rscId: input,\n            });\n          }\n        })\n      );\n    },\n\n    middleware: createBuiltinAPIRequestHandler(\n      // Match `/_flight/[platform]/[...path]`\n      (req) => {\n        return getFullUrl(req.url).pathname.startsWith(rscPathPrefix);\n      },\n      rscMiddleware\n    ),\n    onReloadRscEvent: () => {\n      // NOTE: We cannot clear the renderer context because it would break the mounted context state.\n\n      // Clear the render context to ensure that the next render is a fresh start.\n      rscRenderContext.clear();\n    },\n  };\n}\n\nconst getFullUrl = (url: string) => {\n  try {\n    return new URL(url);\n  } catch {\n    return new URL(url, 'http://localhost:0');\n  }\n};\n\nexport const fileURLToFilePath = (fileURL: string) => {\n  return url.fileURLToPath(fileURL);\n};\n\nconst encodeInput = (input: string) => {\n  if (input === '') {\n    return 'index.txt';\n  }\n  if (input === 'index') {\n    throw new Error('Input should not be `index`');\n  }\n  if (input.startsWith('/')) {\n    throw new Error('Input should not start with `/`');\n  }\n  if (input.endsWith('/')) {\n    throw new Error('Input should not end with `/`');\n  }\n  return input + '.txt';\n};\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n"],"names":["createServerComponentsMiddleware","fileURLToFilePath","debug","require","getMetroServerRootMemo","memoize","getMetroServerRoot","projectRoot","rscPath","instanceMetroOptions","ssrLoadModule","ssrLoadModuleArtifacts","useClientRouter","createModuleId","routerModule","rscMiddleware","getRscMiddleware","config","baseUrl","onError","console","error","renderRsc","args","headers","getIpAddress","renderRscToReadableStream","Headers","body","logMetroError","sanitizedServerMessage","stripAnsi","message","Response","status","rscPathPrefix","exportServerActionsAsync","platform","entryPoints","domRoot","files","uniqueEntryPoints","Set","manifest","nestedClientBoundaries","nestedServerBoundaries","processedEntryPoints","processEntryPoint","entryPoint","contents","add","environment","modulesOnly","runModule","reactClientReferences","artifacts","filter","a","type","metadata","map","ref","push","reactServerReferences","src","includes","Error","relativeName","safeName","path","basename","find","filename","outputName","set","targetDomain","wrapBundle","String","processEntryPoints","recursions","uniqueNestedServerBoundaries","value","has","length","JSON","stringify","clientBoundaries","getExpoRouterClientReferencesAsync","cssModules","startsWith","routerCache","Map","getExpoRouterRscEntriesGetterAsync","get","router","hot","getResolveClientEntry","context","serverRoot","mode","minify","isExporting","routerRoot","asyncRoutes","preserveEnvVars","reactCompiler","lazy","assert","file","isServer","ssrManifest","relativeFilePath","toPosixPath","relative","chunk","id","chunks","searchParams","createBundleUrlSearchParams","mainModuleName","engine","undefined","bytecode","inlineSourceMap","clientReferenceUrl","URL","search","toString","filePath","pathname","endsWith","chunkName","rscRendererCache","getRscRendererAsync","renderer","rscRenderContext","getRscRenderContext","input","method","contentType","decodedBody","entries","resolveClientEntry","loadServerModuleRsc","urlFragment","options","getMetroOptionsFromUrl","join","exportRoutesAsync","getBuildConfig","default","buildConfig","Promise","all","Array","from","isStatic","destRscFile","encodeInput","pipe","rsc","streamToStringAsync","rscId","middleware","createBuiltinAPIRequestHandler","req","getFullUrl","url","onReloadRscEvent","clear","fileURL","fileURLToPath","str","replace"],"mappings":"AAAA;;;;;CAKC,GACD;;;;;;;;;;;IAoCgBA,gCAAgC,MAAhCA,gCAAgC;IAwiBnCC,iBAAiB,MAAjBA,iBAAiB;;;yBA5kBK,oBAAoB;;;;;;;yBAEtB,mCAAmC;;;;;;;8DACjD,QAAQ;;;;;;;8DACV,MAAM;;;;;;;8DACP,KAAK;;;;;;qCAES,uBAAuB;sBAE3B,qBAAqB;0BACnB,yBAAyB;oBAC7B,mBAAmB;oBACd,mBAAmB;wBACZ,uBAAuB;gDACZ,8CAA8C;8BAKtF,4BAA4B;;;;;;AAEnC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,AAAsB,AAAC;AAajE,MAAMC,sBAAsB,GAAGC,IAAAA,GAAO,QAAA,EAACC,MAAkB,EAAA,mBAAA,CAAC,AAAC;AAEpD,SAASN,gCAAgC,CAC9CO,WAAmB,EACnB,EACEC,OAAO,CAAA,EACPC,oBAAoB,CAAA,EACpBC,aAAa,CAAA,EACbC,sBAAsB,CAAA,EACtBC,eAAe,CAAA,EACfC,cAAc,CAAA,EAWf,EACD;IACA,MAAMC,YAAY,GAAGF,eAAe,GAChC,yCAAyC,GACzC,iDAAiD,AAAC;IAEtD,MAAMG,aAAa,GAAGC,IAAAA,IAAgB,EAAA,iBAAA,EAAC;QACrCC,MAAM,EAAE,EAAE;QACV,0BAA0B;QAC1BC,OAAO,EAAE,EAAE;QACXV,OAAO;QACPW,OAAO,EAAEC,OAAO,CAACC,KAAK;QACtBC,SAAS,EAAE,OAAOC,IAAI,GAAK;YACzB,gFAAgF;YAChF,IAAIA,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;gBACrCD,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC,GAAGC,IAAAA,GAAY,aAAA,GAAE,CAAC;YAC7C,CAAC;YACD,IAAIF,IAAI,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE;gBAC3CD,IAAI,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAAGD,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC9D,CAAC;YACD,IAAID,IAAI,CAACC,OAAO,CAAC,mBAAmB,CAAC,IAAI,IAAI,EAAE;gBAC7CD,IAAI,CAACC,OAAO,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC;YAC7C,CAAC;YAED,kCAAkC;YAClC,IAAI;gBACF,OAAO,MAAME,yBAAyB,CAAC;oBACrC,GAAGH,IAAI;oBACPC,OAAO,EAAE,IAAIG,OAAO,CAACJ,IAAI,CAACC,OAAO,CAAC;oBAClCI,IAAI,EAAEL,IAAI,CAACK,IAAI;iBAChB,CAAC,CAAC;YACL,EAAE,OAAOP,KAAK,EAAO;gBACnB,kHAAkH;gBAClH,mBAAmB;gBACnB,IAAI;gBACJ,iBAAiB;gBACjB,8BAA8B;gBAC9B,qBAAqB;gBACrB,4BAA4B;gBAC5B,2BAA2B;gBAC3B,sBAAsB;gBACtB,MAAM;gBACN,IAAI;gBAEJ,2EAA2E;gBAC3E,MAAMQ,IAAAA,oBAAa,cAAA,EAACtB,WAAW,EAAE;oBAAEc,KAAK;iBAAE,CAAC,CAAC;gBAE5C,MAAMS,sBAAsB,GAAGC,IAAAA,KAAS,UAAA,EAACV,KAAK,CAACW,OAAO,CAAC,IAAIX,KAAK,CAACW,OAAO,AAAC;gBACzE,MAAM,IAAIC,QAAQ,CAACH,sBAAsB,EAAE;oBACzCI,MAAM,EAAE,GAAG;oBACXV,OAAO,EAAE;wBACP,cAAc,EAAE,YAAY;qBAC7B;iBACF,CAAC,CAAC;YACL,CAAC;QACH,CAAC;KACF,CAAC,AAAC;IAEH,IAAIW,aAAa,GAAG3B,OAAO,AAAC;IAC5B,IAAI2B,aAAa,KAAK,GAAG,EAAE;QACzBA,aAAa,IAAI,GAAG,CAAC;IACvB,CAAC;IAED,eAAeC,wBAAwB,CACrC,EACEC,QAAQ,CAAA,EACRC,WAAW,CAAA,EACXC,OAAO,CAAA,EACuD,EAChEC,KAAqB,EAIpB;QACD,MAAMC,iBAAiB,GAAG;eAAI,IAAIC,GAAG,CAACJ,WAAW,CAAC;SAAC,AAAC;QACpD,yEAAyE;QACzE,MAAMK,QAAQ,GAAqC,EAAE,AAAC;QACtD,MAAMC,sBAAsB,GAAa,EAAE,AAAC;QAC5C,MAAMC,sBAAsB,GAAa,EAAE,AAAC;QAC5C,MAAMC,oBAAoB,GAAG,IAAIJ,GAAG,EAAU,AAAC;QAC/C,eAAeK,iBAAiB,CAACC,UAAkB,EAAE;gBAcrBC,GAEG,EAKHA,IAEG;YAtBjCH,oBAAoB,CAACI,GAAG,CAACF,UAAU,CAAC,CAAC;YAErC,MAAMC,QAAQ,GAAG,MAAMtC,sBAAsB,CAACqC,UAAU,EAAE;gBACxDG,WAAW,EAAE,cAAc;gBAC3Bd,QAAQ;gBACR,+EAA+E;gBAC/Ee,WAAW,EAAE,IAAI;gBACjB,WAAW;gBACXC,SAAS,EAAE,IAAI;gBACf,uDAAuD;gBACvDd,OAAO;aACR,CAAC,AAAC;YAEH,MAAMe,qBAAqB,GAAGL,CAAAA,GAEG,GAFHA,QAAQ,CAACM,SAAS,CAC7CC,MAAM,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CACjCC,QAAQ,CAACL,qBAAqB,SAAK,GAFRL,KAAAA,CAEQ,GAFRA,GAEG,CAAEW,GAAG,CAAC,CAACC,GAAG,GAAK5D,iBAAiB,CAAC4D,GAAG,CAAC,CAAC,AAAC;YAExE,IAAIP,qBAAqB,EAAE;gBACzBV,sBAAsB,CAACkB,IAAI,IAAIR,qBAAqB,CAAE,CAAC;YACzD,CAAC;YACD,MAAMS,qBAAqB,GAAGd,CAAAA,IAEG,GAFHA,QAAQ,CAACM,SAAS,CAC7CC,MAAM,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CACjCC,QAAQ,CAACI,qBAAqB,SAAK,GAFRd,KAAAA,CAEQ,GAFRA,IAEG,CAAEW,GAAG,CAAC,CAACC,GAAG,GAAK5D,iBAAiB,CAAC4D,GAAG,CAAC,CAAC,AAAC;YAExE,IAAIE,qBAAqB,EAAE;gBACzBlB,sBAAsB,CAACiB,IAAI,IAAIC,qBAAqB,CAAE,CAAC;YACzD,CAAC;YAED,wFAAwF;YACxF,IAAId,QAAQ,CAACe,GAAG,CAACC,QAAQ,CAAC,gCAAgC,CAAC,EAAE;gBAC3D,MAAM,IAAIC,KAAK,CACb,kFAAkF,GAChFlB,UAAU,CACb,CAAC;YACJ,CAAC;YAED,MAAMmB,YAAY,GAAGtD,cAAc,CAACmC,UAAU,EAAE;gBAC9CX,QAAQ;gBACRc,WAAW,EAAE,cAAc;aAC5B,CAAC,AAAC;YACH,MAAMiB,QAAQ,GAAGC,KAAI,EAAA,QAAA,CAACC,QAAQ,CAACrB,QAAQ,CAACM,SAAS,CAACgB,IAAI,CAAC,CAACd,CAAC,GAAKA,CAAC,CAACC,IAAI,KAAK,IAAI,CAAC,CAAEc,QAAQ,CAAE,AAAC;YAE3F,MAAMC,UAAU,GAAG,CAAC,UAAU,EAAEpC,QAAQ,CAAC,CAAC,EAAE+B,QAAQ,CAAC,CAAC,AAAC;YACvD,gFAAgF;YAChF5B,KAAK,CAACkC,GAAG,CAACD,UAAU,EAAE;gBACpBE,YAAY,EAAE,QAAQ;gBACtB1B,QAAQ,EAAE2B,UAAU,CAAC3B,QAAQ,CAACe,GAAG,CAAC;aACnC,CAAC,CAAC;YAEH,2DAA2D;YAC3DrB,QAAQ,CAACK,UAAU,CAAC,GAAG;gBAAC6B,MAAM,CAACV,YAAY,CAAC;gBAAEM,UAAU;aAAC,CAAC;QAC5D,CAAC;QAED,eAAeK,kBAAkB,CAACxC,WAAqB,EAAEyC,UAAU,GAAG,CAAC,EAAE;YACvE,uDAAuD;YACvD,IAAIA,UAAU,GAAG,EAAE,EAAE;gBACnB,MAAM,IAAIb,KAAK,CAAC,6DAA6D,CAAC,CAAC;YACjF,CAAC;YAED,KAAK,MAAMlB,UAAU,IAAIV,WAAW,CAAE;gBACpC,MAAMS,iBAAiB,CAACC,UAAU,CAAC,CAAC;YACtC,CAAC;YAED,iKAAiK;YACjK,IAAIgC,4BAA4B,GAAG;mBAAI,IAAItC,GAAG,CAACG,sBAAsB,CAAC;aAAC,AAAC;YACxE,sDAAsD;YACtDmC,4BAA4B,GAAGA,4BAA4B,CAACxB,MAAM,CAChE,CAACyB,KAAK,GAAK,CAACnC,oBAAoB,CAACoC,GAAG,CAACD,KAAK,CAAC,CAC5C,CAAC;YACF,IAAID,4BAA4B,CAACG,MAAM,EAAE;gBACvCjF,KAAK,CAAC,0CAA0C,EAAE8E,4BAA4B,CAAC,CAAC;gBAChF,OAAOF,kBAAkB,CAACE,4BAA4B,EAAED,UAAU,GAAG,CAAC,CAAC,CAAC;YAC1E,CAAC;QACH,CAAC;QAED,MAAMD,kBAAkB,CAACrC,iBAAiB,CAAC,CAAC;QAE5C,4GAA4G;QAC5GD,KAAK,CAACkC,GAAG,CAAC,CAAC,UAAU,EAAErC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;YACpDsC,YAAY,EAAE,QAAQ;YACtB1B,QAAQ,EAAE,mBAAmB,GAAGmC,IAAI,CAACC,SAAS,CAAC1C,QAAQ,CAAC;SACzD,CAAC,CAAC;QAEH,OAAO;YAAEA,QAAQ;YAAE2C,gBAAgB,EAAE1C,sBAAsB;SAAE,CAAC;IAChE,CAAC;IAED,eAAe2C,kCAAkC,CAC/C,EAAElD,QAAQ,CAAA,EAAEE,OAAO,CAAA,EAA0C,EAC7DC,KAAqB,EAKpB;YAY6BS,GAEG,EASHA,IAEG;QAxBjC,MAAMA,QAAQ,GAAG,MAAMtC,sBAAsB,CAACG,YAAY,EAAE;YAC1DqC,WAAW,EAAE,cAAc;YAC3Bd,QAAQ;YACRe,WAAW,EAAE,IAAI;YACjBb,OAAO;SACR,CAAC,AAAC;QAEH,oEAAoE;QACpE,2EAA2E;QAC3E,MAAMiD,UAAU,GAAGvC,QAAQ,CAACM,SAAS,CAACC,MAAM,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,IAAI,CAAC+B,UAAU,CAAC,KAAK,CAAC,CAAC,AAAC;QAE9E,MAAM1B,qBAAqB,GAAGd,CAAAA,GAEG,GAFHA,QAAQ,CAACM,SAAS,CAC7CC,MAAM,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CACjCC,QAAQ,CAACI,qBAAqB,SAAK,GAFRd,KAAAA,CAEQ,GAFRA,GAEG,CAAEW,GAAG,CAAC,CAACC,GAAG,GAAK5D,iBAAiB,CAAC4D,GAAG,CAAC,CAAC,AAAC;QAExE,IAAI,CAACE,qBAAqB,EAAE;YAC1B,MAAM,IAAIG,KAAK,CACb,+FAA+F,CAChG,CAAC;QACJ,CAAC;QACDhE,KAAK,CAAC,0BAA0B,EAAE6D,qBAAqB,CAAC,CAAC;QAEzD,MAAMT,qBAAqB,GAAGL,CAAAA,IAEG,GAFHA,QAAQ,CAACM,SAAS,CAC7CC,MAAM,CAAC,CAACC,CAAC,GAAKA,CAAC,CAACC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CACjCC,QAAQ,CAACL,qBAAqB,SAAK,GAFRL,KAAAA,CAEQ,GAFRA,IAEG,CAAEW,GAAG,CAAC,CAACC,GAAG,GAAK5D,iBAAiB,CAAC4D,GAAG,CAAC,CAAC,AAAC;QAExE,IAAI,CAACP,qBAAqB,EAAE;YAC1B,MAAM,IAAIY,KAAK,CACb,wFAAwF,CACzF,CAAC;QACJ,CAAC;QACDhE,KAAK,CAAC,0BAA0B,EAAEoD,qBAAqB,CAAC,CAAC;QAEzD,gFAAgF;QAChFd,KAAK,CAACkC,GAAG,CAAC,CAAC,UAAU,EAAErC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC3CsC,YAAY,EAAE,QAAQ;YACtB1B,QAAQ,EAAE2B,UAAU,CAAC3B,QAAQ,CAACe,GAAG,CAAC;SACnC,CAAC,CAAC;QAEH,OAAO;YAAEV,qBAAqB;YAAES,qBAAqB;YAAEyB,UAAU;SAAE,CAAC;IACtE,CAAC;IAED,MAAME,WAAW,GAAG,IAAIC,GAAG,EAGxB,AAAC;IAEJ,eAAeC,kCAAkC,CAAC,EAAEvD,QAAQ,CAAA,EAAwB,EAAE;QACpF,6FAA6F;QAC7F,IAAIqD,WAAW,CAACR,GAAG,CAAC7C,QAAQ,CAAC,IAAIzB,eAAe,EAAE;YAChD,OAAO8E,WAAW,CAACG,GAAG,CAACxD,QAAQ,CAAC,CAAE;QACpC,CAAC;QAED,MAAMyD,MAAM,GAAG,MAAMpF,aAAa,CAGhCI,YAAY,EACZ;YACEqC,WAAW,EAAE,cAAc;YAC3B,qBAAqB;YACrBd,QAAQ;SACT,EACD;YACE0D,GAAG,EAAE,CAACnF,eAAe;SACtB,CACF,AAAC;QAEF8E,WAAW,CAAChB,GAAG,CAACrC,QAAQ,EAAEyD,MAAM,CAAC,CAAC;QAClC,OAAOA,MAAM,CAAC;IAChB,CAAC;IAED,SAASE,qBAAqB,CAACC,OAI9B,EAMC;QACA,MAAMC,UAAU,GAAG9F,sBAAsB,CAACG,WAAW,CAAC,AAAC;QAEvD,MAAM,EACJ4F,IAAI,CAAA,EACJC,MAAM,EAAG,KAAK,CAAA,EACdC,WAAW,CAAA,EACXnF,OAAO,CAAA,EACPoF,UAAU,CAAA,EACVC,WAAW,CAAA,EACXC,eAAe,CAAA,EACfC,aAAa,CAAA,EACbC,IAAI,CAAA,IACL,GAAGjG,oBAAoB,AAAC;QAEzBkG,IAAAA,OAAM,EAAA,QAAA,EACJN,WAAW,IAAI,IAAI,IACjBnF,OAAO,IAAI,IAAI,IACfiF,IAAI,IAAI,IAAI,IACZG,UAAU,IAAI,IAAI,IAClBC,WAAW,IAAI,IAAI,EACrB,CAAC,0CAA0C,EAAEF,WAAW,CAAC,WAAW,EAAEnF,OAAO,CAAC,QAAQ,EAAEiF,IAAI,CAAC,cAAc,EAAEG,UAAU,CAAC,eAAe,EAAEC,WAAW,CAAC,CAAC,CAAC,CACxJ,CAAC;QAEF,OAAO,CAACK,IAAY,EAAEC,QAAiB,GAAK;YAC1C,IAAIR,WAAW,EAAE;gBACfM,IAAAA,OAAM,EAAA,QAAA,EAACV,OAAO,CAACa,WAAW,EAAE,wCAAwC,CAAC,CAAC;gBACtE,MAAMC,gBAAgB,GAAGC,IAAAA,SAAW,YAAA,EAAC3C,KAAI,EAAA,QAAA,CAAC4C,QAAQ,CAACf,UAAU,EAAEU,IAAI,CAAC,CAAC,AAAC;gBAEtED,IAAAA,OAAM,EAAA,QAAA,EACJV,OAAO,CAACa,WAAW,CAAC5B,GAAG,CAAC6B,gBAAgB,CAAC,EACzC,CAAC,yCAAyC,EAAEA,gBAAgB,CAAC,CAAC,CAAC,CAChE,CAAC;gBAEF,MAAMG,KAAK,GAAGjB,OAAO,CAACa,WAAW,CAACjB,GAAG,CAACkB,gBAAgB,CAAC,AAAC;gBAExD,OAAO;oBACLI,EAAE,EAAEtC,MAAM,CAAChE,cAAc,CAAC+F,IAAI,EAAE;wBAAEvE,QAAQ,EAAE4D,OAAO,CAAC5D,QAAQ;wBAAEc,WAAW,EAAE,QAAQ;qBAAE,CAAC,CAAC;oBACvFiE,MAAM,EAAEF,KAAK,IAAI,IAAI,GAAG;wBAACA,KAAK;qBAAC,GAAG,EAAE;iBACrC,CAAC;YACJ,CAAC;YAED,MAAM/D,WAAW,GAAG0D,QAAQ,GAAG,cAAc,GAAG,QAAQ,AAAC;YACzD,MAAMQ,YAAY,GAAGC,IAAAA,aAA2B,4BAAA,EAAC;gBAC/CC,cAAc,EAAE,EAAE;gBAClBlF,QAAQ,EAAE4D,OAAO,CAAC5D,QAAQ;gBAC1B8D,IAAI;gBACJC,MAAM;gBACNM,IAAI;gBACJF,eAAe;gBACfD,WAAW;gBACXrF,OAAO;gBACPoF,UAAU;gBACVD,WAAW;gBACXI,aAAa,EAAE,CAAC,CAACA,aAAa;gBAC9Be,MAAM,EAAEvB,OAAO,CAACuB,MAAM,IAAIC,SAAS;gBACnCC,QAAQ,EAAE,KAAK;gBACfpC,gBAAgB,EAAE,EAAE;gBACpBqC,eAAe,EAAE,KAAK;gBACtBxE,WAAW;gBACXC,WAAW,EAAE,IAAI;gBACjBC,SAAS,EAAE,KAAK;aACjB,CAAC,AAAC;YAEHgE,YAAY,CAAC3C,GAAG,CAAC,yBAAyB,EAAEG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1D,MAAM+C,kBAAkB,GAAG,IAAIC,GAAG,CAAC,UAAU,CAAC,AAAC;YAE/C,sBAAsB;YACtBR,YAAY,CAAC3C,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAE9BkD,kBAAkB,CAACE,MAAM,GAAGT,YAAY,CAACU,QAAQ,EAAE,CAAC;YAEpD,MAAMC,QAAQ,GAAGpB,IAAI,CAACnB,UAAU,CAAC,SAAS,CAAC,GAAGxF,iBAAiB,CAAC2G,IAAI,CAAC,GAAGA,IAAI,AAAC;YAE7E,MAAMG,iBAAgB,GAAG1C,KAAI,EAAA,QAAA,CAAC4C,QAAQ,CAACf,UAAU,EAAE8B,QAAQ,CAAC,AAAC;YAE7DJ,kBAAkB,CAACK,QAAQ,GAAGlB,iBAAgB,CAAC;YAE/C,0CAA0C;YAC1C,IAAI,CAACa,kBAAkB,CAACK,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACpDN,kBAAkB,CAACK,QAAQ,IAAI,SAAS,CAAC;YAC3C,CAAC;YAED,kHAAkH;YAClH,MAAME,SAAS,GAAGP,kBAAkB,CAACK,QAAQ,GAAGL,kBAAkB,CAACE,MAAM,AAAC;YAE1E,OAAO;gBACLX,EAAE,EAAEtC,MAAM,CAAChE,cAAc,CAACmH,QAAQ,EAAE;oBAAE3F,QAAQ,EAAE4D,OAAO,CAAC5D,QAAQ;oBAAEc,WAAW;iBAAE,CAAC,CAAC;gBACjFiE,MAAM,EAAE;oBAACe,SAAS;iBAAC;aACpB,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,gBAAgB,GAAG,IAAIzC,GAAG,EAA+D,AAAC;IAEhG,eAAe0C,mBAAmB,CAAChG,QAAgB,EAAE;QACnD,0GAA0G;QAC1G,IAAI+F,gBAAgB,CAAClD,GAAG,CAAC7C,QAAQ,CAAC,EAAE;YAClC,OAAO+F,gBAAgB,CAACvC,GAAG,CAACxD,QAAQ,CAAC,CAAE;QACzC,CAAC;QAED,8DAA8D;QAC9D,MAAMiG,QAAQ,GAAG,MAAM5H,aAAa,CAClC,oCAAoC,EACpC;YACEyC,WAAW,EAAE,cAAc;YAC3Bd,QAAQ;SACT,CACF,AAAC;QAEF+F,gBAAgB,CAAC1D,GAAG,CAACrC,QAAQ,EAAEiG,QAAQ,CAAC,CAAC;QACzC,OAAOA,QAAQ,CAAC;IAClB,CAAC;IAED,MAAMC,gBAAgB,GAAG,IAAI5C,GAAG,EAAe,AAAC;IAEhD,SAAS6C,mBAAmB,CAACnG,QAAgB,EAAE;QAC7C,0GAA0G;QAC1G,IAAIkG,gBAAgB,CAACrD,GAAG,CAAC7C,QAAQ,CAAC,EAAE;YAClC,OAAOkG,gBAAgB,CAAC1C,GAAG,CAACxD,QAAQ,CAAC,CAAE;QACzC,CAAC;QAED,MAAM4D,OAAO,GAAG,EAAE,AAAC;QAEnBsC,gBAAgB,CAAC7D,GAAG,CAACrC,QAAQ,EAAE4D,OAAO,CAAC,CAAC;QACxC,OAAOA,OAAO,CAAC;IACjB,CAAC;IAED,eAAevE,yBAAyB,CACtC,EACE+G,KAAK,CAAA,EACLjH,OAAO,CAAA,EACPkH,MAAM,CAAA,EACNrG,QAAQ,CAAA,EACRT,IAAI,CAAA,EACJ4F,MAAM,CAAA,EACNmB,WAAW,CAAA,EACX7B,WAAW,CAAA,EACX8B,WAAW,CAAA,EAWZ,EACDvC,WAAgC,GAAG5F,oBAAoB,CAAC4F,WAAW,EACnE;QACAM,IAAAA,OAAM,EAAA,QAAA,EACJN,WAAW,IAAI,IAAI,EACnB,sEAAsE,CACvE,CAAC;QAEF,IAAIqC,MAAM,KAAK,MAAM,EAAE;YACrB/B,IAAAA,OAAM,EAAA,QAAA,EAAC/E,IAAI,EAAE,sEAAsE,CAAC,CAAC;QACvF,CAAC;QAED,MAAMqE,OAAO,GAAGuC,mBAAmB,CAACnG,QAAQ,CAAC,AAAC;QAE9C4D,OAAO,CAAC,uBAAuB,CAAC,GAAGzE,OAAO,CAAC;QAE3C,MAAM,EAAEF,SAAS,CAAA,EAAE,GAAG,MAAM+G,mBAAmB,CAAChG,QAAQ,CAAC,AAAC;QAE1D,OAAOf,SAAS,CACd;YACEM,IAAI;YACJgH,WAAW;YACX3C,OAAO;YACPhF,MAAM,EAAE,EAAE;YACVwH,KAAK;YACLE,WAAW;SACZ,EACD;YACEtC,WAAW;YACXwC,OAAO,EAAE,MAAMjD,kCAAkC,CAAC;gBAAEvD,QAAQ;aAAE,CAAC;YAC/DyG,kBAAkB,EAAE9C,qBAAqB,CAAC;gBAAE3D,QAAQ;gBAAEmF,MAAM;gBAAEV,WAAW;aAAE,CAAC;YAC5E,MAAMiC,mBAAmB,EAACC,WAAW,EAAE;gBACrC,MAAM9C,UAAU,GAAG9F,sBAAsB,CAACG,WAAW,CAAC,AAAC;gBAEvDL,KAAK,CAAC,4BAA4B,EAAE8I,WAAW,CAAC,CAAC;gBAEjD,MAAMC,OAAO,GAAGC,IAAAA,aAAsB,uBAAA,EAACF,WAAW,CAAC,AAAC;gBAEpD,OAAOtI,aAAa,CAAC2D,KAAI,EAAA,QAAA,CAAC8E,IAAI,CAACjD,UAAU,EAAE+C,OAAO,CAAC1B,cAAc,CAAC,EAAE0B,OAAO,EAAE;oBAC3ElD,GAAG,EAAE,IAAI;iBACV,CAAC,CAAC;YACL,CAAC;SACF,CACF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,iGAAiG;QACjGR,kCAAkC;QAClCnD,wBAAwB;QAExB,MAAMgH,iBAAiB,EACrB,EACE/G,QAAQ,CAAA,EACRyE,WAAW,CAAA,EAIZ,EACDtE,KAAqB,EACrB;YACA,wHAAwH;YACxH,MAAM,EAAE6G,cAAc,CAAA,EAAE,GAAG,CAAC,MAAMzD,kCAAkC,CAAC;gBAAEvD,QAAQ;aAAE,CAAC,CAAC,CAACiH,OAAO,AAAC;YAE5F,gCAAgC;YAChC,MAAMC,WAAW,GAAG,MAAMF,cAAc,CAAE,UACxC,sDAAsD;gBACtD,EAAE,CACH,AAAC;YAEF,MAAMG,OAAO,CAACC,GAAG,CACfC,KAAK,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC3F,GAAG,CAAC,OAAO,EAAEiF,OAAO,CAAA,EAAE,GAAK;gBACjD,KAAK,MAAM,EAAEJ,KAAK,CAAA,EAAEmB,QAAQ,CAAA,EAAE,IAAIf,OAAO,IAAI,EAAE,CAAE;oBAC/C,IAAI,CAACe,QAAQ,EAAE;wBACb1J,KAAK,CAAC,kCAAkC,EAAE;4BAAEuI,KAAK;yBAAE,CAAC,CAAC;wBACrD,SAAS;oBACX,CAAC;oBACD,MAAMoB,WAAW,GAAGxF,KAAI,EAAA,QAAA,CAAC8E,IAAI,CAAC,SAAS,EAAE9G,QAAQ,EAAEyH,WAAW,CAACrB,KAAK,CAAC,CAAC,AAAC;oBAEvE,MAAMsB,IAAI,GAAG,MAAMrI,yBAAyB,CAC1C;wBACE+G,KAAK;wBACLC,MAAM,EAAE,KAAK;wBACbrG,QAAQ;wBACRb,OAAO,EAAE,IAAIG,OAAO,EAAE;wBACtBmF,WAAW;qBACZ,EACD,IAAI,CACL,AAAC;oBAEF,MAAMkD,GAAG,GAAG,MAAMC,IAAAA,OAAmB,oBAAA,EAACF,IAAI,CAAC,AAAC;oBAC5C7J,KAAK,CAAC,aAAa,EAAE;wBAAEmC,QAAQ;wBAAEoG,KAAK;wBAAEuB,GAAG;qBAAE,CAAC,CAAC;oBAE/CxH,KAAK,CAACkC,GAAG,CAACmF,WAAW,EAAE;wBACrB5G,QAAQ,EAAE+G,GAAG;wBACbrF,YAAY,EAAE,QAAQ;wBACtBuF,KAAK,EAAEzB,KAAK;qBACb,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED0B,UAAU,EAAEC,IAAAA,+BAA8B,+BAAA,EACxC,wCAAwC;QACxC,CAACC,GAAG,GAAK;YACP,OAAOC,UAAU,CAACD,GAAG,CAACE,GAAG,CAAC,CAACtC,QAAQ,CAACxC,UAAU,CAACtD,aAAa,CAAC,CAAC;QAChE,CAAC,EACDpB,aAAa,CACd;QACDyJ,gBAAgB,EAAE,IAAM;YACtB,+FAA+F;YAE/F,4EAA4E;YAC5EjC,gBAAgB,CAACkC,KAAK,EAAE,CAAC;QAC3B,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAMH,UAAU,GAAG,CAACC,GAAW,GAAK;IAClC,IAAI;QACF,OAAO,IAAI1C,GAAG,CAAC0C,GAAG,CAAC,CAAC;IACtB,EAAE,OAAM;QACN,OAAO,IAAI1C,GAAG,CAAC0C,GAAG,EAAE,oBAAoB,CAAC,CAAC;IAC5C,CAAC;AACH,CAAC,AAAC;AAEK,MAAMtK,iBAAiB,GAAG,CAACyK,OAAe,GAAK;IACpD,OAAOH,IAAG,EAAA,QAAA,CAACI,aAAa,CAACD,OAAO,CAAC,CAAC;AACpC,CAAC,AAAC;AAEF,MAAMZ,WAAW,GAAG,CAACrB,KAAa,GAAK;IACrC,IAAIA,KAAK,KAAK,EAAE,EAAE;QAChB,OAAO,WAAW,CAAC;IACrB,CAAC;IACD,IAAIA,KAAK,KAAK,OAAO,EAAE;QACrB,MAAM,IAAIvE,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;IACD,IAAIuE,KAAK,CAAChD,UAAU,CAAC,GAAG,CAAC,EAAE;QACzB,MAAM,IAAIvB,KAAK,CAAC,iCAAiC,CAAC,CAAC;IACrD,CAAC;IACD,IAAIuE,KAAK,CAACP,QAAQ,CAAC,GAAG,CAAC,EAAE;QACvB,MAAM,IAAIhE,KAAK,CAAC,+BAA+B,CAAC,CAAC;IACnD,CAAC;IACD,OAAOuE,KAAK,GAAG,MAAM,CAAC;AACxB,CAAC,AAAC;AAEF,SAAS7D,UAAU,CAACgG,GAAW,EAAE;IAC/B,uDAAuD;IACvD,mDAAmD;IACnD,6FAA6F;IAC7F,OAAOA,GAAG,CAACC,OAAO,qBAAqB,qBAAqB,CAAC,CAAC;AAChE,CAAC"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/createServerComponentsMiddleware.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport { SerialAsset } from '@expo/metro-config/build/serializer/serializerAssets';\nimport { getRscMiddleware } from '@expo/server/build/middleware/rsc';\nimport assert from 'assert';\nimport path from 'path';\nimport url from 'url';\n\nimport { IS_METRO_BUNDLE_ERROR_SYMBOL, logMetroError } from './metroErrorInterface';\nimport { isPossiblyUnableToResolveError } from '../../../export/embed/xcodeCompilerLogger';\nimport { ExportAssetMap } from '../../../export/saveAssets';\nimport { stripAnsi } from '../../../utils/ansi';\nimport { toPosixPath } from '../../../utils/filePath';\nimport { memoize } from '../../../utils/fn';\nimport { getIpAddress } from '../../../utils/ip';\nimport { streamToStringAsync } from '../../../utils/stream';\nimport { createBuiltinAPIRequestHandler } from '../middleware/createBuiltinAPIRequestHandler';\nimport {\n  createBundleUrlSearchParams,\n  ExpoMetroOptions,\n  getMetroOptionsFromUrl,\n} from '../middleware/metroOptions';\n\nconst debug = require('debug')('expo:rsc') as typeof console.log;\n\ntype SSRLoadModuleArtifactsFunc = (\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>\n) => Promise<{ artifacts: SerialAsset[]; src: string }>;\n\ntype SSRLoadModuleFunc = <T extends Record<string, any>>(\n  filePath: string,\n  specificOptions?: Partial<ExpoMetroOptions>,\n  extras?: { hot?: boolean }\n) => Promise<T>;\n\nconst getMetroServerRootMemo = memoize(getMetroServerRoot);\n\nexport function createServerComponentsMiddleware(\n  projectRoot: string,\n  {\n    rscPath,\n    instanceMetroOptions,\n    ssrLoadModule,\n    ssrLoadModuleArtifacts,\n    useClientRouter,\n    createModuleId,\n  }: {\n    rscPath: string;\n    instanceMetroOptions: Partial<ExpoMetroOptions>;\n    ssrLoadModule: SSRLoadModuleFunc;\n    ssrLoadModuleArtifacts: SSRLoadModuleArtifactsFunc;\n    useClientRouter: boolean;\n    createModuleId: (\n      filePath: string,\n      context: { platform: string; environment: string }\n    ) => string | number;\n  }\n) {\n  const routerModule = useClientRouter\n    ? 'expo-router/build/rsc/router/noopRouter'\n    : 'expo-router/build/rsc/router/expo-definedRouter';\n\n  const rscMiddleware = getRscMiddleware({\n    config: {},\n    // Disabled in development\n    baseUrl: '',\n    rscPath,\n    onError: console.error,\n    renderRsc: async (args) => {\n      // In development we should add simulated versions of common production headers.\n      if (args.headers['x-real-ip'] == null) {\n        args.headers['x-real-ip'] = getIpAddress();\n      }\n      if (args.headers['x-forwarded-for'] == null) {\n        args.headers['x-forwarded-for'] = args.headers['x-real-ip'];\n      }\n      if (args.headers['x-forwarded-proto'] == null) {\n        args.headers['x-forwarded-proto'] = 'http';\n      }\n\n      // Dev server-only implementation.\n      try {\n        return await renderRscToReadableStream({\n          ...args,\n          headers: new Headers(args.headers),\n          body: args.body!,\n        });\n      } catch (error: any) {\n        // If you get a codeFrame error during SSR like when using a Class component in React Server Components, then this\n        // will throw with:\n        // {\n        //   rawObject: {\n        //     type: 'TransformError',\n        //     lineNumber: 0,\n        //     errors: [ [Object] ],\n        //     name: 'SyntaxError',\n        //     message: '...',\n        //   }\n        // }\n\n        // TODO: Revisit all error handling now that we do direct metro bundling...\n        await logMetroError(projectRoot, { error });\n\n        if (error[IS_METRO_BUNDLE_ERROR_SYMBOL]) {\n          throw new Response(JSON.stringify(error), {\n            status: isPossiblyUnableToResolveError(error) ? 404 : 500,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n        }\n\n        const sanitizedServerMessage = stripAnsi(error.message) ?? error.message;\n        throw new Response(sanitizedServerMessage, {\n          status: 500,\n          headers: {\n            'Content-Type': 'text/plain',\n          },\n        });\n      }\n    },\n  });\n\n  let rscPathPrefix = rscPath;\n  if (rscPathPrefix !== '/') {\n    rscPathPrefix += '/';\n  }\n\n  async function exportServerActionsAsync(\n    {\n      platform,\n      entryPoints,\n      domRoot,\n    }: { platform: string; entryPoints: string[]; domRoot?: string },\n    files: ExportAssetMap\n  ): Promise<{\n    clientBoundaries: string[];\n    manifest: Record<string, [string, string]>;\n  }> {\n    const uniqueEntryPoints = [...new Set(entryPoints)];\n    // TODO: Support multiple entry points in a single split server bundle...\n    const manifest: Record<string, [string, string]> = {};\n    const nestedClientBoundaries: string[] = [];\n    const nestedServerBoundaries: string[] = [];\n    const processedEntryPoints = new Set<string>();\n    async function processEntryPoint(entryPoint: string) {\n      processedEntryPoints.add(entryPoint);\n\n      const contents = await ssrLoadModuleArtifacts(entryPoint, {\n        environment: 'react-server',\n        platform,\n        // Ignore the metro runtime to avoid overwriting the original in the API route.\n        modulesOnly: true,\n        // Required\n        runModule: true,\n        // Required to ensure assets load as client boundaries.\n        domRoot,\n      });\n\n      const reactClientReferences = contents.artifacts\n        .filter((a) => a.type === 'js')[0]\n        .metadata.reactClientReferences?.map((ref) => fileURLToFilePath(ref));\n\n      if (reactClientReferences) {\n        nestedClientBoundaries.push(...reactClientReferences!);\n      }\n      const reactServerReferences = contents.artifacts\n        .filter((a) => a.type === 'js')[0]\n        .metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref));\n\n      if (reactServerReferences) {\n        nestedServerBoundaries.push(...reactServerReferences!);\n      }\n\n      // Naive check to ensure the module runtime is not included in the server action bundle.\n      if (contents.src.includes('The experimental Metro feature')) {\n        throw new Error(\n          'Internal error: module runtime should not be included in server action bundles: ' +\n            entryPoint\n        );\n      }\n\n      const relativeName = createModuleId(entryPoint, {\n        platform,\n        environment: 'react-server',\n      });\n      const safeName = path.basename(contents.artifacts.find((a) => a.type === 'js')!.filename!);\n\n      const outputName = `_expo/rsc/${platform}/${safeName}`;\n      // While we're here, export the router for the server to dynamically render RSC.\n      files.set(outputName, {\n        targetDomain: 'server',\n        contents: wrapBundle(contents.src),\n      });\n\n      // Import relative to `dist/server/_expo/rsc/web/router.js`\n      manifest[entryPoint] = [String(relativeName), outputName];\n    }\n\n    async function processEntryPoints(entryPoints: string[], recursions = 0) {\n      // Arbitrary recursion limit to prevent infinite loops.\n      if (recursions > 10) {\n        throw new Error('Recursion limit exceeded while processing server boundaries');\n      }\n\n      for (const entryPoint of entryPoints) {\n        await processEntryPoint(entryPoint);\n      }\n\n      // When a server action has other server actions inside of it, we need to process those as well to ensure all entry points are in the manifest and accounted for.\n      let uniqueNestedServerBoundaries = [...new Set(nestedServerBoundaries)];\n      // Filter out values that have already been processed.\n      uniqueNestedServerBoundaries = uniqueNestedServerBoundaries.filter(\n        (value) => !processedEntryPoints.has(value)\n      );\n      if (uniqueNestedServerBoundaries.length) {\n        debug('bundling nested server action boundaries', uniqueNestedServerBoundaries);\n        return processEntryPoints(uniqueNestedServerBoundaries, recursions + 1);\n      }\n    }\n\n    await processEntryPoints(uniqueEntryPoints);\n\n    // Save the SSR manifest so we can perform more replacements in the server renderer and with server actions.\n    files.set(`_expo/rsc/${platform}/action-manifest.js`, {\n      targetDomain: 'server',\n      contents: 'module.exports = ' + JSON.stringify(manifest),\n    });\n\n    return { manifest, clientBoundaries: nestedClientBoundaries };\n  }\n\n  async function getExpoRouterClientReferencesAsync(\n    { platform, domRoot }: { platform: string; domRoot?: string },\n    files: ExportAssetMap\n  ): Promise<{\n    reactClientReferences: string[];\n    reactServerReferences: string[];\n    cssModules: SerialAsset[];\n  }> {\n    const contents = await ssrLoadModuleArtifacts(routerModule, {\n      environment: 'react-server',\n      platform,\n      modulesOnly: true,\n      domRoot,\n    });\n\n    // Extract the global CSS modules that are imported from the router.\n    // These will be injected in the head of the HTML document for the website.\n    const cssModules = contents.artifacts.filter((a) => a.type.startsWith('css'));\n\n    const reactServerReferences = contents.artifacts\n      .filter((a) => a.type === 'js')[0]\n      .metadata.reactServerReferences?.map((ref) => fileURLToFilePath(ref));\n\n    if (!reactServerReferences) {\n      throw new Error(\n        'Static server action references were not returned from the Metro SSR bundle for definedRouter'\n      );\n    }\n    debug('React client boundaries:', reactServerReferences);\n\n    const reactClientReferences = contents.artifacts\n      .filter((a) => a.type === 'js')[0]\n      .metadata.reactClientReferences?.map((ref) => fileURLToFilePath(ref));\n\n    if (!reactClientReferences) {\n      throw new Error(\n        'Static client references were not returned from the Metro SSR bundle for definedRouter'\n      );\n    }\n    debug('React client boundaries:', reactClientReferences);\n\n    // While we're here, export the router for the server to dynamically render RSC.\n    files.set(`_expo/rsc/${platform}/router.js`, {\n      targetDomain: 'server',\n      contents: wrapBundle(contents.src),\n    });\n\n    return { reactClientReferences, reactServerReferences, cssModules };\n  }\n\n  const routerCache = new Map<\n    string,\n    typeof import('expo-router/build/rsc/router/expo-definedRouter')\n  >();\n\n  async function getExpoRouterRscEntriesGetterAsync({ platform }: { platform: string }) {\n    // We can only cache this if we're using the client router since it doesn't change or use HMR\n    if (routerCache.has(platform) && useClientRouter) {\n      return routerCache.get(platform)!;\n    }\n\n    const router = await ssrLoadModule<\n      typeof import('expo-router/build/rsc/router/expo-definedRouter')\n    >(\n      routerModule,\n      {\n        environment: 'react-server',\n        // modulesOnly: true,\n        platform,\n      },\n      {\n        hot: !useClientRouter,\n      }\n    );\n\n    routerCache.set(platform, router);\n    return router;\n  }\n\n  function getResolveClientEntry(context: {\n    platform: string;\n    engine?: 'hermes' | null;\n    ssrManifest?: Map<string, string>;\n  }): (\n    file: string,\n    isServer: boolean\n  ) => {\n    id: string;\n    chunks: string[];\n  } {\n    const serverRoot = getMetroServerRootMemo(projectRoot);\n\n    const {\n      mode,\n      minify = false,\n      isExporting,\n      baseUrl,\n      routerRoot,\n      asyncRoutes,\n      preserveEnvVars,\n      reactCompiler,\n      lazy,\n    } = instanceMetroOptions;\n\n    assert(\n      isExporting != null &&\n        baseUrl != null &&\n        mode != null &&\n        routerRoot != null &&\n        asyncRoutes != null,\n      `The server must be started. (isExporting: ${isExporting}, baseUrl: ${baseUrl}, mode: ${mode}, routerRoot: ${routerRoot}, asyncRoutes: ${asyncRoutes})`\n    );\n\n    return (file: string, isServer: boolean) => {\n      if (isExporting) {\n        assert(context.ssrManifest, 'SSR manifest must exist when exporting');\n        const relativeFilePath = toPosixPath(path.relative(serverRoot, file));\n\n        assert(\n          context.ssrManifest.has(relativeFilePath),\n          `SSR manifest is missing client boundary \"${relativeFilePath}\"`\n        );\n\n        const chunk = context.ssrManifest.get(relativeFilePath);\n\n        return {\n          id: String(createModuleId(file, { platform: context.platform, environment: 'client' })),\n          chunks: chunk != null ? [chunk] : [],\n        };\n      }\n\n      const environment = isServer ? 'react-server' : 'client';\n      const searchParams = createBundleUrlSearchParams({\n        mainModuleName: '',\n        platform: context.platform,\n        mode,\n        minify,\n        lazy,\n        preserveEnvVars,\n        asyncRoutes,\n        baseUrl,\n        routerRoot,\n        isExporting,\n        reactCompiler: !!reactCompiler,\n        engine: context.engine ?? undefined,\n        bytecode: false,\n        clientBoundaries: [],\n        inlineSourceMap: false,\n        environment,\n        modulesOnly: true,\n        runModule: false,\n      });\n\n      searchParams.set('resolver.clientboundary', String(true));\n\n      const clientReferenceUrl = new URL('http://a');\n\n      // TICKLE: Handshake 1\n      searchParams.set('xRSC', '1');\n\n      clientReferenceUrl.search = searchParams.toString();\n\n      const filePath = file.startsWith('file://') ? fileURLToFilePath(file) : file;\n\n      const relativeFilePath = path.relative(serverRoot, filePath);\n\n      clientReferenceUrl.pathname = relativeFilePath;\n\n      // Ensure url.pathname ends with '.bundle'\n      if (!clientReferenceUrl.pathname.endsWith('.bundle')) {\n        clientReferenceUrl.pathname += '.bundle';\n      }\n\n      // Return relative URLs to help Android fetch from wherever it was loaded from since it doesn't support localhost.\n      const chunkName = clientReferenceUrl.pathname + clientReferenceUrl.search;\n\n      return {\n        id: String(createModuleId(filePath, { platform: context.platform, environment })),\n        chunks: [chunkName],\n      };\n    };\n  }\n\n  const rscRendererCache = new Map<string, typeof import('expo-router/build/rsc/rsc-renderer')>();\n\n  async function getRscRendererAsync(platform: string) {\n    // NOTE(EvanBacon): We memoize this now that there's a persistent server storage cache for Server Actions.\n    if (rscRendererCache.has(platform)) {\n      return rscRendererCache.get(platform)!;\n    }\n\n    // TODO: Extract CSS Modules / Assets from the bundler process\n    const renderer = await ssrLoadModule<typeof import('expo-router/build/rsc/rsc-renderer')>(\n      'expo-router/build/rsc/rsc-renderer',\n      {\n        environment: 'react-server',\n        platform,\n      }\n    );\n\n    rscRendererCache.set(platform, renderer);\n    return renderer;\n  }\n\n  const rscRenderContext = new Map<string, any>();\n\n  function getRscRenderContext(platform: string) {\n    // NOTE(EvanBacon): We memoize this now that there's a persistent server storage cache for Server Actions.\n    if (rscRenderContext.has(platform)) {\n      return rscRenderContext.get(platform)!;\n    }\n\n    const context = {};\n\n    rscRenderContext.set(platform, context);\n    return context;\n  }\n\n  async function renderRscToReadableStream(\n    {\n      input,\n      headers,\n      method,\n      platform,\n      body,\n      engine,\n      contentType,\n      ssrManifest,\n      decodedBody,\n    }: {\n      input: string;\n      headers: Headers;\n      method: 'POST' | 'GET';\n      platform: string;\n      body?: ReadableStream<Uint8Array>;\n      engine?: 'hermes' | null;\n      contentType?: string;\n      ssrManifest?: Map<string, string>;\n      decodedBody?: unknown;\n    },\n    isExporting: boolean | undefined = instanceMetroOptions.isExporting\n  ) {\n    assert(\n      isExporting != null,\n      'The server must be started before calling renderRscToReadableStream.'\n    );\n\n    if (method === 'POST') {\n      assert(body, 'Server request must be provided when method is POST (server actions)');\n    }\n\n    const context = getRscRenderContext(platform);\n\n    context['__expo_requestHeaders'] = headers;\n\n    const { renderRsc } = await getRscRendererAsync(platform);\n\n    return renderRsc(\n      {\n        body,\n        decodedBody,\n        context,\n        config: {},\n        input,\n        contentType,\n      },\n      {\n        isExporting,\n        entries: await getExpoRouterRscEntriesGetterAsync({ platform }),\n        resolveClientEntry: getResolveClientEntry({ platform, engine, ssrManifest }),\n        async loadServerModuleRsc(urlFragment) {\n          const serverRoot = getMetroServerRootMemo(projectRoot);\n\n          debug('[SSR] loadServerModuleRsc:', urlFragment);\n\n          const options = getMetroOptionsFromUrl(urlFragment);\n\n          return ssrLoadModule(path.join(serverRoot, options.mainModuleName), options, {\n            hot: true,\n          });\n        },\n      }\n    );\n  }\n\n  return {\n    // Get the static client boundaries (no dead code elimination allowed) for the production export.\n    getExpoRouterClientReferencesAsync,\n    exportServerActionsAsync,\n\n    async exportRoutesAsync(\n      {\n        platform,\n        ssrManifest,\n      }: {\n        platform: string;\n        ssrManifest: Map<string, string>;\n      },\n      files: ExportAssetMap\n    ) {\n      // TODO: When we add web SSR support, we need to extract CSS Modules / Assets from the bundler process to prevent FLOUC.\n      const { getBuildConfig } = (await getExpoRouterRscEntriesGetterAsync({ platform })).default;\n\n      // Get all the routes to render.\n      const buildConfig = await getBuildConfig!(async () =>\n        // TODO: Rework prefetching code to use Metro runtime.\n        []\n      );\n\n      await Promise.all(\n        Array.from(buildConfig).map(async ({ entries }) => {\n          for (const { input, isStatic } of entries || []) {\n            if (!isStatic) {\n              debug('Skipping static export for route', { input });\n              continue;\n            }\n            const destRscFile = path.join('_flight', platform, encodeInput(input));\n\n            const pipe = await renderRscToReadableStream(\n              {\n                input,\n                method: 'GET',\n                platform,\n                headers: new Headers(),\n                ssrManifest,\n              },\n              true\n            );\n\n            const rsc = await streamToStringAsync(pipe);\n            debug('RSC Payload', { platform, input, rsc });\n\n            files.set(destRscFile, {\n              contents: rsc,\n              targetDomain: 'client',\n              rscId: input,\n            });\n          }\n        })\n      );\n    },\n\n    middleware: createBuiltinAPIRequestHandler(\n      // Match `/_flight/[platform]/[...path]`\n      (req) => {\n        return getFullUrl(req.url).pathname.startsWith(rscPathPrefix);\n      },\n      rscMiddleware\n    ),\n    onReloadRscEvent: () => {\n      // NOTE: We cannot clear the renderer context because it would break the mounted context state.\n\n      // Clear the render context to ensure that the next render is a fresh start.\n      rscRenderContext.clear();\n    },\n  };\n}\n\nconst getFullUrl = (url: string) => {\n  try {\n    return new URL(url);\n  } catch {\n    return new URL(url, 'http://localhost:0');\n  }\n};\n\nexport const fileURLToFilePath = (fileURL: string) => {\n  return url.fileURLToPath(fileURL);\n};\n\nconst encodeInput = (input: string) => {\n  if (input === '') {\n    return 'index.txt';\n  }\n  if (input === 'index') {\n    throw new Error('Input should not be `index`');\n  }\n  if (input.startsWith('/')) {\n    throw new Error('Input should not start with `/`');\n  }\n  if (input.endsWith('/')) {\n    throw new Error('Input should not end with `/`');\n  }\n  return input + '.txt';\n};\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n"],"names":["createServerComponentsMiddleware","fileURLToFilePath","debug","require","getMetroServerRootMemo","memoize","getMetroServerRoot","projectRoot","rscPath","instanceMetroOptions","ssrLoadModule","ssrLoadModuleArtifacts","useClientRouter","createModuleId","routerModule","rscMiddleware","getRscMiddleware","config","baseUrl","onError","console","error","renderRsc","args","headers","getIpAddress","renderRscToReadableStream","Headers","body","logMetroError","IS_METRO_BUNDLE_ERROR_SYMBOL","Response","JSON","stringify","status","isPossiblyUnableToResolveError","sanitizedServerMessage","stripAnsi","message","rscPathPrefix","exportServerActionsAsync","platform","entryPoints","domRoot","files","uniqueEntryPoints","Set","manifest","nestedClientBoundaries","nestedServerBoundaries","processedEntryPoints","processEntryPoint","entryPoint","contents","add","environment","modulesOnly","runModule","reactClientReferences","artifacts","filter","a","type","metadata","map","ref","push","reactServerReferences","src","includes","Error","relativeName","safeName","path","basename","find","filename","outputName","set","targetDomain","wrapBundle","String","processEntryPoints","recursions","uniqueNestedServerBoundaries","value","has","length","clientBoundaries","getExpoRouterClientReferencesAsync","cssModules","startsWith","routerCache","Map","getExpoRouterRscEntriesGetterAsync","get","router","hot","getResolveClientEntry","context","serverRoot","mode","minify","isExporting","routerRoot","asyncRoutes","preserveEnvVars","reactCompiler","lazy","assert","file","isServer","ssrManifest","relativeFilePath","toPosixPath","relative","chunk","id","chunks","searchParams","createBundleUrlSearchParams","mainModuleName","engine","undefined","bytecode","inlineSourceMap","clientReferenceUrl","URL","search","toString","filePath","pathname","endsWith","chunkName","rscRendererCache","getRscRendererAsync","renderer","rscRenderContext","getRscRenderContext","input","method","contentType","decodedBody","entries","resolveClientEntry","loadServerModuleRsc","urlFragment","options","getMetroOptionsFromUrl","join","exportRoutesAsync","getBuildConfig","default","buildConfig","Promise","all","Array","from","isStatic","destRscFile","encodeInput","pipe","rsc","streamToStringAsync","rscId","middleware","createBuiltinAPIRequestHandler","req","getFullUrl","url","onReloadRscEvent","clear","fileURL","fileURLToPath","str","replace"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js b/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js
index 9d28939..3f4e595 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js
@@ -15,6 +15,7 @@ function _export(target, all) {
 }
 _export(exports, {
     logMetroErrorWithStack: ()=>logMetroErrorWithStack,
+    IS_METRO_BUNDLE_ERROR_SYMBOL: ()=>IS_METRO_BUNDLE_ERROR_SYMBOL,
     logMetroError: ()=>logMetroError,
     logMetroErrorAsync: ()=>logMetroErrorAsync,
     getErrorOverlayHtmlAsync: ()=>getErrorOverlayHtmlAsync
@@ -175,11 +176,14 @@ async function logMetroErrorWithStack(projectRoot, { stack , codeFrame , error
         _log.Log.log(_chalk().default.gray(`  ${error.stack}`));
     }
 }
+const IS_METRO_BUNDLE_ERROR_SYMBOL = Symbol("_isMetroBundleError");
+const HAS_LOGGED_SYMBOL = Symbol("_hasLoggedInCLI");
 async function logMetroError(projectRoot, { error  }) {
     var ref, ref1;
-    if (error instanceof _errors.SilentError) {
+    if (error instanceof _errors.SilentError || error[HAS_LOGGED_SYMBOL]) {
         return;
     }
+    error[HAS_LOGGED_SYMBOL] = true;
     const stack = parseErrorStack(projectRoot, error.stack);
     const log = new _logBoxLog.LogBoxLog({
         level: "static",
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js.map b/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js.map
index 7033c5a..f587728 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/metroErrorInterface.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/metroErrorInterface.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { parse, StackFrame } from 'stacktrace-parser';\nimport terminalLink from 'terminal-link';\n\nimport { LogBoxLog } from './log-box/LogBoxLog';\nimport type { CodeFrame, StackFrame as MetroStackFrame } from './log-box/LogBoxSymbolication';\nimport { getStackFormattedLocation } from './log-box/formatProjectFilePath';\nimport { Log } from '../../../log';\nimport { stripAnsi } from '../../../utils/ansi';\nimport { CommandError, SilentError } from '../../../utils/errors';\nimport { createMetroEndpointAsync } from '../getStaticRenderFunctions';\n\nfunction fill(width: number): string {\n  return Array(width).join(' ');\n}\n\nfunction formatPaths(config: { filePath: string | null; line?: number; col?: number }) {\n  const filePath = chalk.reset(config.filePath);\n  return (\n    chalk.dim('(') +\n    filePath +\n    chalk.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`)\n  );\n}\n\nexport async function logMetroErrorWithStack(\n  projectRoot: string,\n  {\n    stack,\n    codeFrame,\n    error,\n  }: {\n    stack: MetroStackFrame[];\n    codeFrame?: CodeFrame;\n    error: Error;\n  }\n) {\n  if (error instanceof SilentError) {\n    return;\n  }\n\n  // process.stdout.write('\\u001b[0m'); // Reset attributes\n  // process.stdout.write('\\u001bc'); // Reset the terminal\n\n  Log.log();\n  Log.log(chalk.red('Metro error: ') + error.message);\n  Log.log();\n\n  if (error instanceof CommandError) {\n    return;\n  }\n\n  if (codeFrame) {\n    const maxWarningLineLength = Math.max(200, process.stdout.columns);\n\n    const lineText = codeFrame.content;\n    const isPreviewTooLong = codeFrame.content\n      .split('\\n')\n      .some((line) => line.length > maxWarningLineLength);\n    const column = codeFrame.location?.column;\n    // When the preview is too long, we skip reading the file and attempting to apply\n    // code coloring, this is because it can get very slow.\n    if (isPreviewTooLong) {\n      let previewLine = '';\n      let cursorLine = '';\n\n      const formattedPath = formatPaths({\n        filePath: codeFrame.fileName,\n        line: codeFrame.location?.row,\n        col: codeFrame.location?.column,\n      });\n      // Create a curtailed preview line like:\n      // `...transition:'fade'},k._updatePropsStack=function(){clearImmediate(k._updateImmediate),k._updateImmediate...`\n      // If there is no text preview or column number, we can't do anything.\n      if (lineText && column != null) {\n        const rangeWindow = Math.round(\n          Math.max(codeFrame.fileName?.length ?? 0, Math.max(80, process.stdout.columns)) / 2\n        );\n        let minBounds = Math.max(0, column - rangeWindow);\n        const maxBounds = Math.min(minBounds + rangeWindow * 2, lineText.length);\n        previewLine = lineText.slice(minBounds, maxBounds);\n\n        // If we splice content off the start, then we should append `...`.\n        // This is unlikely to happen since we limit the activation size.\n        if (minBounds > 0) {\n          // Adjust the min bounds so the cursor is aligned after we add the \"...\"\n          minBounds -= 3;\n          previewLine = chalk.dim('...') + previewLine;\n        }\n        if (maxBounds < lineText.length) {\n          previewLine += chalk.dim('...');\n        }\n\n        // If the column property could be found, then use that to fix the cursor location which is often broken in regex.\n        cursorLine = (column == null ? '' : fill(column) + chalk.reset('^')).slice(minBounds);\n\n        Log.log(\n          [formattedPath, '', previewLine, cursorLine, chalk.dim('(error truncated)')].join('\\n')\n        );\n      }\n    } else {\n      Log.log(codeFrame.content);\n    }\n  }\n\n  if (stack?.length) {\n    const stackProps = stack.map((frame) => {\n      return {\n        title: frame.methodName,\n        subtitle: getStackFormattedLocation(projectRoot, frame),\n        collapse: frame.collapse,\n      };\n    });\n\n    const stackLines: string[] = [];\n\n    stackProps.forEach((frame) => {\n      const position = terminalLink.isSupported\n        ? terminalLink(frame.subtitle, frame.subtitle)\n        : frame.subtitle;\n      let lineItem = chalk.gray(`  ${frame.title} (${position})`);\n      if (frame.collapse) {\n        lineItem = chalk.dim(lineItem);\n      }\n      // Never show the internal module system.\n      if (!frame.subtitle.match(/\\/metro-require\\/require\\.js/)) {\n        stackLines.push(lineItem);\n      }\n    });\n\n    Log.log();\n    Log.log(chalk.bold`Call Stack`);\n    if (!stackLines.length) {\n      Log.log(chalk.gray('  No stack trace available.'));\n    } else {\n      Log.log(stackLines.join('\\n'));\n    }\n  } else {\n    Log.log(chalk.gray(`  ${error.stack}`));\n  }\n}\n\nexport async function logMetroError(projectRoot: string, { error }: { error: Error }) {\n  if (error instanceof SilentError) {\n    return;\n  }\n\n  const stack = parseErrorStack(projectRoot, error.stack);\n\n  const log = new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n\n  await new Promise((res) => log.symbolicate('stack', res));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\nfunction isTransformError(\n  error: any\n): error is { type: 'TransformError'; filename: string; lineNumber: number; column: number } {\n  return error.type === 'TransformError';\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nfunction logFromError({ error, projectRoot }: { error: Error; projectRoot: string }) {\n  // Remap direct Metro Node.js errors to a format that will appear more client-friendly in the logbox UI.\n  let stack: MetroStackFrame[] | undefined;\n  if (isTransformError(error) && error.filename) {\n    // Syntax errors in static rendering.\n    stack = [\n      {\n        file: path.join(projectRoot, error.filename),\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: error.lineNumber,\n        column: error.column,\n      },\n    ];\n  } else if ('originModulePath' in error && typeof error.originModulePath === 'string') {\n    // TODO: Use import stack here when the error is resolution based.\n    stack = [\n      {\n        file: error.originModulePath,\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: 0,\n        column: 0,\n      },\n    ];\n  } else {\n    stack = parseErrorStack(projectRoot, error.stack);\n  }\n\n  return new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function logMetroErrorAsync({\n  error,\n  projectRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', () => res()));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function getErrorOverlayHtmlAsync({\n  error,\n  projectRoot,\n  routerRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n  routerRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', () => res()));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n\n  if ('message' in log && 'content' in log.message && typeof log.message.content === 'string') {\n    log.message.content = stripAnsi(log.message.content)!;\n  }\n\n  const logBoxContext = {\n    selectedLogIndex: 0,\n    isDisabled: false,\n    logs: [log],\n  };\n  const html = `<html><head><style>#root,body,html{height:100%}body{overflow:hidden}#root{display:flex}</style></head><body><div id=\"root\"></div><script id=\"_expo-static-error\" type=\"application/json\">${JSON.stringify(\n    logBoxContext\n  )}</script></body></html>`;\n\n  const errorOverlayEntry = await createMetroEndpointAsync(\n    projectRoot,\n    // Keep the URL relative\n    '',\n    resolveFrom(projectRoot, 'expo-router/_error'),\n    {\n      mode: 'development',\n      platform: 'web',\n      minify: false,\n      optimize: false,\n      usedExports: false,\n      baseUrl: '',\n      routerRoot,\n      isExporting: false,\n      reactCompiler: false,\n    }\n  );\n\n  const htmlWithJs = html.replace('</body>', `<script src=${errorOverlayEntry}></script></body>`);\n  return htmlWithJs;\n}\n\nfunction parseErrorStack(\n  projectRoot: string,\n  stack?: string\n): (StackFrame & { collapse?: boolean })[] {\n  if (stack == null) {\n    return [];\n  }\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  const serverRoot = getMetroServerRoot(projectRoot);\n\n  return parse(stack)\n    .map((frame) => {\n      // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n\n      if (frame.file) {\n        // SSR will sometimes have absolute paths followed by `.bundle?...`, we need to try and make them relative paths and append a dev server URL.\n        if (frame.file.startsWith('/') && frame.file.includes('bundle?') && !canParse(frame.file)) {\n          // Malformed stack file from SSR. Attempt to repair.\n          frame.file = 'https://localhost:8081/' + path.relative(serverRoot, frame.file);\n        }\n      }\n\n      return {\n        ...frame,\n        column: frame.column != null ? frame.column - 1 : null,\n      };\n    })\n    .filter((frame) => frame.file && !frame.file.includes('node_modules'));\n}\n\nfunction canParse(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n"],"names":["logMetroErrorWithStack","logMetroError","logMetroErrorAsync","getErrorOverlayHtmlAsync","fill","width","Array","join","formatPaths","config","filePath","chalk","reset","dim","line","col","filter","Boolean","projectRoot","stack","codeFrame","error","SilentError","Log","log","red","message","CommandError","maxWarningLineLength","Math","max","process","stdout","columns","lineText","content","isPreviewTooLong","split","some","length","column","location","previewLine","cursorLine","formattedPath","fileName","row","rangeWindow","round","minBounds","maxBounds","min","slice","stackProps","map","frame","title","methodName","subtitle","getStackFormattedLocation","collapse","stackLines","forEach","position","terminalLink","isSupported","lineItem","gray","match","push","bold","parseErrorStack","LogBoxLog","level","substitutions","isComponentError","category","componentStack","Promise","res","symbolicate","symbolicated","isTransformError","type","logFromError","filename","file","path","arguments","lineNumber","originModulePath","routerRoot","stripAnsi","logBoxContext","selectedLogIndex","isDisabled","logs","html","JSON","stringify","errorOverlayEntry","createMetroEndpointAsync","resolveFrom","mode","platform","minify","optimize","usedExports","baseUrl","isExporting","reactCompiler","htmlWithJs","replace","isArray","serverRoot","getMetroServerRoot","parse","startsWith","includes","canParse","relative","url","URL"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/metroErrorInterface.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { getMetroServerRoot } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { parse, StackFrame } from 'stacktrace-parser';\nimport terminalLink from 'terminal-link';\n\nimport { LogBoxLog } from './log-box/LogBoxLog';\nimport type { CodeFrame, StackFrame as MetroStackFrame } from './log-box/LogBoxSymbolication';\nimport { getStackFormattedLocation } from './log-box/formatProjectFilePath';\nimport { Log } from '../../../log';\nimport { stripAnsi } from '../../../utils/ansi';\nimport { CommandError, SilentError } from '../../../utils/errors';\nimport { createMetroEndpointAsync } from '../getStaticRenderFunctions';\n\nfunction fill(width: number): string {\n  return Array(width).join(' ');\n}\n\nfunction formatPaths(config: { filePath: string | null; line?: number; col?: number }) {\n  const filePath = chalk.reset(config.filePath);\n  return (\n    chalk.dim('(') +\n    filePath +\n    chalk.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`)\n  );\n}\n\nexport async function logMetroErrorWithStack(\n  projectRoot: string,\n  {\n    stack,\n    codeFrame,\n    error,\n  }: {\n    stack: MetroStackFrame[];\n    codeFrame?: CodeFrame;\n    error: Error;\n  }\n) {\n  if (error instanceof SilentError) {\n    return;\n  }\n\n  // process.stdout.write('\\u001b[0m'); // Reset attributes\n  // process.stdout.write('\\u001bc'); // Reset the terminal\n\n  Log.log();\n  Log.log(chalk.red('Metro error: ') + error.message);\n  Log.log();\n\n  if (error instanceof CommandError) {\n    return;\n  }\n\n  if (codeFrame) {\n    const maxWarningLineLength = Math.max(200, process.stdout.columns);\n\n    const lineText = codeFrame.content;\n    const isPreviewTooLong = codeFrame.content\n      .split('\\n')\n      .some((line) => line.length > maxWarningLineLength);\n    const column = codeFrame.location?.column;\n    // When the preview is too long, we skip reading the file and attempting to apply\n    // code coloring, this is because it can get very slow.\n    if (isPreviewTooLong) {\n      let previewLine = '';\n      let cursorLine = '';\n\n      const formattedPath = formatPaths({\n        filePath: codeFrame.fileName,\n        line: codeFrame.location?.row,\n        col: codeFrame.location?.column,\n      });\n      // Create a curtailed preview line like:\n      // `...transition:'fade'},k._updatePropsStack=function(){clearImmediate(k._updateImmediate),k._updateImmediate...`\n      // If there is no text preview or column number, we can't do anything.\n      if (lineText && column != null) {\n        const rangeWindow = Math.round(\n          Math.max(codeFrame.fileName?.length ?? 0, Math.max(80, process.stdout.columns)) / 2\n        );\n        let minBounds = Math.max(0, column - rangeWindow);\n        const maxBounds = Math.min(minBounds + rangeWindow * 2, lineText.length);\n        previewLine = lineText.slice(minBounds, maxBounds);\n\n        // If we splice content off the start, then we should append `...`.\n        // This is unlikely to happen since we limit the activation size.\n        if (minBounds > 0) {\n          // Adjust the min bounds so the cursor is aligned after we add the \"...\"\n          minBounds -= 3;\n          previewLine = chalk.dim('...') + previewLine;\n        }\n        if (maxBounds < lineText.length) {\n          previewLine += chalk.dim('...');\n        }\n\n        // If the column property could be found, then use that to fix the cursor location which is often broken in regex.\n        cursorLine = (column == null ? '' : fill(column) + chalk.reset('^')).slice(minBounds);\n\n        Log.log(\n          [formattedPath, '', previewLine, cursorLine, chalk.dim('(error truncated)')].join('\\n')\n        );\n      }\n    } else {\n      Log.log(codeFrame.content);\n    }\n  }\n\n  if (stack?.length) {\n    const stackProps = stack.map((frame) => {\n      return {\n        title: frame.methodName,\n        subtitle: getStackFormattedLocation(projectRoot, frame),\n        collapse: frame.collapse,\n      };\n    });\n\n    const stackLines: string[] = [];\n\n    stackProps.forEach((frame) => {\n      const position = terminalLink.isSupported\n        ? terminalLink(frame.subtitle, frame.subtitle)\n        : frame.subtitle;\n      let lineItem = chalk.gray(`  ${frame.title} (${position})`);\n      if (frame.collapse) {\n        lineItem = chalk.dim(lineItem);\n      }\n      // Never show the internal module system.\n      if (!frame.subtitle.match(/\\/metro-require\\/require\\.js/)) {\n        stackLines.push(lineItem);\n      }\n    });\n\n    Log.log();\n    Log.log(chalk.bold`Call Stack`);\n    if (!stackLines.length) {\n      Log.log(chalk.gray('  No stack trace available.'));\n    } else {\n      Log.log(stackLines.join('\\n'));\n    }\n  } else {\n    Log.log(chalk.gray(`  ${error.stack}`));\n  }\n}\n\nexport const IS_METRO_BUNDLE_ERROR_SYMBOL = Symbol('_isMetroBundleError');\nconst HAS_LOGGED_SYMBOL = Symbol('_hasLoggedInCLI');\n\nexport async function logMetroError(\n  projectRoot: string,\n  {\n    error,\n  }: {\n    error: Error & {\n      [HAS_LOGGED_SYMBOL]?: boolean;\n    };\n  }\n) {\n  if (error instanceof SilentError || error[HAS_LOGGED_SYMBOL]) {\n    return;\n  }\n  error[HAS_LOGGED_SYMBOL] = true;\n\n  const stack = parseErrorStack(projectRoot, error.stack);\n\n  const log = new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n\n  await new Promise((res) => log.symbolicate('stack', res));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\nfunction isTransformError(\n  error: any\n): error is { type: 'TransformError'; filename: string; lineNumber: number; column: number } {\n  return error.type === 'TransformError';\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nfunction logFromError({ error, projectRoot }: { error: Error; projectRoot: string }) {\n  // Remap direct Metro Node.js errors to a format that will appear more client-friendly in the logbox UI.\n  let stack: MetroStackFrame[] | undefined;\n  if (isTransformError(error) && error.filename) {\n    // Syntax errors in static rendering.\n    stack = [\n      {\n        file: path.join(projectRoot, error.filename),\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: error.lineNumber,\n        column: error.column,\n      },\n    ];\n  } else if ('originModulePath' in error && typeof error.originModulePath === 'string') {\n    // TODO: Use import stack here when the error is resolution based.\n    stack = [\n      {\n        file: error.originModulePath,\n        methodName: '<unknown>',\n        arguments: [],\n        // TODO: Import stack\n        lineNumber: 0,\n        column: 0,\n      },\n    ];\n  } else {\n    stack = parseErrorStack(projectRoot, error.stack);\n  }\n\n  return new LogBoxLog({\n    level: 'static',\n    message: {\n      content: error.message,\n      substitutions: [],\n    },\n    isComponentError: false,\n    stack,\n    category: 'static',\n    componentStack: [],\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function logMetroErrorAsync({\n  error,\n  projectRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', () => res()));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n}\n\n/** @returns the html required to render the static metro error as an SPA. */\nexport async function getErrorOverlayHtmlAsync({\n  error,\n  projectRoot,\n  routerRoot,\n}: {\n  error: Error;\n  projectRoot: string;\n  routerRoot: string;\n}) {\n  const log = logFromError({ projectRoot, error });\n\n  await new Promise<void>((res) => log.symbolicate('stack', () => res()));\n\n  logMetroErrorWithStack(projectRoot, {\n    stack: log.symbolicated?.stack?.stack ?? [],\n    codeFrame: log.codeFrame,\n    error,\n  });\n\n  if ('message' in log && 'content' in log.message && typeof log.message.content === 'string') {\n    log.message.content = stripAnsi(log.message.content)!;\n  }\n\n  const logBoxContext = {\n    selectedLogIndex: 0,\n    isDisabled: false,\n    logs: [log],\n  };\n  const html = `<html><head><style>#root,body,html{height:100%}body{overflow:hidden}#root{display:flex}</style></head><body><div id=\"root\"></div><script id=\"_expo-static-error\" type=\"application/json\">${JSON.stringify(\n    logBoxContext\n  )}</script></body></html>`;\n\n  const errorOverlayEntry = await createMetroEndpointAsync(\n    projectRoot,\n    // Keep the URL relative\n    '',\n    resolveFrom(projectRoot, 'expo-router/_error'),\n    {\n      mode: 'development',\n      platform: 'web',\n      minify: false,\n      optimize: false,\n      usedExports: false,\n      baseUrl: '',\n      routerRoot,\n      isExporting: false,\n      reactCompiler: false,\n    }\n  );\n\n  const htmlWithJs = html.replace('</body>', `<script src=${errorOverlayEntry}></script></body>`);\n  return htmlWithJs;\n}\n\nfunction parseErrorStack(\n  projectRoot: string,\n  stack?: string\n): (StackFrame & { collapse?: boolean })[] {\n  if (stack == null) {\n    return [];\n  }\n  if (Array.isArray(stack)) {\n    return stack;\n  }\n\n  const serverRoot = getMetroServerRoot(projectRoot);\n\n  return parse(stack)\n    .map((frame) => {\n      // frame.file will mostly look like `http://localhost:8081/index.bundle?platform=web&dev=true&hot=false`\n\n      if (frame.file) {\n        // SSR will sometimes have absolute paths followed by `.bundle?...`, we need to try and make them relative paths and append a dev server URL.\n        if (frame.file.startsWith('/') && frame.file.includes('bundle?') && !canParse(frame.file)) {\n          // Malformed stack file from SSR. Attempt to repair.\n          frame.file = 'https://localhost:8081/' + path.relative(serverRoot, frame.file);\n        }\n      }\n\n      return {\n        ...frame,\n        column: frame.column != null ? frame.column - 1 : null,\n      };\n    })\n    .filter((frame) => frame.file && !frame.file.includes('node_modules'));\n}\n\nfunction canParse(url: string): boolean {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n"],"names":["logMetroErrorWithStack","IS_METRO_BUNDLE_ERROR_SYMBOL","logMetroError","logMetroErrorAsync","getErrorOverlayHtmlAsync","fill","width","Array","join","formatPaths","config","filePath","chalk","reset","dim","line","col","filter","Boolean","projectRoot","stack","codeFrame","error","SilentError","Log","log","red","message","CommandError","maxWarningLineLength","Math","max","process","stdout","columns","lineText","content","isPreviewTooLong","split","some","length","column","location","previewLine","cursorLine","formattedPath","fileName","row","rangeWindow","round","minBounds","maxBounds","min","slice","stackProps","map","frame","title","methodName","subtitle","getStackFormattedLocation","collapse","stackLines","forEach","position","terminalLink","isSupported","lineItem","gray","match","push","bold","Symbol","HAS_LOGGED_SYMBOL","parseErrorStack","LogBoxLog","level","substitutions","isComponentError","category","componentStack","Promise","res","symbolicate","symbolicated","isTransformError","type","logFromError","filename","file","path","arguments","lineNumber","originModulePath","routerRoot","stripAnsi","logBoxContext","selectedLogIndex","isDisabled","logs","html","JSON","stringify","errorOverlayEntry","createMetroEndpointAsync","resolveFrom","mode","platform","minify","optimize","usedExports","baseUrl","isExporting","reactCompiler","htmlWithJs","replace","isArray","serverRoot","getMetroServerRoot","parse","startsWith","includes","canParse","relative","url","URL"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
index 70f9513..9f5b9a5 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js
@@ -611,9 +611,10 @@ function withExtendedResolver(config, { tsconfig , isTsconfigPathsEnabled , isFa
             if (((ref2 = context.customResolverOptions) == null ? void 0 : ref2.environment) === "react-server") {
                 context.unstable_conditionNames = [
                     "node",
+                    "import",
                     "require",
                     "react-server",
-                    "workerd"
+                    "workerd", 
                 ];
             } else {
                 context.unstable_conditionNames = [
diff --git a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
index 7a3edf4..e777794 100644
--- a/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/metro/withMetroMultiPlatform.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../src/start/server/metro/withMetroMultiPlatform.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig, Platform } from '@expo/config';\nimport fs from 'fs';\nimport Bundler from 'metro/src/Bundler';\nimport { ConfigT } from 'metro-config';\nimport { Resolution, ResolutionContext, CustomResolutionContext } from 'metro-resolver';\nimport * as metroResolver from 'metro-resolver';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { createFastResolver, FailedToResolvePathError } from './createExpoMetroResolver';\nimport { isNodeExternal, shouldCreateVirtualCanary, shouldCreateVirtualShim } from './externals';\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { getMetroBundlerWithVirtualModules } from './metroVirtualModules';\nimport {\n  withMetroErrorReportingResolver,\n  withMetroMutatedResolverContext,\n  withMetroResolvers,\n} from './withMetroResolvers';\nimport { Log } from '../../../log';\nimport { FileNotifier } from '../../../utils/FileNotifier';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { loadTsConfigPathsAsync, TsConfigPaths } from '../../../utils/tsconfig/loadTsConfigPaths';\nimport { resolveWithTsConfigPaths } from '../../../utils/tsconfig/resolveWithTsConfigPaths';\nimport { isServerEnvironment } from '../middleware/metroOptions';\nimport { PlatformBundlers } from '../platformBundlers';\n\ntype Mutable<T> = { -readonly [K in keyof T]: T[K] };\n\nconst ASSET_REGISTRY_SRC = `const assets=[];module.exports={registerAsset:s=>assets.push(s),getAssetByID:s=>assets[s-1]};`;\n\nconst debug = require('debug')('expo:start:server:metro:multi-platform') as typeof console.log;\n\nfunction withWebPolyfills(\n  config: ConfigT,\n  {\n    getMetroBundler,\n  }: {\n    getMetroBundler: () => Bundler;\n  }\n): ConfigT {\n  const originalGetPolyfills = config.serializer.getPolyfills\n    ? config.serializer.getPolyfills.bind(config.serializer)\n    : () => [];\n\n  const getPolyfills = (ctx: { platform?: string | null }): readonly string[] => {\n    const virtualEnvVarId = `\\0polyfill:environment-variables`;\n\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualEnvVarId,\n      (() => {\n        return `//`;\n      })()\n    );\n\n    const virtualModuleId = `\\0polyfill:external-require`;\n\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualModuleId,\n      (() => {\n        if (ctx.platform === 'web') {\n          return `global.$$require_external = typeof window === \"undefined\" ? require : () => null;`;\n        } else {\n          // Wrap in try/catch to support Android.\n          return 'try { global.$$require_external = typeof expo === \"undefined\" ? require : (moduleId) => { throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);} } catch { global.$$require_external = (moduleId) => { throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);} }';\n        }\n      })()\n    );\n\n    if (ctx.platform === 'web') {\n      return [\n        virtualModuleId,\n        virtualEnvVarId,\n        // Ensure that the error-guard polyfill is included in the web polyfills to\n        // make metro-runtime work correctly.\n        // TODO: This module is pretty big for a function that simply re-throws an error that doesn't need to be caught.\n        require.resolve('@react-native/js-polyfills/error-guard'),\n      ];\n    }\n\n    // Generally uses `rn-get-polyfills`\n    const polyfills = originalGetPolyfills(ctx);\n    return [...polyfills, virtualModuleId, virtualEnvVarId];\n  };\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      getPolyfills,\n    },\n  };\n}\n\nfunction normalizeSlashes(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n\nexport function getNodejsExtensions(srcExts: readonly string[]): string[] {\n  const mjsExts = srcExts.filter((ext) => /mjs$/.test(ext));\n  const nodejsSourceExtensions = srcExts.filter((ext) => !/mjs$/.test(ext));\n  // find index of last `*.js` extension\n  const jsIndex = nodejsSourceExtensions.reduce((index, ext, i) => {\n    return /jsx?$/.test(ext) ? i : index;\n  }, -1);\n\n  // insert `*.mjs` extensions after `*.js` extensions\n  nodejsSourceExtensions.splice(jsIndex + 1, 0, ...mjsExts);\n\n  return nodejsSourceExtensions;\n}\n\n/**\n * Apply custom resolvers to do the following:\n * - Disable `.native.js` extensions on web.\n * - Alias `react-native` to `react-native-web` on web.\n * - Redirect `react-native-web/dist/modules/AssetRegistry/index.js` to `@react-native/assets/registry.js` on web.\n * - Add support for `tsconfig.json`/`jsconfig.json` aliases via `compilerOptions.paths`.\n * - Alias react-native renderer code to a vendored React canary build on native.\n */\nexport function withExtendedResolver(\n  config: ConfigT,\n  {\n    tsconfig,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isExporting,\n    isReactCanaryEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  }: {\n    tsconfig: TsConfigPaths | null;\n    isTsconfigPathsEnabled?: boolean;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n    isReactCanaryEnabled?: boolean;\n    isReactServerComponentsEnabled?: boolean;\n    getMetroBundler: () => Bundler;\n  }\n) {\n  if (isReactServerComponentsEnabled) {\n    Log.warn(\n      `Experimental React Server Components is enabled. Production exports are not supported yet.`\n    );\n  }\n  if (isFastResolverEnabled) {\n    Log.warn(`Experimental module resolution is enabled.`);\n  }\n\n  if (isReactCanaryEnabled) {\n    Log.warn(`Experimental React Canary version is enabled.`);\n  }\n\n  const defaultResolver = metroResolver.resolve;\n  const resolver = isFastResolverEnabled\n    ? createFastResolver({\n        preserveSymlinks: true,\n        blockList: !config.resolver?.blockList\n          ? []\n          : Array.isArray(config.resolver?.blockList)\n            ? config.resolver?.blockList\n            : [config.resolver?.blockList],\n      })\n    : defaultResolver;\n\n  const aliases: { [key: string]: Record<string, string> } = {\n    web: {\n      'react-native': 'react-native-web',\n      'react-native/index': 'react-native-web',\n      'react-native/Libraries/Image/resolveAssetSource': 'expo-asset/build/resolveAssetSource',\n    },\n  };\n\n  let _universalAliases: [RegExp, string][] | null;\n\n  function getUniversalAliases() {\n    if (_universalAliases) {\n      return _universalAliases;\n    }\n\n    _universalAliases = [];\n\n    // This package is currently always installed as it is included in the `expo` package.\n    if (resolveFrom.silent(config.projectRoot, '@expo/vector-icons')) {\n      debug('Enabling alias: react-native-vector-icons -> @expo/vector-icons');\n      _universalAliases.push([/^react-native-vector-icons(\\/.*)?/, '@expo/vector-icons$1']);\n    }\n    if (isReactServerComponentsEnabled) {\n      if (resolveFrom.silent(config.projectRoot, 'expo-router/rsc')) {\n        debug('Enabling bridge alias: expo-router -> expo-router/rsc');\n        _universalAliases.push([/^expo-router$/, 'expo-router/rsc']);\n        // Bridge the internal entry point which is a standalone import to ensure package.json resolution works as expected.\n        _universalAliases.push([/^expo-router\\/entry-classic$/, 'expo-router/rsc/entry']);\n      }\n    }\n    return _universalAliases;\n  }\n\n  const preferredMainFields: { [key: string]: string[] } = {\n    // Defaults from Expo Webpack. Most packages using `react-native` don't support web\n    // in the `react-native` field, so we should prefer the `browser` field.\n    // https://github.com/expo/router/issues/37\n    web: ['browser', 'module', 'main'],\n  };\n\n  let tsConfigResolve =\n    isTsconfigPathsEnabled && (tsconfig?.paths || tsconfig?.baseUrl != null)\n      ? resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n          paths: tsconfig.paths ?? {},\n          baseUrl: tsconfig.baseUrl ?? config.projectRoot,\n          hasBaseUrl: !!tsconfig.baseUrl,\n        })\n      : null;\n\n  // TODO: Move this to be a transform key for invalidation.\n  if (!isExporting && isInteractive()) {\n    if (isTsconfigPathsEnabled) {\n      // TODO: We should track all the files that used imports and invalidate them\n      // currently the user will need to save all the files that use imports to\n      // use the new aliases.\n      const configWatcher = new FileNotifier(config.projectRoot, [\n        './tsconfig.json',\n        './jsconfig.json',\n      ]);\n      configWatcher.startObserving(() => {\n        debug('Reloading tsconfig.json');\n        loadTsConfigPathsAsync(config.projectRoot).then((tsConfigPaths) => {\n          if (tsConfigPaths?.paths && !!Object.keys(tsConfigPaths.paths).length) {\n            debug('Enabling tsconfig.json paths support');\n            tsConfigResolve = resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n              paths: tsConfigPaths.paths ?? {},\n              baseUrl: tsConfigPaths.baseUrl ?? config.projectRoot,\n              hasBaseUrl: !!tsConfigPaths.baseUrl,\n            });\n          } else {\n            debug('Disabling tsconfig.json paths support');\n            tsConfigResolve = null;\n          }\n        });\n      });\n\n      // TODO: This probably prevents the process from exiting.\n      installExitHooks(() => {\n        configWatcher.stopObserving();\n      });\n    } else {\n      debug('Skipping tsconfig.json paths support');\n    }\n  }\n\n  let nodejsSourceExtensions: string[] | null = null;\n\n  function getStrictResolver(\n    { resolveRequest, ...context }: ResolutionContext,\n    platform: string | null\n  ) {\n    return function doResolve(moduleName: string): Resolution {\n      return resolver(context, moduleName, platform);\n    };\n  }\n\n  function getOptionalResolver(context: ResolutionContext, platform: string | null) {\n    const doResolve = getStrictResolver(context, platform);\n    return function optionalResolve(moduleName: string): Resolution | null {\n      try {\n        return doResolve(moduleName);\n      } catch (error) {\n        // If the error is directly related to a resolver not being able to resolve a module, then\n        // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n        const isResolutionError =\n          isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n        if (!isResolutionError) {\n          throw error;\n        }\n      }\n      return null;\n    };\n  }\n\n  // TODO: This is a hack to get resolveWeak working.\n  const idFactory = (config.serializer?.createModuleIdFactory?.() ??\n    ((id: number | string, context: { platform: string; environment?: string }): number | string =>\n      id)) as (\n    id: number | string,\n    context: { platform: string; environment?: string }\n  ) => number | string;\n\n  const getAssetRegistryModule = () => {\n    const virtualModuleId = `\\0polyfill:assets-registry`;\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualModuleId,\n      ASSET_REGISTRY_SRC\n    );\n    return {\n      type: 'sourceFile',\n      filePath: virtualModuleId,\n    } as const;\n  };\n\n  // If Node.js pass-through, then remap to a module like `module.exports = $$require_external(<module>)`.\n  // If module should be shimmed, remap to an empty module.\n  const externals: {\n    match: (context: ResolutionContext, moduleName: string, platform: string | null) => boolean;\n    replace: 'empty' | 'node' | 'weak';\n  }[] = [\n    {\n      match: (context: ResolutionContext, moduleName: string) => {\n        if (\n          // Disable internal externals when exporting for production.\n          context.customResolverOptions.exporting ||\n          // These externals are only for Node.js environments.\n          !isServerEnvironment(context.customResolverOptions?.environment)\n        ) {\n          return false;\n        }\n\n        if (context.customResolverOptions?.environment === 'react-server') {\n          // Ensure these non-react-server modules are excluded when bundling for React Server Components in development.\n          return /^(source-map-support(\\/.*)?|@babel\\/runtime\\/.+|debug|metro-runtime\\/src\\/modules\\/HMRClient|metro|acorn-loose|acorn|chalk|ws|ansi-styles|supports-color|color-convert|has-flag|utf-8-validate|color-name|react-refresh\\/runtime|@remix-run\\/node\\/.+)$/.test(\n            moduleName\n          );\n        }\n\n        // TODO: Windows doesn't support externals somehow.\n        if (process.platform === 'win32') {\n          return /^(source-map-support(\\/.*)?)$/.test(moduleName);\n        }\n\n        // Extern these modules in standard Node.js environments in development to prevent API routes side-effects\n        // from leaking into the dev server process.\n        return /^(source-map-support(\\/.*)?|react|react-native-helmet-async|@radix-ui\\/.+|@babel\\/runtime\\/.+|react-dom(\\/.+)?|debug|acorn-loose|acorn|css-in-js-utils\\/lib\\/.+|hyphenate-style-name|color|color-string|color-convert|color-name|fontfaceobserver|fast-deep-equal|query-string|escape-string-regexp|invariant|postcss-value-parser|memoize-one|nullthrows|strict-uri-encode|decode-uri-component|split-on-first|filter-obj|warn-once|simple-swizzle|is-arrayish|inline-style-prefixer\\/.+)$/.test(\n          moduleName\n        );\n      },\n      replace: 'node',\n    },\n    // Externals to speed up async split chunks by extern-ing common packages that appear in the root client chunk.\n    {\n      match: (context: ResolutionContext, moduleName: string, platform: string | null) => {\n        if (\n          // Disable internal externals when exporting for production.\n          context.customResolverOptions.exporting ||\n          // These externals are only for client environments.\n          isServerEnvironment(context.customResolverOptions?.environment) ||\n          // Only enable for client boundaries\n          !context.customResolverOptions.clientboundary\n        ) {\n          return false;\n        }\n\n        // We don't support this in the resolver at the moment.\n        if (moduleName.endsWith('/package.json')) {\n          return false;\n        }\n\n        const isExternal = // Extern these modules in standard Node.js environments.\n          /^(deprecated-react-native-prop-types|react|react\\/jsx-dev-runtime|scheduler|react-native|react-dom(\\/.+)?|metro-runtime(\\/.+)?)$/.test(\n            moduleName\n          ) ||\n          // TODO: Add more\n          /^@babel\\/runtime\\/helpers\\/(wrapNativeSuper)$/.test(moduleName);\n\n        return isExternal;\n      },\n      replace: 'weak',\n    },\n  ];\n\n  const metroConfigWithCustomResolver = withMetroResolvers(config, [\n    // Mock out production react imports in development.\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // This resolution is dev-only to prevent bundling the production React packages in development.\n      if (!context.dev) return null;\n\n      if (\n        // Match react-native renderers.\n        (platform !== 'web' &&\n          context.originModulePath.match(/[\\\\/]node_modules[\\\\/]react-native[\\\\/]/) &&\n          moduleName.match(/([\\\\/]ReactFabric|ReactNativeRenderer)-prod/)) ||\n        // Match react production imports.\n        (moduleName.match(/\\.production(\\.min)?\\.js$/) &&\n          // Match if the import originated from a react package.\n          context.originModulePath.match(/[\\\\/]node_modules[\\\\/](react[-\\\\/]|scheduler[\\\\/])/))\n      ) {\n        debug(`Skipping production module: ${moduleName}`);\n        // /Users/path/to/expo/node_modules/react/index.js ./cjs/react.production.min.js\n        // /Users/path/to/expo/node_modules/react/jsx-dev-runtime.js ./cjs/react-jsx-dev-runtime.production.min.js\n        // /Users/path/to/expo/node_modules/react-is/index.js ./cjs/react-is.production.min.js\n        // /Users/path/to/expo/node_modules/react-refresh/runtime.js ./cjs/react-refresh-runtime.production.min.js\n        // /Users/path/to/expo/node_modules/react-native/node_modules/scheduler/index.native.js ./cjs/scheduler.native.production.min.js\n        // /Users/path/to/expo/node_modules/react-native/node_modules/react-is/index.js ./cjs/react-is.production.min.js\n        return {\n          type: 'empty',\n        };\n      }\n      return null;\n    },\n    // tsconfig paths\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      return (\n        tsConfigResolve?.(\n          {\n            originModulePath: context.originModulePath,\n            moduleName,\n          },\n          getOptionalResolver(context, platform)\n        ) ?? null\n      );\n    },\n\n    // Node.js externals support\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      const isServer =\n        context.customResolverOptions?.environment === 'node' ||\n        context.customResolverOptions?.environment === 'react-server';\n\n      const moduleId = isNodeExternal(moduleName);\n      if (!moduleId) {\n        return null;\n      }\n\n      if (\n        // In browser runtimes, we want to either resolve a local node module by the same name, or shim the module to\n        // prevent crashing when Node.js built-ins are imported.\n        !isServer\n      ) {\n        // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)\n        // then we can mock the file to use an empty module.\n        const result = getOptionalResolver(context, platform)(moduleName);\n\n        if (!result && platform !== 'web') {\n          // Preserve previous behavior where native throws an error on node.js internals.\n          return null;\n        }\n\n        return (\n          result ?? {\n            // In this case, mock the file to use an empty module.\n            type: 'empty',\n          }\n        );\n      }\n      const contents = `module.exports=$$require_external('node:${moduleId}');`;\n      debug(`Virtualizing Node.js \"${moduleId}\"`);\n      const virtualModuleId = `\\0node:${moduleId}`;\n      getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n        virtualModuleId,\n        contents\n      );\n      return {\n        type: 'sourceFile',\n        filePath: virtualModuleId,\n      };\n    },\n\n    // Custom externals support\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // We don't support this in the resolver at the moment.\n      if (moduleName.endsWith('/package.json')) {\n        return null;\n      }\n      const environment = context.customResolverOptions?.environment;\n\n      const strictResolve = getStrictResolver(context, platform);\n\n      for (const external of externals) {\n        if (external.match(context, moduleName, platform)) {\n          if (external.replace === 'empty') {\n            debug(`Redirecting external \"${moduleName}\" to \"${external.replace}\"`);\n            return {\n              type: external.replace,\n            };\n          } else if (external.replace === 'weak') {\n            // TODO: Make this use require.resolveWeak again. Previously this was just resolving to the same path.\n            const realModule = strictResolve(moduleName);\n            const realPath = realModule.type === 'sourceFile' ? realModule.filePath : moduleName;\n            const opaqueId = idFactory(realPath, {\n              platform: platform!,\n              environment,\n            });\n\n            const contents =\n              typeof opaqueId === 'number'\n                ? `module.exports=/*${moduleName}*/__r(${opaqueId})`\n                : `module.exports=/*${moduleName}*/__r(${JSON.stringify(opaqueId)})`;\n            // const contents = `module.exports=/*${moduleName}*/__r(require.resolveWeak('${moduleName}'))`;\n            // const generatedModuleId = fastHashMemoized(contents);\n            const virtualModuleId = `\\0weak:${opaqueId}`;\n            debug('Virtualizing module:', moduleName, '->', virtualModuleId);\n            getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n              virtualModuleId,\n              contents\n            );\n            return {\n              type: 'sourceFile',\n              filePath: virtualModuleId,\n            };\n          } else if (external.replace === 'node') {\n            const contents = `module.exports=$$require_external('${moduleName}')`;\n            const virtualModuleId = `\\0node:${moduleName}`;\n            debug('Virtualizing Node.js (custom):', moduleName, '->', virtualModuleId);\n            getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n              virtualModuleId,\n              contents\n            );\n            return {\n              type: 'sourceFile',\n              filePath: virtualModuleId,\n            };\n          } else {\n            throw new CommandError(\n              `Invalid external alias type: \"${external.replace}\" for module \"${moduleName}\" (platform: ${platform}, originModulePath: ${context.originModulePath})`\n            );\n          }\n        }\n      }\n      return null;\n    },\n\n    // Basic moduleId aliases\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // Conditionally remap `react-native` to `react-native-web` on web in\n      // a way that doesn't require Babel to resolve the alias.\n      if (platform && platform in aliases && aliases[platform][moduleName]) {\n        const redirectedModuleName = aliases[platform][moduleName];\n        return getStrictResolver(context, platform)(redirectedModuleName);\n      }\n\n      for (const [matcher, alias] of getUniversalAliases()) {\n        const match = moduleName.match(matcher);\n        if (match) {\n          const aliasedModule = alias.replace(\n            /\\$(\\d+)/g,\n            (_, index) => match[parseInt(index, 10)] ?? ''\n          );\n          const doResolve = getStrictResolver(context, platform);\n          debug(`Alias \"${moduleName}\" to \"${aliasedModule}\"`);\n          return doResolve(aliasedModule);\n        }\n      }\n\n      return null;\n    },\n\n    // Polyfill for asset registry\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      if (/^@react-native\\/assets-registry\\/registry(\\.js)?$/.test(moduleName)) {\n        return getAssetRegistryModule();\n      }\n\n      if (\n        platform === 'web' &&\n        context.originModulePath.match(/node_modules[\\\\/]react-native-web[\\\\/]/) &&\n        moduleName.includes('/modules/AssetRegistry')\n      ) {\n        return getAssetRegistryModule();\n      }\n\n      return null;\n    },\n\n    // TODO: Reduce these as much as possible in the future.\n    // Complex post-resolution rewrites.\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      const doResolve = getStrictResolver(context, platform);\n\n      const result = doResolve(moduleName);\n\n      if (result.type !== 'sourceFile') {\n        return result;\n      }\n\n      if (platform === 'web') {\n        if (result.filePath.includes('node_modules')) {\n          // // Disallow importing confusing native modules on web\n          if (moduleName.includes('react-native/Libraries/Utilities/codegenNativeCommands')) {\n            throw new FailedToResolvePathError(\n              `Importing native-only module \"${moduleName}\" on web from: ${context.originModulePath}`\n            );\n          }\n\n          // Replace with static shims\n\n          const normalName = normalizeSlashes(result.filePath)\n            // Drop everything up until the `node_modules` folder.\n            .replace(/.*node_modules\\//, '');\n\n          const shimFile = shouldCreateVirtualShim(normalName);\n          if (shimFile) {\n            const virtualId = `\\0shim:${normalName}`;\n            const bundler = getMetroBundlerWithVirtualModules(getMetroBundler());\n            if (!bundler.hasVirtualModule(virtualId)) {\n              bundler.setVirtualModule(virtualId, fs.readFileSync(shimFile, 'utf8'));\n            }\n            debug(`Redirecting module \"${result.filePath}\" to shim`);\n\n            return {\n              ...result,\n              filePath: virtualId,\n            };\n          }\n        }\n      } else {\n        const isServer =\n          context.customResolverOptions?.environment === 'node' ||\n          context.customResolverOptions?.environment === 'react-server';\n\n        // react-native/Libraries/Core/InitializeCore\n        const normal = normalizeSlashes(result.filePath);\n\n        // Shim out React Native native runtime globals in server mode for native.\n        if (isServer) {\n          if (normal.endsWith('react-native/Libraries/Core/InitializeCore.js')) {\n            console.log('Shimming out InitializeCore for React Native in native SSR bundle');\n            return {\n              type: 'empty',\n            };\n          }\n        }\n\n        // When server components are enabled, redirect React Native's renderer to the canary build\n        // this will enable the use hook and other requisite features from React 19.\n        if (isReactCanaryEnabled && result.filePath.includes('node_modules')) {\n          const normalName = normalizeSlashes(result.filePath)\n            // Drop everything up until the `node_modules` folder.\n            .replace(/.*node_modules\\//, '');\n\n          const canaryFile = shouldCreateVirtualCanary(normalName);\n          if (canaryFile) {\n            debug(`Redirecting React Native module \"${result.filePath}\" to canary build`);\n            return {\n              ...result,\n              filePath: canaryFile,\n            };\n          }\n        }\n      }\n\n      return result;\n    },\n  ]);\n\n  // Ensure we mutate the resolution context to include the custom resolver options for server and web.\n  const metroConfigWithCustomContext = withMetroMutatedResolverContext(\n    metroConfigWithCustomResolver,\n    (\n      immutableContext: CustomResolutionContext,\n      moduleName: string,\n      platform: string | null\n    ): CustomResolutionContext => {\n      const context: Mutable<CustomResolutionContext> = {\n        ...immutableContext,\n        preferNativePlatform: platform !== 'web',\n      };\n\n      // TODO: Remove this when we have React 19 in the expo/expo monorepo.\n      if (\n        isReactCanaryEnabled &&\n        // Change the node modules path for react and react-dom to use the vendor in Expo CLI.\n        /^(react|react\\/.*|react-dom|react-dom\\/.*)$/.test(moduleName)\n      ) {\n        context.nodeModulesPaths = [\n          path.join(require.resolve('@expo/cli/package.json'), '../static/canary-full'),\n        ];\n      }\n\n      if (isServerEnvironment(context.customResolverOptions?.environment)) {\n        // Adjust nodejs source extensions to sort mjs after js, including platform variants.\n        if (nodejsSourceExtensions === null) {\n          nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);\n        }\n        context.sourceExts = nodejsSourceExtensions;\n\n        context.unstable_enablePackageExports = true;\n        context.unstable_conditionsByPlatform = {};\n\n        const isReactServerComponents =\n          context.customResolverOptions?.environment === 'react-server';\n\n        if (isReactServerComponents) {\n          // NOTE: Align the behavior across server and client. This is a breaking change so we'll just roll it out with React Server Components.\n          // This ensures that react-server and client code both resolve `module` and `main` in the same order.\n          if (platform === 'web') {\n            // Node.js runtimes should only be importing main at the moment.\n            // This is a temporary fix until we can support the package.json exports.\n            context.mainFields = ['module', 'main'];\n          } else {\n            // In Node.js + native, use the standard main fields.\n            context.mainFields = ['react-native', 'module', 'main'];\n          }\n        } else {\n          if (platform === 'web') {\n            // Node.js runtimes should only be importing main at the moment.\n            // This is a temporary fix until we can support the package.json exports.\n            context.mainFields = ['main', 'module'];\n          } else {\n            // In Node.js + native, use the standard main fields.\n            context.mainFields = ['react-native', 'main', 'module'];\n          }\n        }\n\n        // Enable react-server import conditions.\n        if (context.customResolverOptions?.environment === 'react-server') {\n          context.unstable_conditionNames = ['node', 'require', 'react-server', 'workerd'];\n        } else {\n          context.unstable_conditionNames = ['node', 'require'];\n        }\n      } else {\n        // Non-server changes\n\n        if (!env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE && platform && platform in preferredMainFields) {\n          context.mainFields = preferredMainFields[platform];\n        }\n      }\n\n      return context;\n    }\n  );\n\n  return withMetroErrorReportingResolver(metroConfigWithCustomContext);\n}\n\n/** @returns `true` if the incoming resolution should be swapped. */\nexport function shouldAliasModule(\n  input: {\n    platform: string | null;\n    result: Resolution;\n  },\n  alias: { platform: string; output: string }\n): boolean {\n  return (\n    input.platform === alias.platform &&\n    input.result?.type === 'sourceFile' &&\n    typeof input.result?.filePath === 'string' &&\n    normalizeSlashes(input.result.filePath).endsWith(alias.output)\n  );\n}\n\n/** Add support for `react-native-web` and the Web platform. */\nexport async function withMetroMultiPlatformAsync(\n  projectRoot: string,\n  {\n    config,\n    exp,\n    platformBundlers,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isExporting,\n    isReactCanaryEnabled,\n    isNamedRequiresEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  }: {\n    config: ConfigT;\n    exp: ExpoConfig;\n    isTsconfigPathsEnabled: boolean;\n    platformBundlers: PlatformBundlers;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n    isReactCanaryEnabled: boolean;\n    isReactServerComponentsEnabled: boolean;\n    isNamedRequiresEnabled: boolean;\n    getMetroBundler: () => Bundler;\n  }\n) {\n  if (isNamedRequiresEnabled) {\n    debug('Using Expo metro require runtime.');\n    // Change the default metro-runtime to a custom one that supports bundle splitting.\n    require('metro-config/src/defaults/defaults').moduleSystem = require.resolve(\n      '@expo/cli/build/metro-require/require'\n    );\n  }\n\n  if (!config.projectRoot) {\n    // @ts-expect-error: read-only types\n    config.projectRoot = projectRoot;\n  }\n\n  // Required for @expo/metro-runtime to format paths in the web LogBox.\n  process.env.EXPO_PUBLIC_PROJECT_ROOT = process.env.EXPO_PUBLIC_PROJECT_ROOT ?? projectRoot;\n\n  // This is used for running Expo CLI in development against projects outside the monorepo.\n  if (!isDirectoryIn(__dirname, projectRoot)) {\n    if (!config.watchFolders) {\n      // @ts-expect-error: watchFolders is readonly\n      config.watchFolders = [];\n    }\n    // @ts-expect-error: watchFolders is readonly\n    config.watchFolders.push(path.join(require.resolve('metro-runtime/package.json'), '../..'));\n    if (isReactCanaryEnabled) {\n      // @ts-expect-error: watchFolders is readonly\n      config.watchFolders.push(path.join(require.resolve('@expo/cli/package.json'), '..'));\n    }\n  }\n\n  // TODO: Remove this\n  // @ts-expect-error: Invalidate the cache when the location of expo-router changes on-disk.\n  config.transformer._expoRouterPath = resolveFrom.silent(projectRoot, 'expo-router');\n\n  let tsconfig: null | TsConfigPaths = null;\n\n  if (isTsconfigPathsEnabled) {\n    tsconfig = await loadTsConfigPathsAsync(projectRoot);\n  }\n\n  let expoConfigPlatforms = Object.entries(platformBundlers)\n    .filter(\n      ([platform, bundler]) => bundler === 'metro' && exp.platforms?.includes(platform as Platform)\n    )\n    .map(([platform]) => platform);\n\n  if (Array.isArray(config.resolver.platforms)) {\n    expoConfigPlatforms = [...new Set(expoConfigPlatforms.concat(config.resolver.platforms))];\n  }\n\n  // @ts-expect-error: typed as `readonly`.\n  config.resolver.platforms = expoConfigPlatforms;\n\n  config = withWebPolyfills(config, { getMetroBundler });\n\n  return withExtendedResolver(config, {\n    tsconfig,\n    isExporting,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isReactCanaryEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  });\n}\n\nfunction isDirectoryIn(targetPath: string, rootPath: string) {\n  return targetPath.startsWith(rootPath) && targetPath.length >= rootPath.length;\n}\n"],"names":["getNodejsExtensions","withExtendedResolver","shouldAliasModule","withMetroMultiPlatformAsync","ASSET_REGISTRY_SRC","debug","require","withWebPolyfills","config","getMetroBundler","originalGetPolyfills","serializer","getPolyfills","bind","ctx","virtualEnvVarId","getMetroBundlerWithVirtualModules","setVirtualModule","virtualModuleId","platform","resolve","polyfills","normalizeSlashes","p","replace","srcExts","mjsExts","filter","ext","test","nodejsSourceExtensions","jsIndex","reduce","index","i","splice","tsconfig","isTsconfigPathsEnabled","isFastResolverEnabled","isExporting","isReactCanaryEnabled","isReactServerComponentsEnabled","Log","warn","defaultResolver","metroResolver","resolver","createFastResolver","preserveSymlinks","blockList","Array","isArray","aliases","web","_universalAliases","getUniversalAliases","resolveFrom","silent","projectRoot","push","preferredMainFields","tsConfigResolve","paths","baseUrl","resolveWithTsConfigPaths","hasBaseUrl","isInteractive","configWatcher","FileNotifier","startObserving","loadTsConfigPathsAsync","then","tsConfigPaths","Object","keys","length","installExitHooks","stopObserving","getStrictResolver","resolveRequest","context","doResolve","moduleName","getOptionalResolver","optionalResolve","error","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","idFactory","createModuleIdFactory","id","getAssetRegistryModule","type","filePath","externals","match","customResolverOptions","exporting","isServerEnvironment","environment","process","clientboundary","endsWith","isExternal","metroConfigWithCustomResolver","withMetroResolvers","dev","originModulePath","isServer","moduleId","isNodeExternal","result","contents","strictResolve","external","realModule","realPath","opaqueId","JSON","stringify","CommandError","redirectedModuleName","matcher","alias","aliasedModule","_","parseInt","includes","FailedToResolvePathError","normalName","shimFile","shouldCreateVirtualShim","virtualId","bundler","hasVirtualModule","fs","readFileSync","normal","console","log","canaryFile","shouldCreateVirtualCanary","metroConfigWithCustomContext","withMetroMutatedResolverContext","immutableContext","preferNativePlatform","nodeModulesPaths","path","join","sourceExts","unstable_enablePackageExports","unstable_conditionsByPlatform","isReactServerComponents","mainFields","unstable_conditionNames","env","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","withMetroErrorReportingResolver","input","output","exp","platformBundlers","isNamedRequiresEnabled","moduleSystem","EXPO_PUBLIC_PROJECT_ROOT","isDirectoryIn","__dirname","watchFolders","transformer","_expoRouterPath","expoConfigPlatforms","entries","platforms","map","Set","concat","targetPath","rootPath","startsWith"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../src/start/server/metro/withMetroMultiPlatform.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ExpoConfig, Platform } from '@expo/config';\nimport fs from 'fs';\nimport Bundler from 'metro/src/Bundler';\nimport { ConfigT } from 'metro-config';\nimport { Resolution, ResolutionContext, CustomResolutionContext } from 'metro-resolver';\nimport * as metroResolver from 'metro-resolver';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { createFastResolver, FailedToResolvePathError } from './createExpoMetroResolver';\nimport { isNodeExternal, shouldCreateVirtualCanary, shouldCreateVirtualShim } from './externals';\nimport { isFailedToResolveNameError, isFailedToResolvePathError } from './metroErrors';\nimport { getMetroBundlerWithVirtualModules } from './metroVirtualModules';\nimport {\n  withMetroErrorReportingResolver,\n  withMetroMutatedResolverContext,\n  withMetroResolvers,\n} from './withMetroResolvers';\nimport { Log } from '../../../log';\nimport { FileNotifier } from '../../../utils/FileNotifier';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { installExitHooks } from '../../../utils/exit';\nimport { isInteractive } from '../../../utils/interactive';\nimport { loadTsConfigPathsAsync, TsConfigPaths } from '../../../utils/tsconfig/loadTsConfigPaths';\nimport { resolveWithTsConfigPaths } from '../../../utils/tsconfig/resolveWithTsConfigPaths';\nimport { isServerEnvironment } from '../middleware/metroOptions';\nimport { PlatformBundlers } from '../platformBundlers';\n\ntype Mutable<T> = { -readonly [K in keyof T]: T[K] };\n\nconst ASSET_REGISTRY_SRC = `const assets=[];module.exports={registerAsset:s=>assets.push(s),getAssetByID:s=>assets[s-1]};`;\n\nconst debug = require('debug')('expo:start:server:metro:multi-platform') as typeof console.log;\n\nfunction withWebPolyfills(\n  config: ConfigT,\n  {\n    getMetroBundler,\n  }: {\n    getMetroBundler: () => Bundler;\n  }\n): ConfigT {\n  const originalGetPolyfills = config.serializer.getPolyfills\n    ? config.serializer.getPolyfills.bind(config.serializer)\n    : () => [];\n\n  const getPolyfills = (ctx: { platform?: string | null }): readonly string[] => {\n    const virtualEnvVarId = `\\0polyfill:environment-variables`;\n\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualEnvVarId,\n      (() => {\n        return `//`;\n      })()\n    );\n\n    const virtualModuleId = `\\0polyfill:external-require`;\n\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualModuleId,\n      (() => {\n        if (ctx.platform === 'web') {\n          return `global.$$require_external = typeof window === \"undefined\" ? require : () => null;`;\n        } else {\n          // Wrap in try/catch to support Android.\n          return 'try { global.$$require_external = typeof expo === \"undefined\" ? require : (moduleId) => { throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);} } catch { global.$$require_external = (moduleId) => { throw new Error(`Node.js standard library module ${moduleId} is not available in this JavaScript environment`);} }';\n        }\n      })()\n    );\n\n    if (ctx.platform === 'web') {\n      return [\n        virtualModuleId,\n        virtualEnvVarId,\n        // Ensure that the error-guard polyfill is included in the web polyfills to\n        // make metro-runtime work correctly.\n        // TODO: This module is pretty big for a function that simply re-throws an error that doesn't need to be caught.\n        require.resolve('@react-native/js-polyfills/error-guard'),\n      ];\n    }\n\n    // Generally uses `rn-get-polyfills`\n    const polyfills = originalGetPolyfills(ctx);\n    return [...polyfills, virtualModuleId, virtualEnvVarId];\n  };\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      getPolyfills,\n    },\n  };\n}\n\nfunction normalizeSlashes(p: string) {\n  return p.replace(/\\\\/g, '/');\n}\n\nexport function getNodejsExtensions(srcExts: readonly string[]): string[] {\n  const mjsExts = srcExts.filter((ext) => /mjs$/.test(ext));\n  const nodejsSourceExtensions = srcExts.filter((ext) => !/mjs$/.test(ext));\n  // find index of last `*.js` extension\n  const jsIndex = nodejsSourceExtensions.reduce((index, ext, i) => {\n    return /jsx?$/.test(ext) ? i : index;\n  }, -1);\n\n  // insert `*.mjs` extensions after `*.js` extensions\n  nodejsSourceExtensions.splice(jsIndex + 1, 0, ...mjsExts);\n\n  return nodejsSourceExtensions;\n}\n\n/**\n * Apply custom resolvers to do the following:\n * - Disable `.native.js` extensions on web.\n * - Alias `react-native` to `react-native-web` on web.\n * - Redirect `react-native-web/dist/modules/AssetRegistry/index.js` to `@react-native/assets/registry.js` on web.\n * - Add support for `tsconfig.json`/`jsconfig.json` aliases via `compilerOptions.paths`.\n * - Alias react-native renderer code to a vendored React canary build on native.\n */\nexport function withExtendedResolver(\n  config: ConfigT,\n  {\n    tsconfig,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isExporting,\n    isReactCanaryEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  }: {\n    tsconfig: TsConfigPaths | null;\n    isTsconfigPathsEnabled?: boolean;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n    isReactCanaryEnabled?: boolean;\n    isReactServerComponentsEnabled?: boolean;\n    getMetroBundler: () => Bundler;\n  }\n) {\n  if (isReactServerComponentsEnabled) {\n    Log.warn(\n      `Experimental React Server Components is enabled. Production exports are not supported yet.`\n    );\n  }\n  if (isFastResolverEnabled) {\n    Log.warn(`Experimental module resolution is enabled.`);\n  }\n\n  if (isReactCanaryEnabled) {\n    Log.warn(`Experimental React Canary version is enabled.`);\n  }\n\n  const defaultResolver = metroResolver.resolve;\n  const resolver = isFastResolverEnabled\n    ? createFastResolver({\n        preserveSymlinks: true,\n        blockList: !config.resolver?.blockList\n          ? []\n          : Array.isArray(config.resolver?.blockList)\n            ? config.resolver?.blockList\n            : [config.resolver?.blockList],\n      })\n    : defaultResolver;\n\n  const aliases: { [key: string]: Record<string, string> } = {\n    web: {\n      'react-native': 'react-native-web',\n      'react-native/index': 'react-native-web',\n      'react-native/Libraries/Image/resolveAssetSource': 'expo-asset/build/resolveAssetSource',\n    },\n  };\n\n  let _universalAliases: [RegExp, string][] | null;\n\n  function getUniversalAliases() {\n    if (_universalAliases) {\n      return _universalAliases;\n    }\n\n    _universalAliases = [];\n\n    // This package is currently always installed as it is included in the `expo` package.\n    if (resolveFrom.silent(config.projectRoot, '@expo/vector-icons')) {\n      debug('Enabling alias: react-native-vector-icons -> @expo/vector-icons');\n      _universalAliases.push([/^react-native-vector-icons(\\/.*)?/, '@expo/vector-icons$1']);\n    }\n    if (isReactServerComponentsEnabled) {\n      if (resolveFrom.silent(config.projectRoot, 'expo-router/rsc')) {\n        debug('Enabling bridge alias: expo-router -> expo-router/rsc');\n        _universalAliases.push([/^expo-router$/, 'expo-router/rsc']);\n        // Bridge the internal entry point which is a standalone import to ensure package.json resolution works as expected.\n        _universalAliases.push([/^expo-router\\/entry-classic$/, 'expo-router/rsc/entry']);\n      }\n    }\n    return _universalAliases;\n  }\n\n  const preferredMainFields: { [key: string]: string[] } = {\n    // Defaults from Expo Webpack. Most packages using `react-native` don't support web\n    // in the `react-native` field, so we should prefer the `browser` field.\n    // https://github.com/expo/router/issues/37\n    web: ['browser', 'module', 'main'],\n  };\n\n  let tsConfigResolve =\n    isTsconfigPathsEnabled && (tsconfig?.paths || tsconfig?.baseUrl != null)\n      ? resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n          paths: tsconfig.paths ?? {},\n          baseUrl: tsconfig.baseUrl ?? config.projectRoot,\n          hasBaseUrl: !!tsconfig.baseUrl,\n        })\n      : null;\n\n  // TODO: Move this to be a transform key for invalidation.\n  if (!isExporting && isInteractive()) {\n    if (isTsconfigPathsEnabled) {\n      // TODO: We should track all the files that used imports and invalidate them\n      // currently the user will need to save all the files that use imports to\n      // use the new aliases.\n      const configWatcher = new FileNotifier(config.projectRoot, [\n        './tsconfig.json',\n        './jsconfig.json',\n      ]);\n      configWatcher.startObserving(() => {\n        debug('Reloading tsconfig.json');\n        loadTsConfigPathsAsync(config.projectRoot).then((tsConfigPaths) => {\n          if (tsConfigPaths?.paths && !!Object.keys(tsConfigPaths.paths).length) {\n            debug('Enabling tsconfig.json paths support');\n            tsConfigResolve = resolveWithTsConfigPaths.bind(resolveWithTsConfigPaths, {\n              paths: tsConfigPaths.paths ?? {},\n              baseUrl: tsConfigPaths.baseUrl ?? config.projectRoot,\n              hasBaseUrl: !!tsConfigPaths.baseUrl,\n            });\n          } else {\n            debug('Disabling tsconfig.json paths support');\n            tsConfigResolve = null;\n          }\n        });\n      });\n\n      // TODO: This probably prevents the process from exiting.\n      installExitHooks(() => {\n        configWatcher.stopObserving();\n      });\n    } else {\n      debug('Skipping tsconfig.json paths support');\n    }\n  }\n\n  let nodejsSourceExtensions: string[] | null = null;\n\n  function getStrictResolver(\n    { resolveRequest, ...context }: ResolutionContext,\n    platform: string | null\n  ) {\n    return function doResolve(moduleName: string): Resolution {\n      return resolver(context, moduleName, platform);\n    };\n  }\n\n  function getOptionalResolver(context: ResolutionContext, platform: string | null) {\n    const doResolve = getStrictResolver(context, platform);\n    return function optionalResolve(moduleName: string): Resolution | null {\n      try {\n        return doResolve(moduleName);\n      } catch (error) {\n        // If the error is directly related to a resolver not being able to resolve a module, then\n        // we can ignore the error and try the next resolver. Otherwise, we should throw the error.\n        const isResolutionError =\n          isFailedToResolveNameError(error) || isFailedToResolvePathError(error);\n        if (!isResolutionError) {\n          throw error;\n        }\n      }\n      return null;\n    };\n  }\n\n  // TODO: This is a hack to get resolveWeak working.\n  const idFactory = (config.serializer?.createModuleIdFactory?.() ??\n    ((id: number | string, context: { platform: string; environment?: string }): number | string =>\n      id)) as (\n    id: number | string,\n    context: { platform: string; environment?: string }\n  ) => number | string;\n\n  const getAssetRegistryModule = () => {\n    const virtualModuleId = `\\0polyfill:assets-registry`;\n    getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n      virtualModuleId,\n      ASSET_REGISTRY_SRC\n    );\n    return {\n      type: 'sourceFile',\n      filePath: virtualModuleId,\n    } as const;\n  };\n\n  // If Node.js pass-through, then remap to a module like `module.exports = $$require_external(<module>)`.\n  // If module should be shimmed, remap to an empty module.\n  const externals: {\n    match: (context: ResolutionContext, moduleName: string, platform: string | null) => boolean;\n    replace: 'empty' | 'node' | 'weak';\n  }[] = [\n    {\n      match: (context: ResolutionContext, moduleName: string) => {\n        if (\n          // Disable internal externals when exporting for production.\n          context.customResolverOptions.exporting ||\n          // These externals are only for Node.js environments.\n          !isServerEnvironment(context.customResolverOptions?.environment)\n        ) {\n          return false;\n        }\n\n        if (context.customResolverOptions?.environment === 'react-server') {\n          // Ensure these non-react-server modules are excluded when bundling for React Server Components in development.\n          return /^(source-map-support(\\/.*)?|@babel\\/runtime\\/.+|debug|metro-runtime\\/src\\/modules\\/HMRClient|metro|acorn-loose|acorn|chalk|ws|ansi-styles|supports-color|color-convert|has-flag|utf-8-validate|color-name|react-refresh\\/runtime|@remix-run\\/node\\/.+)$/.test(\n            moduleName\n          );\n        }\n\n        // TODO: Windows doesn't support externals somehow.\n        if (process.platform === 'win32') {\n          return /^(source-map-support(\\/.*)?)$/.test(moduleName);\n        }\n\n        // Extern these modules in standard Node.js environments in development to prevent API routes side-effects\n        // from leaking into the dev server process.\n        return /^(source-map-support(\\/.*)?|react|react-native-helmet-async|@radix-ui\\/.+|@babel\\/runtime\\/.+|react-dom(\\/.+)?|debug|acorn-loose|acorn|css-in-js-utils\\/lib\\/.+|hyphenate-style-name|color|color-string|color-convert|color-name|fontfaceobserver|fast-deep-equal|query-string|escape-string-regexp|invariant|postcss-value-parser|memoize-one|nullthrows|strict-uri-encode|decode-uri-component|split-on-first|filter-obj|warn-once|simple-swizzle|is-arrayish|inline-style-prefixer\\/.+)$/.test(\n          moduleName\n        );\n      },\n      replace: 'node',\n    },\n    // Externals to speed up async split chunks by extern-ing common packages that appear in the root client chunk.\n    {\n      match: (context: ResolutionContext, moduleName: string, platform: string | null) => {\n        if (\n          // Disable internal externals when exporting for production.\n          context.customResolverOptions.exporting ||\n          // These externals are only for client environments.\n          isServerEnvironment(context.customResolverOptions?.environment) ||\n          // Only enable for client boundaries\n          !context.customResolverOptions.clientboundary\n        ) {\n          return false;\n        }\n\n        // We don't support this in the resolver at the moment.\n        if (moduleName.endsWith('/package.json')) {\n          return false;\n        }\n\n        const isExternal = // Extern these modules in standard Node.js environments.\n          /^(deprecated-react-native-prop-types|react|react\\/jsx-dev-runtime|scheduler|react-native|react-dom(\\/.+)?|metro-runtime(\\/.+)?)$/.test(\n            moduleName\n          ) ||\n          // TODO: Add more\n          /^@babel\\/runtime\\/helpers\\/(wrapNativeSuper)$/.test(moduleName);\n\n        return isExternal;\n      },\n      replace: 'weak',\n    },\n  ];\n\n  const metroConfigWithCustomResolver = withMetroResolvers(config, [\n    // Mock out production react imports in development.\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // This resolution is dev-only to prevent bundling the production React packages in development.\n      if (!context.dev) return null;\n\n      if (\n        // Match react-native renderers.\n        (platform !== 'web' &&\n          context.originModulePath.match(/[\\\\/]node_modules[\\\\/]react-native[\\\\/]/) &&\n          moduleName.match(/([\\\\/]ReactFabric|ReactNativeRenderer)-prod/)) ||\n        // Match react production imports.\n        (moduleName.match(/\\.production(\\.min)?\\.js$/) &&\n          // Match if the import originated from a react package.\n          context.originModulePath.match(/[\\\\/]node_modules[\\\\/](react[-\\\\/]|scheduler[\\\\/])/))\n      ) {\n        debug(`Skipping production module: ${moduleName}`);\n        // /Users/path/to/expo/node_modules/react/index.js ./cjs/react.production.min.js\n        // /Users/path/to/expo/node_modules/react/jsx-dev-runtime.js ./cjs/react-jsx-dev-runtime.production.min.js\n        // /Users/path/to/expo/node_modules/react-is/index.js ./cjs/react-is.production.min.js\n        // /Users/path/to/expo/node_modules/react-refresh/runtime.js ./cjs/react-refresh-runtime.production.min.js\n        // /Users/path/to/expo/node_modules/react-native/node_modules/scheduler/index.native.js ./cjs/scheduler.native.production.min.js\n        // /Users/path/to/expo/node_modules/react-native/node_modules/react-is/index.js ./cjs/react-is.production.min.js\n        return {\n          type: 'empty',\n        };\n      }\n      return null;\n    },\n    // tsconfig paths\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      return (\n        tsConfigResolve?.(\n          {\n            originModulePath: context.originModulePath,\n            moduleName,\n          },\n          getOptionalResolver(context, platform)\n        ) ?? null\n      );\n    },\n\n    // Node.js externals support\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      const isServer =\n        context.customResolverOptions?.environment === 'node' ||\n        context.customResolverOptions?.environment === 'react-server';\n\n      const moduleId = isNodeExternal(moduleName);\n      if (!moduleId) {\n        return null;\n      }\n\n      if (\n        // In browser runtimes, we want to either resolve a local node module by the same name, or shim the module to\n        // prevent crashing when Node.js built-ins are imported.\n        !isServer\n      ) {\n        // Perform optional resolve first. If the module doesn't exist (no module in the node_modules)\n        // then we can mock the file to use an empty module.\n        const result = getOptionalResolver(context, platform)(moduleName);\n\n        if (!result && platform !== 'web') {\n          // Preserve previous behavior where native throws an error on node.js internals.\n          return null;\n        }\n\n        return (\n          result ?? {\n            // In this case, mock the file to use an empty module.\n            type: 'empty',\n          }\n        );\n      }\n      const contents = `module.exports=$$require_external('node:${moduleId}');`;\n      debug(`Virtualizing Node.js \"${moduleId}\"`);\n      const virtualModuleId = `\\0node:${moduleId}`;\n      getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n        virtualModuleId,\n        contents\n      );\n      return {\n        type: 'sourceFile',\n        filePath: virtualModuleId,\n      };\n    },\n\n    // Custom externals support\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // We don't support this in the resolver at the moment.\n      if (moduleName.endsWith('/package.json')) {\n        return null;\n      }\n      const environment = context.customResolverOptions?.environment;\n\n      const strictResolve = getStrictResolver(context, platform);\n\n      for (const external of externals) {\n        if (external.match(context, moduleName, platform)) {\n          if (external.replace === 'empty') {\n            debug(`Redirecting external \"${moduleName}\" to \"${external.replace}\"`);\n            return {\n              type: external.replace,\n            };\n          } else if (external.replace === 'weak') {\n            // TODO: Make this use require.resolveWeak again. Previously this was just resolving to the same path.\n            const realModule = strictResolve(moduleName);\n            const realPath = realModule.type === 'sourceFile' ? realModule.filePath : moduleName;\n            const opaqueId = idFactory(realPath, {\n              platform: platform!,\n              environment,\n            });\n\n            const contents =\n              typeof opaqueId === 'number'\n                ? `module.exports=/*${moduleName}*/__r(${opaqueId})`\n                : `module.exports=/*${moduleName}*/__r(${JSON.stringify(opaqueId)})`;\n            // const contents = `module.exports=/*${moduleName}*/__r(require.resolveWeak('${moduleName}'))`;\n            // const generatedModuleId = fastHashMemoized(contents);\n            const virtualModuleId = `\\0weak:${opaqueId}`;\n            debug('Virtualizing module:', moduleName, '->', virtualModuleId);\n            getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n              virtualModuleId,\n              contents\n            );\n            return {\n              type: 'sourceFile',\n              filePath: virtualModuleId,\n            };\n          } else if (external.replace === 'node') {\n            const contents = `module.exports=$$require_external('${moduleName}')`;\n            const virtualModuleId = `\\0node:${moduleName}`;\n            debug('Virtualizing Node.js (custom):', moduleName, '->', virtualModuleId);\n            getMetroBundlerWithVirtualModules(getMetroBundler()).setVirtualModule(\n              virtualModuleId,\n              contents\n            );\n            return {\n              type: 'sourceFile',\n              filePath: virtualModuleId,\n            };\n          } else {\n            throw new CommandError(\n              `Invalid external alias type: \"${external.replace}\" for module \"${moduleName}\" (platform: ${platform}, originModulePath: ${context.originModulePath})`\n            );\n          }\n        }\n      }\n      return null;\n    },\n\n    // Basic moduleId aliases\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      // Conditionally remap `react-native` to `react-native-web` on web in\n      // a way that doesn't require Babel to resolve the alias.\n      if (platform && platform in aliases && aliases[platform][moduleName]) {\n        const redirectedModuleName = aliases[platform][moduleName];\n        return getStrictResolver(context, platform)(redirectedModuleName);\n      }\n\n      for (const [matcher, alias] of getUniversalAliases()) {\n        const match = moduleName.match(matcher);\n        if (match) {\n          const aliasedModule = alias.replace(\n            /\\$(\\d+)/g,\n            (_, index) => match[parseInt(index, 10)] ?? ''\n          );\n          const doResolve = getStrictResolver(context, platform);\n          debug(`Alias \"${moduleName}\" to \"${aliasedModule}\"`);\n          return doResolve(aliasedModule);\n        }\n      }\n\n      return null;\n    },\n\n    // Polyfill for asset registry\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      if (/^@react-native\\/assets-registry\\/registry(\\.js)?$/.test(moduleName)) {\n        return getAssetRegistryModule();\n      }\n\n      if (\n        platform === 'web' &&\n        context.originModulePath.match(/node_modules[\\\\/]react-native-web[\\\\/]/) &&\n        moduleName.includes('/modules/AssetRegistry')\n      ) {\n        return getAssetRegistryModule();\n      }\n\n      return null;\n    },\n\n    // TODO: Reduce these as much as possible in the future.\n    // Complex post-resolution rewrites.\n    (context: ResolutionContext, moduleName: string, platform: string | null) => {\n      const doResolve = getStrictResolver(context, platform);\n\n      const result = doResolve(moduleName);\n\n      if (result.type !== 'sourceFile') {\n        return result;\n      }\n\n      if (platform === 'web') {\n        if (result.filePath.includes('node_modules')) {\n          // // Disallow importing confusing native modules on web\n          if (moduleName.includes('react-native/Libraries/Utilities/codegenNativeCommands')) {\n            throw new FailedToResolvePathError(\n              `Importing native-only module \"${moduleName}\" on web from: ${context.originModulePath}`\n            );\n          }\n\n          // Replace with static shims\n\n          const normalName = normalizeSlashes(result.filePath)\n            // Drop everything up until the `node_modules` folder.\n            .replace(/.*node_modules\\//, '');\n\n          const shimFile = shouldCreateVirtualShim(normalName);\n          if (shimFile) {\n            const virtualId = `\\0shim:${normalName}`;\n            const bundler = getMetroBundlerWithVirtualModules(getMetroBundler());\n            if (!bundler.hasVirtualModule(virtualId)) {\n              bundler.setVirtualModule(virtualId, fs.readFileSync(shimFile, 'utf8'));\n            }\n            debug(`Redirecting module \"${result.filePath}\" to shim`);\n\n            return {\n              ...result,\n              filePath: virtualId,\n            };\n          }\n        }\n      } else {\n        const isServer =\n          context.customResolverOptions?.environment === 'node' ||\n          context.customResolverOptions?.environment === 'react-server';\n\n        // react-native/Libraries/Core/InitializeCore\n        const normal = normalizeSlashes(result.filePath);\n\n        // Shim out React Native native runtime globals in server mode for native.\n        if (isServer) {\n          if (normal.endsWith('react-native/Libraries/Core/InitializeCore.js')) {\n            console.log('Shimming out InitializeCore for React Native in native SSR bundle');\n            return {\n              type: 'empty',\n            };\n          }\n        }\n\n        // When server components are enabled, redirect React Native's renderer to the canary build\n        // this will enable the use hook and other requisite features from React 19.\n        if (isReactCanaryEnabled && result.filePath.includes('node_modules')) {\n          const normalName = normalizeSlashes(result.filePath)\n            // Drop everything up until the `node_modules` folder.\n            .replace(/.*node_modules\\//, '');\n\n          const canaryFile = shouldCreateVirtualCanary(normalName);\n          if (canaryFile) {\n            debug(`Redirecting React Native module \"${result.filePath}\" to canary build`);\n            return {\n              ...result,\n              filePath: canaryFile,\n            };\n          }\n        }\n      }\n\n      return result;\n    },\n  ]);\n\n  // Ensure we mutate the resolution context to include the custom resolver options for server and web.\n  const metroConfigWithCustomContext = withMetroMutatedResolverContext(\n    metroConfigWithCustomResolver,\n    (\n      immutableContext: CustomResolutionContext,\n      moduleName: string,\n      platform: string | null\n    ): CustomResolutionContext => {\n      const context: Mutable<CustomResolutionContext> = {\n        ...immutableContext,\n        preferNativePlatform: platform !== 'web',\n      };\n\n      // TODO: Remove this when we have React 19 in the expo/expo monorepo.\n      if (\n        isReactCanaryEnabled &&\n        // Change the node modules path for react and react-dom to use the vendor in Expo CLI.\n        /^(react|react\\/.*|react-dom|react-dom\\/.*)$/.test(moduleName)\n      ) {\n        context.nodeModulesPaths = [\n          path.join(require.resolve('@expo/cli/package.json'), '../static/canary-full'),\n        ];\n      }\n\n      if (isServerEnvironment(context.customResolverOptions?.environment)) {\n        // Adjust nodejs source extensions to sort mjs after js, including platform variants.\n        if (nodejsSourceExtensions === null) {\n          nodejsSourceExtensions = getNodejsExtensions(context.sourceExts);\n        }\n        context.sourceExts = nodejsSourceExtensions;\n\n        context.unstable_enablePackageExports = true;\n        context.unstable_conditionsByPlatform = {};\n\n        const isReactServerComponents =\n          context.customResolverOptions?.environment === 'react-server';\n\n        if (isReactServerComponents) {\n          // NOTE: Align the behavior across server and client. This is a breaking change so we'll just roll it out with React Server Components.\n          // This ensures that react-server and client code both resolve `module` and `main` in the same order.\n          if (platform === 'web') {\n            // Node.js runtimes should only be importing main at the moment.\n            // This is a temporary fix until we can support the package.json exports.\n            context.mainFields = ['module', 'main'];\n          } else {\n            // In Node.js + native, use the standard main fields.\n            context.mainFields = ['react-native', 'module', 'main'];\n          }\n        } else {\n          if (platform === 'web') {\n            // Node.js runtimes should only be importing main at the moment.\n            // This is a temporary fix until we can support the package.json exports.\n            context.mainFields = ['main', 'module'];\n          } else {\n            // In Node.js + native, use the standard main fields.\n            context.mainFields = ['react-native', 'main', 'module'];\n          }\n        }\n\n        // Enable react-server import conditions.\n        if (context.customResolverOptions?.environment === 'react-server') {\n          context.unstable_conditionNames = [\n            'node',\n            'import',\n            'require',\n            'react-server',\n            'workerd',\n          ];\n        } else {\n          context.unstable_conditionNames = ['node', 'require'];\n        }\n      } else {\n        // Non-server changes\n\n        if (!env.EXPO_METRO_NO_MAIN_FIELD_OVERRIDE && platform && platform in preferredMainFields) {\n          context.mainFields = preferredMainFields[platform];\n        }\n      }\n\n      return context;\n    }\n  );\n\n  return withMetroErrorReportingResolver(metroConfigWithCustomContext);\n}\n\n/** @returns `true` if the incoming resolution should be swapped. */\nexport function shouldAliasModule(\n  input: {\n    platform: string | null;\n    result: Resolution;\n  },\n  alias: { platform: string; output: string }\n): boolean {\n  return (\n    input.platform === alias.platform &&\n    input.result?.type === 'sourceFile' &&\n    typeof input.result?.filePath === 'string' &&\n    normalizeSlashes(input.result.filePath).endsWith(alias.output)\n  );\n}\n\n/** Add support for `react-native-web` and the Web platform. */\nexport async function withMetroMultiPlatformAsync(\n  projectRoot: string,\n  {\n    config,\n    exp,\n    platformBundlers,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isExporting,\n    isReactCanaryEnabled,\n    isNamedRequiresEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  }: {\n    config: ConfigT;\n    exp: ExpoConfig;\n    isTsconfigPathsEnabled: boolean;\n    platformBundlers: PlatformBundlers;\n    isFastResolverEnabled?: boolean;\n    isExporting?: boolean;\n    isReactCanaryEnabled: boolean;\n    isReactServerComponentsEnabled: boolean;\n    isNamedRequiresEnabled: boolean;\n    getMetroBundler: () => Bundler;\n  }\n) {\n  if (isNamedRequiresEnabled) {\n    debug('Using Expo metro require runtime.');\n    // Change the default metro-runtime to a custom one that supports bundle splitting.\n    require('metro-config/src/defaults/defaults').moduleSystem = require.resolve(\n      '@expo/cli/build/metro-require/require'\n    );\n  }\n\n  if (!config.projectRoot) {\n    // @ts-expect-error: read-only types\n    config.projectRoot = projectRoot;\n  }\n\n  // Required for @expo/metro-runtime to format paths in the web LogBox.\n  process.env.EXPO_PUBLIC_PROJECT_ROOT = process.env.EXPO_PUBLIC_PROJECT_ROOT ?? projectRoot;\n\n  // This is used for running Expo CLI in development against projects outside the monorepo.\n  if (!isDirectoryIn(__dirname, projectRoot)) {\n    if (!config.watchFolders) {\n      // @ts-expect-error: watchFolders is readonly\n      config.watchFolders = [];\n    }\n    // @ts-expect-error: watchFolders is readonly\n    config.watchFolders.push(path.join(require.resolve('metro-runtime/package.json'), '../..'));\n    if (isReactCanaryEnabled) {\n      // @ts-expect-error: watchFolders is readonly\n      config.watchFolders.push(path.join(require.resolve('@expo/cli/package.json'), '..'));\n    }\n  }\n\n  // TODO: Remove this\n  // @ts-expect-error: Invalidate the cache when the location of expo-router changes on-disk.\n  config.transformer._expoRouterPath = resolveFrom.silent(projectRoot, 'expo-router');\n\n  let tsconfig: null | TsConfigPaths = null;\n\n  if (isTsconfigPathsEnabled) {\n    tsconfig = await loadTsConfigPathsAsync(projectRoot);\n  }\n\n  let expoConfigPlatforms = Object.entries(platformBundlers)\n    .filter(\n      ([platform, bundler]) => bundler === 'metro' && exp.platforms?.includes(platform as Platform)\n    )\n    .map(([platform]) => platform);\n\n  if (Array.isArray(config.resolver.platforms)) {\n    expoConfigPlatforms = [...new Set(expoConfigPlatforms.concat(config.resolver.platforms))];\n  }\n\n  // @ts-expect-error: typed as `readonly`.\n  config.resolver.platforms = expoConfigPlatforms;\n\n  config = withWebPolyfills(config, { getMetroBundler });\n\n  return withExtendedResolver(config, {\n    tsconfig,\n    isExporting,\n    isTsconfigPathsEnabled,\n    isFastResolverEnabled,\n    isReactCanaryEnabled,\n    isReactServerComponentsEnabled,\n    getMetroBundler,\n  });\n}\n\nfunction isDirectoryIn(targetPath: string, rootPath: string) {\n  return targetPath.startsWith(rootPath) && targetPath.length >= rootPath.length;\n}\n"],"names":["getNodejsExtensions","withExtendedResolver","shouldAliasModule","withMetroMultiPlatformAsync","ASSET_REGISTRY_SRC","debug","require","withWebPolyfills","config","getMetroBundler","originalGetPolyfills","serializer","getPolyfills","bind","ctx","virtualEnvVarId","getMetroBundlerWithVirtualModules","setVirtualModule","virtualModuleId","platform","resolve","polyfills","normalizeSlashes","p","replace","srcExts","mjsExts","filter","ext","test","nodejsSourceExtensions","jsIndex","reduce","index","i","splice","tsconfig","isTsconfigPathsEnabled","isFastResolverEnabled","isExporting","isReactCanaryEnabled","isReactServerComponentsEnabled","Log","warn","defaultResolver","metroResolver","resolver","createFastResolver","preserveSymlinks","blockList","Array","isArray","aliases","web","_universalAliases","getUniversalAliases","resolveFrom","silent","projectRoot","push","preferredMainFields","tsConfigResolve","paths","baseUrl","resolveWithTsConfigPaths","hasBaseUrl","isInteractive","configWatcher","FileNotifier","startObserving","loadTsConfigPathsAsync","then","tsConfigPaths","Object","keys","length","installExitHooks","stopObserving","getStrictResolver","resolveRequest","context","doResolve","moduleName","getOptionalResolver","optionalResolve","error","isResolutionError","isFailedToResolveNameError","isFailedToResolvePathError","idFactory","createModuleIdFactory","id","getAssetRegistryModule","type","filePath","externals","match","customResolverOptions","exporting","isServerEnvironment","environment","process","clientboundary","endsWith","isExternal","metroConfigWithCustomResolver","withMetroResolvers","dev","originModulePath","isServer","moduleId","isNodeExternal","result","contents","strictResolve","external","realModule","realPath","opaqueId","JSON","stringify","CommandError","redirectedModuleName","matcher","alias","aliasedModule","_","parseInt","includes","FailedToResolvePathError","normalName","shimFile","shouldCreateVirtualShim","virtualId","bundler","hasVirtualModule","fs","readFileSync","normal","console","log","canaryFile","shouldCreateVirtualCanary","metroConfigWithCustomContext","withMetroMutatedResolverContext","immutableContext","preferNativePlatform","nodeModulesPaths","path","join","sourceExts","unstable_enablePackageExports","unstable_conditionsByPlatform","isReactServerComponents","mainFields","unstable_conditionNames","env","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","withMetroErrorReportingResolver","input","output","exp","platformBundlers","isNamedRequiresEnabled","moduleSystem","EXPO_PUBLIC_PROJECT_ROOT","isDirectoryIn","__dirname","watchFolders","transformer","_expoRouterPath","expoConfigPlatforms","entries","platforms","map","Set","concat","targetPath","rootPath","startsWith"],"mappings":"AAAA;;;;;CAKC,GACD;;;;;;;;;;;IAoGgBA,mBAAmB,MAAnBA,mBAAmB;IAsBnBC,oBAAoB,MAApBA,oBAAoB;IAimBpBC,iBAAiB,MAAjBA,iBAAiB;IAgBXC,2BAA2B,MAA3BA,2BAA2B;;;8DA1uBlC,IAAI;;;;;;;+DAIY,gBAAgB;;;;;;;8DAC9B,MAAM;;;;;;;8DACC,cAAc;;;;;;yCAEuB,2BAA2B;2BACL,aAAa;6BACzB,eAAe;qCACpC,uBAAuB;oCAKlE,sBAAsB;qBACT,cAAc;8BACL,6BAA6B;qBACtC,oBAAoB;wBACX,uBAAuB;sBACnB,qBAAqB;6BACxB,4BAA4B;mCACJ,2CAA2C;0CACxD,kDAAkD;8BACvD,4BAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKhE,MAAMC,kBAAkB,GAAG,CAAC,6FAA6F,CAAC,AAAC;AAE3H,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,wCAAwC,CAAC,AAAsB,AAAC;AAE/F,SAASC,gBAAgB,CACvBC,MAAe,EACf,EACEC,eAAe,CAAA,EAGhB,EACQ;IACT,MAAMC,oBAAoB,GAAGF,MAAM,CAACG,UAAU,CAACC,YAAY,GACvDJ,MAAM,CAACG,UAAU,CAACC,YAAY,CAACC,IAAI,CAACL,MAAM,CAACG,UAAU,CAAC,GACtD,IAAM,EAAE,AAAC;IAEb,MAAMC,YAAY,GAAG,CAACE,GAAiC,GAAwB;QAC7E,MAAMC,eAAe,GAAG,CAAC,gCAAgC,CAAC,AAAC;QAE3DC,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEF,eAAe,EACf,CAAC,IAAM;YACL,OAAO,CAAC,EAAE,CAAC,CAAC;QACd,CAAC,CAAC,EAAE,CACL,CAAC;QAEF,MAAMG,eAAe,GAAG,CAAC,2BAA2B,CAAC,AAAC;QAEtDF,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEC,eAAe,EACf,CAAC,IAAM;YACL,IAAIJ,GAAG,CAACK,QAAQ,KAAK,KAAK,EAAE;gBAC1B,OAAO,CAAC,iFAAiF,CAAC,CAAC;YAC7F,OAAO;gBACL,wCAAwC;gBACxC,OAAO,qXAAqX,CAAC;YAC/X,CAAC;QACH,CAAC,CAAC,EAAE,CACL,CAAC;QAEF,IAAIL,GAAG,CAACK,QAAQ,KAAK,KAAK,EAAE;YAC1B,OAAO;gBACLD,eAAe;gBACfH,eAAe;gBACf,2EAA2E;gBAC3E,qCAAqC;gBACrC,gHAAgH;gBAChHT,OAAO,CAACc,OAAO,CAAC,wCAAwC,CAAC;aAC1D,CAAC;QACJ,CAAC;QAED,oCAAoC;QACpC,MAAMC,SAAS,GAAGX,oBAAoB,CAACI,GAAG,CAAC,AAAC;QAC5C,OAAO;eAAIO,SAAS;YAAEH,eAAe;YAAEH,eAAe;SAAC,CAAC;IAC1D,CAAC,AAAC;IAEF,OAAO;QACL,GAAGP,MAAM;QACTG,UAAU,EAAE;YACV,GAAGH,MAAM,CAACG,UAAU;YACpBC,YAAY;SACb;KACF,CAAC;AACJ,CAAC;AAED,SAASU,gBAAgB,CAACC,CAAS,EAAE;IACnC,OAAOA,CAAC,CAACC,OAAO,QAAQ,GAAG,CAAC,CAAC;AAC/B,CAAC;AAEM,SAASxB,mBAAmB,CAACyB,OAA0B,EAAY;IACxE,MAAMC,OAAO,GAAGD,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,GAAK,OAAOC,IAAI,CAACD,GAAG,CAAC,CAAC,AAAC;IAC1D,MAAME,sBAAsB,GAAGL,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,GAAK,CAAC,OAAOC,IAAI,CAACD,GAAG,CAAC,CAAC,AAAC;IAC1E,sCAAsC;IACtC,MAAMG,OAAO,GAAGD,sBAAsB,CAACE,MAAM,CAAC,CAACC,KAAK,EAAEL,GAAG,EAAEM,CAAC,GAAK;QAC/D,OAAO,QAAQL,IAAI,CAACD,GAAG,CAAC,GAAGM,CAAC,GAAGD,KAAK,CAAC;IACvC,CAAC,EAAE,CAAC,CAAC,CAAC,AAAC;IAEP,oDAAoD;IACpDH,sBAAsB,CAACK,MAAM,CAACJ,OAAO,GAAG,CAAC,EAAE,CAAC,KAAKL,OAAO,CAAC,CAAC;IAE1D,OAAOI,sBAAsB,CAAC;AAChC,CAAC;AAUM,SAAS7B,oBAAoB,CAClCO,MAAe,EACf,EACE4B,QAAQ,CAAA,EACRC,sBAAsB,CAAA,EACtBC,qBAAqB,CAAA,EACrBC,WAAW,CAAA,EACXC,oBAAoB,CAAA,EACpBC,8BAA8B,CAAA,EAC9BhC,eAAe,CAAA,EAShB,EACD;QAkBkBD,GAAe,EAETA,IAAe,EAC3BA,IAAe,EACdA,IAAe,EAuHTA,IAAiB;IA5IpC,IAAIiC,8BAA8B,EAAE;QAClCC,IAAG,IAAA,CAACC,IAAI,CACN,CAAC,0FAA0F,CAAC,CAC7F,CAAC;IACJ,CAAC;IACD,IAAIL,qBAAqB,EAAE;QACzBI,IAAG,IAAA,CAACC,IAAI,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,IAAIH,oBAAoB,EAAE;QACxBE,IAAG,IAAA,CAACC,IAAI,CAAC,CAAC,6CAA6C,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,MAAMC,eAAe,GAAGC,cAAa,EAAA,CAACzB,OAAO,AAAC;IAC9C,MAAM0B,QAAQ,GAAGR,qBAAqB,GAClCS,IAAAA,wBAAkB,mBAAA,EAAC;QACjBC,gBAAgB,EAAE,IAAI;QACtBC,SAAS,EAAE,CAACzC,CAAAA,CAAAA,GAAe,GAAfA,MAAM,CAACsC,QAAQ,SAAW,GAA1BtC,KAAAA,CAA0B,GAA1BA,GAAe,CAAEyC,SAAS,CAAA,GAClC,EAAE,GACFC,KAAK,CAACC,OAAO,CAAC3C,CAAAA,IAAe,GAAfA,MAAM,CAACsC,QAAQ,SAAW,GAA1BtC,KAAAA,CAA0B,GAA1BA,IAAe,CAAEyC,SAAS,CAAC,GACvCzC,CAAAA,IAAe,GAAfA,MAAM,CAACsC,QAAQ,SAAW,GAA1BtC,KAAAA,CAA0B,GAA1BA,IAAe,CAAEyC,SAAS,GAC1B;YAACzC,CAAAA,IAAe,GAAfA,MAAM,CAACsC,QAAQ,SAAW,GAA1BtC,KAAAA,CAA0B,GAA1BA,IAAe,CAAEyC,SAAS;SAAC;KACnC,CAAC,GACFL,eAAe,AAAC;IAEpB,MAAMQ,OAAO,GAA8C;QACzDC,GAAG,EAAE;YACH,cAAc,EAAE,kBAAkB;YAClC,oBAAoB,EAAE,kBAAkB;YACxC,iDAAiD,EAAE,qCAAqC;SACzF;KACF,AAAC;IAEF,IAAIC,iBAAiB,AAA2B,AAAC;IAEjD,SAASC,mBAAmB,GAAG;QAC7B,IAAID,iBAAiB,EAAE;YACrB,OAAOA,iBAAiB,CAAC;QAC3B,CAAC;QAEDA,iBAAiB,GAAG,EAAE,CAAC;QAEvB,sFAAsF;QACtF,IAAIE,YAAW,EAAA,QAAA,CAACC,MAAM,CAACjD,MAAM,CAACkD,WAAW,EAAE,oBAAoB,CAAC,EAAE;YAChErD,KAAK,CAAC,iEAAiE,CAAC,CAAC;YACzEiD,iBAAiB,CAACK,IAAI,CAAC;;gBAAsC,sBAAsB;aAAC,CAAC,CAAC;QACxF,CAAC;QACD,IAAIlB,8BAA8B,EAAE;YAClC,IAAIe,YAAW,EAAA,QAAA,CAACC,MAAM,CAACjD,MAAM,CAACkD,WAAW,EAAE,iBAAiB,CAAC,EAAE;gBAC7DrD,KAAK,CAAC,uDAAuD,CAAC,CAAC;gBAC/DiD,iBAAiB,CAACK,IAAI,CAAC;;oBAAkB,iBAAiB;iBAAC,CAAC,CAAC;gBAC7D,oHAAoH;gBACpHL,iBAAiB,CAACK,IAAI,CAAC;;oBAAiC,uBAAuB;iBAAC,CAAC,CAAC;YACpF,CAAC;QACH,CAAC;QACD,OAAOL,iBAAiB,CAAC;IAC3B,CAAC;IAED,MAAMM,mBAAmB,GAAgC;QACvD,mFAAmF;QACnF,wEAAwE;QACxE,2CAA2C;QAC3CP,GAAG,EAAE;YAAC,SAAS;YAAE,QAAQ;YAAE,MAAM;SAAC;KACnC,AAAC;IAEF,IAAIQ,eAAe,GACjBxB,sBAAsB,IAAI,CAACD,CAAAA,QAAQ,QAAO,GAAfA,KAAAA,CAAe,GAAfA,QAAQ,CAAE0B,KAAK,CAAA,IAAI1B,CAAAA,QAAQ,QAAS,GAAjBA,KAAAA,CAAiB,GAAjBA,QAAQ,CAAE2B,OAAO,CAAA,IAAI,IAAI,CAAC,GACpEC,yBAAwB,yBAAA,CAACnD,IAAI,CAACmD,yBAAwB,yBAAA,EAAE;QACtDF,KAAK,EAAE1B,QAAQ,CAAC0B,KAAK,IAAI,EAAE;QAC3BC,OAAO,EAAE3B,QAAQ,CAAC2B,OAAO,IAAIvD,MAAM,CAACkD,WAAW;QAC/CO,UAAU,EAAE,CAAC,CAAC7B,QAAQ,CAAC2B,OAAO;KAC/B,CAAC,GACF,IAAI,AAAC;IAEX,0DAA0D;IAC1D,IAAI,CAACxB,WAAW,IAAI2B,IAAAA,YAAa,cAAA,GAAE,EAAE;QACnC,IAAI7B,sBAAsB,EAAE;YAC1B,4EAA4E;YAC5E,yEAAyE;YACzE,uBAAuB;YACvB,MAAM8B,aAAa,GAAG,IAAIC,aAAY,aAAA,CAAC5D,MAAM,CAACkD,WAAW,EAAE;gBACzD,iBAAiB;gBACjB,iBAAiB;aAClB,CAAC,AAAC;YACHS,aAAa,CAACE,cAAc,CAAC,IAAM;gBACjChE,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACjCiE,IAAAA,kBAAsB,uBAAA,EAAC9D,MAAM,CAACkD,WAAW,CAAC,CAACa,IAAI,CAAC,CAACC,aAAa,GAAK;oBACjE,IAAIA,CAAAA,aAAa,QAAO,GAApBA,KAAAA,CAAoB,GAApBA,aAAa,CAAEV,KAAK,CAAA,IAAI,CAAC,CAACW,MAAM,CAACC,IAAI,CAACF,aAAa,CAACV,KAAK,CAAC,CAACa,MAAM,EAAE;wBACrEtE,KAAK,CAAC,sCAAsC,CAAC,CAAC;wBAC9CwD,eAAe,GAAGG,yBAAwB,yBAAA,CAACnD,IAAI,CAACmD,yBAAwB,yBAAA,EAAE;4BACxEF,KAAK,EAAEU,aAAa,CAACV,KAAK,IAAI,EAAE;4BAChCC,OAAO,EAAES,aAAa,CAACT,OAAO,IAAIvD,MAAM,CAACkD,WAAW;4BACpDO,UAAU,EAAE,CAAC,CAACO,aAAa,CAACT,OAAO;yBACpC,CAAC,CAAC;oBACL,OAAO;wBACL1D,KAAK,CAAC,uCAAuC,CAAC,CAAC;wBAC/CwD,eAAe,GAAG,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,yDAAyD;YACzDe,IAAAA,KAAgB,iBAAA,EAAC,IAAM;gBACrBT,aAAa,CAACU,aAAa,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,OAAO;YACLxE,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAED,IAAIyB,sBAAsB,GAAoB,IAAI,AAAC;IAEnD,SAASgD,iBAAiB,CACxB,EAAEC,cAAc,CAAA,EAAE,GAAGC,OAAO,EAAqB,EACjD7D,QAAuB,EACvB;QACA,OAAO,SAAS8D,SAAS,CAACC,UAAkB,EAAc;YACxD,OAAOpC,QAAQ,CAACkC,OAAO,EAAEE,UAAU,EAAE/D,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,SAASgE,mBAAmB,CAACH,OAA0B,EAAE7D,QAAuB,EAAE;QAChF,MAAM8D,SAAS,GAAGH,iBAAiB,CAACE,OAAO,EAAE7D,QAAQ,CAAC,AAAC;QACvD,OAAO,SAASiE,eAAe,CAACF,UAAkB,EAAqB;YACrE,IAAI;gBACF,OAAOD,SAAS,CAACC,UAAU,CAAC,CAAC;YAC/B,EAAE,OAAOG,KAAK,EAAE;gBACd,0FAA0F;gBAC1F,2FAA2F;gBAC3F,MAAMC,iBAAiB,GACrBC,IAAAA,YAA0B,2BAAA,EAACF,KAAK,CAAC,IAAIG,IAAAA,YAA0B,2BAAA,EAACH,KAAK,CAAC,AAAC;gBACzE,IAAI,CAACC,iBAAiB,EAAE;oBACtB,MAAMD,KAAK,CAAC;gBACd,CAAC;YACH,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;IACJ,CAAC;IAED,mDAAmD;IACnD,MAAMI,SAAS,GAAIjF,CAAAA,CAAAA,IAAiB,GAAjBA,MAAM,CAACG,UAAU,SAAuB,GAAxCH,KAAAA,CAAwC,GAAxCA,IAAiB,CAAEkF,qBAAqB,QAAI,GAA5ClF,KAAAA,CAA4C,GAA5CA,IAAiB,CAAEkF,qBAAqB,EAAI,KAC7D,CAAC,CAACC,EAAmB,EAAEX,OAAmD,GACxEW,EAAE,CAAC,AAGa,AAAC;IAErB,MAAMC,sBAAsB,GAAG,IAAM;QACnC,MAAM1E,eAAe,GAAG,CAAC,0BAA0B,CAAC,AAAC;QACrDF,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEC,eAAe,EACfd,kBAAkB,CACnB,CAAC;QACF,OAAO;YACLyF,IAAI,EAAE,YAAY;YAClBC,QAAQ,EAAE5E,eAAe;SAC1B,CAAU;IACb,CAAC,AAAC;IAEF,wGAAwG;IACxG,yDAAyD;IACzD,MAAM6E,SAAS,GAGT;QACJ;YACEC,KAAK,EAAE,CAAChB,OAA0B,EAAEE,UAAkB,GAAK;oBAKlCF,GAA6B,EAKhDA,IAA6B;gBATjC,IACE,4DAA4D;gBAC5DA,OAAO,CAACiB,qBAAqB,CAACC,SAAS,IACvC,qDAAqD;gBACrD,CAACC,IAAAA,aAAmB,oBAAA,EAACnB,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,CAAC,EAChE;oBACA,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,IAAIpB,CAAAA,CAAAA,IAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,IAA6B,CAAEoB,WAAW,CAAA,KAAK,cAAc,EAAE;oBACjE,+GAA+G;oBAC/G,OAAO,0PAA0PvE,IAAI,CACnQqD,UAAU,CACX,CAAC;gBACJ,CAAC;gBAED,mDAAmD;gBACnD,IAAImB,OAAO,CAAClF,QAAQ,KAAK,OAAO,EAAE;oBAChC,OAAO,gCAAgCU,IAAI,CAACqD,UAAU,CAAC,CAAC;gBAC1D,CAAC;gBAED,0GAA0G;gBAC1G,4CAA4C;gBAC5C,OAAO,8dAA8drD,IAAI,CACveqD,UAAU,CACX,CAAC;YACJ,CAAC;YACD1D,OAAO,EAAE,MAAM;SAChB;QACD,+GAA+G;QAC/G;YACEwE,KAAK,EAAE,CAAChB,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;oBAK5D6D,GAA6B;gBAJnD,IACE,4DAA4D;gBAC5DA,OAAO,CAACiB,qBAAqB,CAACC,SAAS,IACvC,oDAAoD;gBACpDC,IAAAA,aAAmB,oBAAA,EAACnB,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,CAAC,IAC/D,oCAAoC;gBACpC,CAACpB,OAAO,CAACiB,qBAAqB,CAACK,cAAc,EAC7C;oBACA,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,uDAAuD;gBACvD,IAAIpB,UAAU,CAACqB,QAAQ,CAAC,eAAe,CAAC,EAAE;oBACxC,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,MAAMC,UAAU,GACd,mIAAmI3E,IAAI,CACrIqD,UAAU,CACX,IACD,iBAAiB;gBACjB,gDAAgDrD,IAAI,CAACqD,UAAU,CAAC,AAAC;gBAEnE,OAAOsB,UAAU,CAAC;YACpB,CAAC;YACDhF,OAAO,EAAE,MAAM;SAChB;KACF,AAAC;IAEF,MAAMiF,6BAA6B,GAAGC,IAAAA,mBAAkB,mBAAA,EAAClG,MAAM,EAAE;QAC/D,oDAAoD;QACpD,CAACwE,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;YAC3E,gGAAgG;YAChG,IAAI,CAAC6D,OAAO,CAAC2B,GAAG,EAAE,OAAO,IAAI,CAAC;YAE9B,IACE,gCAAgC;YAChC,CAACxF,QAAQ,KAAK,KAAK,IACjB6D,OAAO,CAAC4B,gBAAgB,CAACZ,KAAK,2CAA2C,IACzEd,UAAU,CAACc,KAAK,+CAA+C,CAAC,IAClE,kCAAkC;YAClC,CAACd,UAAU,CAACc,KAAK,6BAA6B,IAC5C,uDAAuD;YACvDhB,OAAO,CAAC4B,gBAAgB,CAACZ,KAAK,sDAAsD,CAAC,EACvF;gBACA3F,KAAK,CAAC,CAAC,4BAA4B,EAAE6E,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnD,gFAAgF;gBAChF,0GAA0G;gBAC1G,sFAAsF;gBACtF,0GAA0G;gBAC1G,gIAAgI;gBAChI,gHAAgH;gBAChH,OAAO;oBACLW,IAAI,EAAE,OAAO;iBACd,CAAC;YACJ,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,iBAAiB;QACjB,CAACb,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;YAC3E,OACE0C,CAAAA,eAAe,QAMd,GANDA,KAAAA,CAMC,GANDA,eAAe,CACb;gBACE+C,gBAAgB,EAAE5B,OAAO,CAAC4B,gBAAgB;gBAC1C1B,UAAU;aACX,EACDC,mBAAmB,CAACH,OAAO,EAAE7D,QAAQ,CAAC,CACvC,KAAI,IAAI,CACT;QACJ,CAAC;QAED,4BAA4B;QAC5B,CAAC6D,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;gBAEzE6D,GAA6B,EAC7BA,IAA6B;YAF/B,MAAM6B,QAAQ,GACZ7B,CAAAA,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,CAAA,KAAK,MAAM,IACrDpB,CAAAA,CAAAA,IAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,IAA6B,CAAEoB,WAAW,CAAA,KAAK,cAAc,AAAC;YAEhE,MAAMU,QAAQ,GAAGC,IAAAA,UAAc,eAAA,EAAC7B,UAAU,CAAC,AAAC;YAC5C,IAAI,CAAC4B,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAC;YACd,CAAC;YAED,IACE,6GAA6G;YAC7G,wDAAwD;YACxD,CAACD,QAAQ,EACT;gBACA,8FAA8F;gBAC9F,oDAAoD;gBACpD,MAAMG,MAAM,GAAG7B,mBAAmB,CAACH,OAAO,EAAE7D,QAAQ,CAAC,CAAC+D,UAAU,CAAC,AAAC;gBAElE,IAAI,CAAC8B,MAAM,IAAI7F,QAAQ,KAAK,KAAK,EAAE;oBACjC,gFAAgF;oBAChF,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,OACE6F,MAAM,IAAI;oBACR,sDAAsD;oBACtDnB,IAAI,EAAE,OAAO;iBACd,CACD;YACJ,CAAC;YACD,MAAMoB,QAAQ,GAAG,CAAC,wCAAwC,EAAEH,QAAQ,CAAC,GAAG,CAAC,AAAC;YAC1EzG,KAAK,CAAC,CAAC,sBAAsB,EAAEyG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM5F,eAAe,GAAG,CAAC,OAAO,EAAE4F,QAAQ,CAAC,CAAC,AAAC;YAC7C9F,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEC,eAAe,EACf+F,QAAQ,CACT,CAAC;YACF,OAAO;gBACLpB,IAAI,EAAE,YAAY;gBAClBC,QAAQ,EAAE5E,eAAe;aAC1B,CAAC;QACJ,CAAC;QAED,2BAA2B;QAC3B,CAAC8D,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;gBAKvD6D,GAA6B;YAJjD,uDAAuD;YACvD,IAAIE,UAAU,CAACqB,QAAQ,CAAC,eAAe,CAAC,EAAE;gBACxC,OAAO,IAAI,CAAC;YACd,CAAC;YACD,MAAMH,WAAW,GAAGpB,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,AAAC;YAE/D,MAAMc,aAAa,GAAGpC,iBAAiB,CAACE,OAAO,EAAE7D,QAAQ,CAAC,AAAC;YAE3D,KAAK,MAAMgG,QAAQ,IAAIpB,SAAS,CAAE;gBAChC,IAAIoB,QAAQ,CAACnB,KAAK,CAAChB,OAAO,EAAEE,UAAU,EAAE/D,QAAQ,CAAC,EAAE;oBACjD,IAAIgG,QAAQ,CAAC3F,OAAO,KAAK,OAAO,EAAE;wBAChCnB,KAAK,CAAC,CAAC,sBAAsB,EAAE6E,UAAU,CAAC,MAAM,EAAEiC,QAAQ,CAAC3F,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvE,OAAO;4BACLqE,IAAI,EAAEsB,QAAQ,CAAC3F,OAAO;yBACvB,CAAC;oBACJ,OAAO,IAAI2F,QAAQ,CAAC3F,OAAO,KAAK,MAAM,EAAE;wBACtC,sGAAsG;wBACtG,MAAM4F,UAAU,GAAGF,aAAa,CAAChC,UAAU,CAAC,AAAC;wBAC7C,MAAMmC,QAAQ,GAAGD,UAAU,CAACvB,IAAI,KAAK,YAAY,GAAGuB,UAAU,CAACtB,QAAQ,GAAGZ,UAAU,AAAC;wBACrF,MAAMoC,QAAQ,GAAG7B,SAAS,CAAC4B,QAAQ,EAAE;4BACnClG,QAAQ,EAAEA,QAAQ;4BAClBiF,WAAW;yBACZ,CAAC,AAAC;wBAEH,MAAMa,QAAQ,GACZ,OAAOK,QAAQ,KAAK,QAAQ,GACxB,CAAC,iBAAiB,EAAEpC,UAAU,CAAC,MAAM,EAAEoC,QAAQ,CAAC,CAAC,CAAC,GAClD,CAAC,iBAAiB,EAAEpC,UAAU,CAAC,MAAM,EAAEqC,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC,AAAC;wBACzE,gGAAgG;wBAChG,wDAAwD;wBACxD,MAAMpG,eAAe,GAAG,CAAC,OAAO,EAAEoG,QAAQ,CAAC,CAAC,AAAC;wBAC7CjH,KAAK,CAAC,sBAAsB,EAAE6E,UAAU,EAAE,IAAI,EAAEhE,eAAe,CAAC,CAAC;wBACjEF,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEC,eAAe,EACf+F,QAAQ,CACT,CAAC;wBACF,OAAO;4BACLpB,IAAI,EAAE,YAAY;4BAClBC,QAAQ,EAAE5E,eAAe;yBAC1B,CAAC;oBACJ,OAAO,IAAIiG,QAAQ,CAAC3F,OAAO,KAAK,MAAM,EAAE;wBACtC,MAAMyF,SAAQ,GAAG,CAAC,mCAAmC,EAAE/B,UAAU,CAAC,EAAE,CAAC,AAAC;wBACtE,MAAMhE,gBAAe,GAAG,CAAC,OAAO,EAAEgE,UAAU,CAAC,CAAC,AAAC;wBAC/C7E,KAAK,CAAC,gCAAgC,EAAE6E,UAAU,EAAE,IAAI,EAAEhE,gBAAe,CAAC,CAAC;wBAC3EF,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,CAACQ,gBAAgB,CACnEC,gBAAe,EACf+F,SAAQ,CACT,CAAC;wBACF,OAAO;4BACLpB,IAAI,EAAE,YAAY;4BAClBC,QAAQ,EAAE5E,gBAAe;yBAC1B,CAAC;oBACJ,OAAO;wBACL,MAAM,IAAIuG,OAAY,aAAA,CACpB,CAAC,8BAA8B,EAAEN,QAAQ,CAAC3F,OAAO,CAAC,cAAc,EAAE0D,UAAU,CAAC,aAAa,EAAE/D,QAAQ,CAAC,oBAAoB,EAAE6D,OAAO,CAAC4B,gBAAgB,CAAC,CAAC,CAAC,CACvJ,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,yBAAyB;QACzB,CAAC5B,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;YAC3E,qEAAqE;YACrE,yDAAyD;YACzD,IAAIA,QAAQ,IAAIA,QAAQ,IAAIiC,OAAO,IAAIA,OAAO,CAACjC,QAAQ,CAAC,CAAC+D,UAAU,CAAC,EAAE;gBACpE,MAAMwC,oBAAoB,GAAGtE,OAAO,CAACjC,QAAQ,CAAC,CAAC+D,UAAU,CAAC,AAAC;gBAC3D,OAAOJ,iBAAiB,CAACE,OAAO,EAAE7D,QAAQ,CAAC,CAACuG,oBAAoB,CAAC,CAAC;YACpE,CAAC;YAED,KAAK,MAAM,CAACC,OAAO,EAAEC,KAAK,CAAC,IAAIrE,mBAAmB,EAAE,CAAE;gBACpD,MAAMyC,KAAK,GAAGd,UAAU,CAACc,KAAK,CAAC2B,OAAO,CAAC,AAAC;gBACxC,IAAI3B,KAAK,EAAE;oBACT,MAAM6B,aAAa,GAAGD,KAAK,CAACpG,OAAO,aAEjC,CAACsG,CAAC,EAAE7F,KAAK,GAAK+D,KAAK,CAAC+B,QAAQ,CAAC9F,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAC/C,AAAC;oBACF,MAAMgD,SAAS,GAAGH,iBAAiB,CAACE,OAAO,EAAE7D,QAAQ,CAAC,AAAC;oBACvDd,KAAK,CAAC,CAAC,OAAO,EAAE6E,UAAU,CAAC,MAAM,EAAE2C,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,OAAO5C,SAAS,CAAC4C,aAAa,CAAC,CAAC;gBAClC,CAAC;YACH,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAED,8BAA8B;QAC9B,CAAC7C,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;YAC3E,IAAI,oDAAoDU,IAAI,CAACqD,UAAU,CAAC,EAAE;gBACxE,OAAOU,sBAAsB,EAAE,CAAC;YAClC,CAAC;YAED,IACEzE,QAAQ,KAAK,KAAK,IAClB6D,OAAO,CAAC4B,gBAAgB,CAACZ,KAAK,0CAA0C,IACxEd,UAAU,CAAC8C,QAAQ,CAAC,wBAAwB,CAAC,EAC7C;gBACA,OAAOpC,sBAAsB,EAAE,CAAC;YAClC,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAED,wDAAwD;QACxD,oCAAoC;QACpC,CAACZ,OAA0B,EAAEE,UAAkB,EAAE/D,QAAuB,GAAK;YAC3E,MAAM8D,SAAS,GAAGH,iBAAiB,CAACE,OAAO,EAAE7D,QAAQ,CAAC,AAAC;YAEvD,MAAM6F,MAAM,GAAG/B,SAAS,CAACC,UAAU,CAAC,AAAC;YAErC,IAAI8B,MAAM,CAACnB,IAAI,KAAK,YAAY,EAAE;gBAChC,OAAOmB,MAAM,CAAC;YAChB,CAAC;YAED,IAAI7F,QAAQ,KAAK,KAAK,EAAE;gBACtB,IAAI6F,MAAM,CAAClB,QAAQ,CAACkC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBAC5C,wDAAwD;oBACxD,IAAI9C,UAAU,CAAC8C,QAAQ,CAAC,wDAAwD,CAAC,EAAE;wBACjF,MAAM,IAAIC,wBAAwB,yBAAA,CAChC,CAAC,8BAA8B,EAAE/C,UAAU,CAAC,eAAe,EAAEF,OAAO,CAAC4B,gBAAgB,CAAC,CAAC,CACxF,CAAC;oBACJ,CAAC;oBAED,4BAA4B;oBAE5B,MAAMsB,UAAU,GAAG5G,gBAAgB,CAAC0F,MAAM,CAAClB,QAAQ,CAAC,AAClD,sDAAsD;qBACrDtE,OAAO,qBAAqB,EAAE,CAAC,AAAC;oBAEnC,MAAM2G,QAAQ,GAAGC,IAAAA,UAAuB,wBAAA,EAACF,UAAU,CAAC,AAAC;oBACrD,IAAIC,QAAQ,EAAE;wBACZ,MAAME,SAAS,GAAG,CAAC,OAAO,EAAEH,UAAU,CAAC,CAAC,AAAC;wBACzC,MAAMI,OAAO,GAAGtH,IAAAA,oBAAiC,kCAAA,EAACP,eAAe,EAAE,CAAC,AAAC;wBACrE,IAAI,CAAC6H,OAAO,CAACC,gBAAgB,CAACF,SAAS,CAAC,EAAE;4BACxCC,OAAO,CAACrH,gBAAgB,CAACoH,SAAS,EAAEG,GAAE,EAAA,QAAA,CAACC,YAAY,CAACN,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;wBACzE,CAAC;wBACD9H,KAAK,CAAC,CAAC,oBAAoB,EAAE2G,MAAM,CAAClB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;wBAEzD,OAAO;4BACL,GAAGkB,MAAM;4BACTlB,QAAQ,EAAEuC,SAAS;yBACpB,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,OAAO;oBAEHrD,GAA6B,EAC7BA,IAA6B;gBAF/B,MAAM6B,QAAQ,GACZ7B,CAAAA,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,CAAA,KAAK,MAAM,IACrDpB,CAAAA,CAAAA,IAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,IAA6B,CAAEoB,WAAW,CAAA,KAAK,cAAc,AAAC;gBAEhE,6CAA6C;gBAC7C,MAAMsC,MAAM,GAAGpH,gBAAgB,CAAC0F,MAAM,CAAClB,QAAQ,CAAC,AAAC;gBAEjD,0EAA0E;gBAC1E,IAAIe,QAAQ,EAAE;oBACZ,IAAI6B,MAAM,CAACnC,QAAQ,CAAC,+CAA+C,CAAC,EAAE;wBACpEoC,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC,CAAC;wBACjF,OAAO;4BACL/C,IAAI,EAAE,OAAO;yBACd,CAAC;oBACJ,CAAC;gBACH,CAAC;gBAED,2FAA2F;gBAC3F,4EAA4E;gBAC5E,IAAIrD,oBAAoB,IAAIwE,MAAM,CAAClB,QAAQ,CAACkC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBACpE,MAAME,WAAU,GAAG5G,gBAAgB,CAAC0F,MAAM,CAAClB,QAAQ,CAAC,AAClD,sDAAsD;qBACrDtE,OAAO,qBAAqB,EAAE,CAAC,AAAC;oBAEnC,MAAMqH,UAAU,GAAGC,IAAAA,UAAyB,0BAAA,EAACZ,WAAU,CAAC,AAAC;oBACzD,IAAIW,UAAU,EAAE;wBACdxI,KAAK,CAAC,CAAC,iCAAiC,EAAE2G,MAAM,CAAClB,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBAC9E,OAAO;4BACL,GAAGkB,MAAM;4BACTlB,QAAQ,EAAE+C,UAAU;yBACrB,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC;YAED,OAAO7B,MAAM,CAAC;QAChB,CAAC;KACF,CAAC,AAAC;IAEH,qGAAqG;IACrG,MAAM+B,4BAA4B,GAAGC,IAAAA,mBAA+B,gCAAA,EAClEvC,6BAA6B,EAC7B,CACEwC,gBAAyC,EACzC/D,UAAkB,EAClB/D,QAAuB,GACK;YAiBJ6D,GAA6B;QAhBrD,MAAMA,OAAO,GAAqC;YAChD,GAAGiE,gBAAgB;YACnBC,oBAAoB,EAAE/H,QAAQ,KAAK,KAAK;SACzC,AAAC;QAEF,qEAAqE;QACrE,IACEqB,oBAAoB,IACpB,sFAAsF;QACtF,8CAA8CX,IAAI,CAACqD,UAAU,CAAC,EAC9D;YACAF,OAAO,CAACmE,gBAAgB,GAAG;gBACzBC,KAAI,EAAA,QAAA,CAACC,IAAI,CAAC/I,OAAO,CAACc,OAAO,CAAC,wBAAwB,CAAC,EAAE,uBAAuB,CAAC;aAC9E,CAAC;QACJ,CAAC;QAED,IAAI+E,IAAAA,aAAmB,oBAAA,EAACnB,CAAAA,GAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,GAA6B,CAAEoB,WAAW,CAAC,EAAE;gBAWjEpB,IAA6B,EAyB3BA,IAA6B;YAnCjC,qFAAqF;YACrF,IAAIlD,sBAAsB,KAAK,IAAI,EAAE;gBACnCA,sBAAsB,GAAG9B,mBAAmB,CAACgF,OAAO,CAACsE,UAAU,CAAC,CAAC;YACnE,CAAC;YACDtE,OAAO,CAACsE,UAAU,GAAGxH,sBAAsB,CAAC;YAE5CkD,OAAO,CAACuE,6BAA6B,GAAG,IAAI,CAAC;YAC7CvE,OAAO,CAACwE,6BAA6B,GAAG,EAAE,CAAC;YAE3C,MAAMC,uBAAuB,GAC3BzE,CAAAA,CAAAA,IAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,IAA6B,CAAEoB,WAAW,CAAA,KAAK,cAAc,AAAC;YAEhE,IAAIqD,uBAAuB,EAAE;gBAC3B,uIAAuI;gBACvI,qGAAqG;gBACrG,IAAItI,QAAQ,KAAK,KAAK,EAAE;oBACtB,gEAAgE;oBAChE,yEAAyE;oBACzE6D,OAAO,CAAC0E,UAAU,GAAG;wBAAC,QAAQ;wBAAE,MAAM;qBAAC,CAAC;gBAC1C,OAAO;oBACL,qDAAqD;oBACrD1E,OAAO,CAAC0E,UAAU,GAAG;wBAAC,cAAc;wBAAE,QAAQ;wBAAE,MAAM;qBAAC,CAAC;gBAC1D,CAAC;YACH,OAAO;gBACL,IAAIvI,QAAQ,KAAK,KAAK,EAAE;oBACtB,gEAAgE;oBAChE,yEAAyE;oBACzE6D,OAAO,CAAC0E,UAAU,GAAG;wBAAC,MAAM;wBAAE,QAAQ;qBAAC,CAAC;gBAC1C,OAAO;oBACL,qDAAqD;oBACrD1E,OAAO,CAAC0E,UAAU,GAAG;wBAAC,cAAc;wBAAE,MAAM;wBAAE,QAAQ;qBAAC,CAAC;gBAC1D,CAAC;YACH,CAAC;YAED,yCAAyC;YACzC,IAAI1E,CAAAA,CAAAA,IAA6B,GAA7BA,OAAO,CAACiB,qBAAqB,SAAa,GAA1CjB,KAAAA,CAA0C,GAA1CA,IAA6B,CAAEoB,WAAW,CAAA,KAAK,cAAc,EAAE;gBACjEpB,OAAO,CAAC2E,uBAAuB,GAAG;oBAChC,MAAM;oBACN,QAAQ;oBACR,SAAS;oBACT,cAAc;oBACd,SAAS;iBACV,CAAC;YACJ,OAAO;gBACL3E,OAAO,CAAC2E,uBAAuB,GAAG;oBAAC,MAAM;oBAAE,SAAS;iBAAC,CAAC;YACxD,CAAC;QACH,OAAO;YACL,qBAAqB;YAErB,IAAI,CAACC,IAAG,IAAA,CAACC,iCAAiC,IAAI1I,QAAQ,IAAIA,QAAQ,IAAIyC,mBAAmB,EAAE;gBACzFoB,OAAO,CAAC0E,UAAU,GAAG9F,mBAAmB,CAACzC,QAAQ,CAAC,CAAC;YACrD,CAAC;QACH,CAAC;QAED,OAAO6D,OAAO,CAAC;IACjB,CAAC,CACF,AAAC;IAEF,OAAO8E,IAAAA,mBAA+B,gCAAA,EAACf,4BAA4B,CAAC,CAAC;AACvE,CAAC;AAGM,SAAS7I,iBAAiB,CAC/B6J,KAGC,EACDnC,KAA2C,EAClC;QAGPmC,GAAY,EACLA,IAAY;IAHrB,OACEA,KAAK,CAAC5I,QAAQ,KAAKyG,KAAK,CAACzG,QAAQ,IACjC4I,CAAAA,CAAAA,GAAY,GAAZA,KAAK,CAAC/C,MAAM,SAAM,GAAlB+C,KAAAA,CAAkB,GAAlBA,GAAY,CAAElE,IAAI,CAAA,KAAK,YAAY,IACnC,OAAOkE,CAAAA,CAAAA,IAAY,GAAZA,KAAK,CAAC/C,MAAM,SAAU,GAAtB+C,KAAAA,CAAsB,GAAtBA,IAAY,CAAEjE,QAAQ,CAAA,KAAK,QAAQ,IAC1CxE,gBAAgB,CAACyI,KAAK,CAAC/C,MAAM,CAAClB,QAAQ,CAAC,CAACS,QAAQ,CAACqB,KAAK,CAACoC,MAAM,CAAC,CAC9D;AACJ,CAAC;AAGM,eAAe7J,2BAA2B,CAC/CuD,WAAmB,EACnB,EACElD,MAAM,CAAA,EACNyJ,GAAG,CAAA,EACHC,gBAAgB,CAAA,EAChB7H,sBAAsB,CAAA,EACtBC,qBAAqB,CAAA,EACrBC,WAAW,CAAA,EACXC,oBAAoB,CAAA,EACpB2H,sBAAsB,CAAA,EACtB1H,8BAA8B,CAAA,EAC9BhC,eAAe,CAAA,EAYhB,EACD;IACA,IAAI0J,sBAAsB,EAAE;QAC1B9J,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC3C,mFAAmF;QACnFC,OAAO,CAAC,oCAAoC,CAAC,CAAC8J,YAAY,GAAG9J,OAAO,CAACc,OAAO,CAC1E,uCAAuC,CACxC,CAAC;IACJ,CAAC;IAED,IAAI,CAACZ,MAAM,CAACkD,WAAW,EAAE;QACvB,oCAAoC;QACpClD,MAAM,CAACkD,WAAW,GAAGA,WAAW,CAAC;IACnC,CAAC;IAED,sEAAsE;IACtE2C,OAAO,CAACuD,GAAG,CAACS,wBAAwB,GAAGhE,OAAO,CAACuD,GAAG,CAACS,wBAAwB,IAAI3G,WAAW,CAAC;IAE3F,0FAA0F;IAC1F,IAAI,CAAC4G,aAAa,CAACC,SAAS,EAAE7G,WAAW,CAAC,EAAE;QAC1C,IAAI,CAAClD,MAAM,CAACgK,YAAY,EAAE;YACxB,6CAA6C;YAC7ChK,MAAM,CAACgK,YAAY,GAAG,EAAE,CAAC;QAC3B,CAAC;QACD,6CAA6C;QAC7ChK,MAAM,CAACgK,YAAY,CAAC7G,IAAI,CAACyF,KAAI,EAAA,QAAA,CAACC,IAAI,CAAC/I,OAAO,CAACc,OAAO,CAAC,4BAA4B,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;QAC5F,IAAIoB,oBAAoB,EAAE;YACxB,6CAA6C;YAC7ChC,MAAM,CAACgK,YAAY,CAAC7G,IAAI,CAACyF,KAAI,EAAA,QAAA,CAACC,IAAI,CAAC/I,OAAO,CAACc,OAAO,CAAC,wBAAwB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAED,oBAAoB;IACpB,2FAA2F;IAC3FZ,MAAM,CAACiK,WAAW,CAACC,eAAe,GAAGlH,YAAW,EAAA,QAAA,CAACC,MAAM,CAACC,WAAW,EAAE,aAAa,CAAC,CAAC;IAEpF,IAAItB,QAAQ,GAAyB,IAAI,AAAC;IAE1C,IAAIC,sBAAsB,EAAE;QAC1BD,QAAQ,GAAG,MAAMkC,IAAAA,kBAAsB,uBAAA,EAACZ,WAAW,CAAC,CAAC;IACvD,CAAC;IAED,IAAIiH,mBAAmB,GAAGlG,MAAM,CAACmG,OAAO,CAACV,gBAAgB,CAAC,CACvDvI,MAAM,CACL,CAAC,CAACR,QAAQ,EAAEmH,OAAO,CAAC;YAA4B2B,GAAa;QAApC3B,OAAAA,OAAO,KAAK,OAAO,KAAI2B,CAAAA,GAAa,GAAbA,GAAG,CAACY,SAAS,SAAU,GAAvBZ,KAAAA,CAAuB,GAAvBA,GAAa,CAAEjC,QAAQ,CAAC7G,QAAQ,CAAa,CAAA,CAAA;KAAA,CAC9F,CACA2J,GAAG,CAAC,CAAC,CAAC3J,QAAQ,CAAC,GAAKA,QAAQ,CAAC,AAAC;IAEjC,IAAI+B,KAAK,CAACC,OAAO,CAAC3C,MAAM,CAACsC,QAAQ,CAAC+H,SAAS,CAAC,EAAE;QAC5CF,mBAAmB,GAAG;eAAI,IAAII,GAAG,CAACJ,mBAAmB,CAACK,MAAM,CAACxK,MAAM,CAACsC,QAAQ,CAAC+H,SAAS,CAAC,CAAC;SAAC,CAAC;IAC5F,CAAC;IAED,yCAAyC;IACzCrK,MAAM,CAACsC,QAAQ,CAAC+H,SAAS,GAAGF,mBAAmB,CAAC;IAEhDnK,MAAM,GAAGD,gBAAgB,CAACC,MAAM,EAAE;QAAEC,eAAe;KAAE,CAAC,CAAC;IAEvD,OAAOR,oBAAoB,CAACO,MAAM,EAAE;QAClC4B,QAAQ;QACRG,WAAW;QACXF,sBAAsB;QACtBC,qBAAqB;QACrBE,oBAAoB;QACpBC,8BAA8B;QAC9BhC,eAAe;KAChB,CAAC,CAAC;AACL,CAAC;AAED,SAAS6J,aAAa,CAACW,UAAkB,EAAEC,QAAgB,EAAE;IAC3D,OAAOD,UAAU,CAACE,UAAU,CAACD,QAAQ,CAAC,IAAID,UAAU,CAACtG,MAAM,IAAIuG,QAAQ,CAACvG,MAAM,CAAC;AACjF,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js b/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js
index 0547af5..d32b51c 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js
@@ -65,15 +65,23 @@ async function queryInspectorAppAsync(metroServerOrigin, appId) {
 }
 async function queryAllInspectorAppsAsync(metroServerOrigin) {
     const resp = await fetch(`${metroServerOrigin}/json/list`);
-    const apps = transformApps(await resp.json());
+    // The newest runtime will be at the end of the list,
+    // reversing the result would save time from try-error.
+    const apps = transformApps(await resp.json()).reverse();
     const results = [];
     for (const app of apps){
         // Only use targets with better reloading support
         if (!(0, _pageIsSupported.pageIsSupported)(app)) {
             continue;
         }
-        // Hide targets that are marked as hidden from the inspector, e.g. instances from expo-dev-menu and expo-dev-launcher.
-        if (await appShouldBeIgnoredAsync(app)) {
+        try {
+            // Hide targets that are marked as hidden from the inspector, e.g. instances from expo-dev-menu and expo-dev-launcher.
+            if (await appShouldBeIgnoredAsync(app)) {
+                continue;
+            }
+        } catch (e) {
+            // If we can't evaluate the JS, we just ignore the error and skips the target.
+            debug(`Can't evaluate the JS on the app:`, JSON.stringify(e, null, 2));
             continue;
         }
         results.push(app);
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js.map b/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js.map
index ab1f7c0..9457e52 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js.map
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/inspector/JsInspector.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../../../../src/start/server/middleware/inspector/JsInspector.ts"],"sourcesContent":["import type { CustomMessageHandlerConnection } from '@react-native/dev-middleware';\nimport chalk from 'chalk';\n\nimport { evaluateJsFromCdpAsync } from './CdpClient';\nimport { selectAsync } from '../../../../utils/prompts';\nimport { pageIsSupported } from '../../metro/debugging/pageIsSupported';\n\nconst debug = require('debug')(\n  'expo:start:server:middleware:inspector:jsInspector'\n) as typeof console.log;\n\nexport interface MetroInspectorProxyApp {\n  /** Unique device ID combined with the page ID */\n  id: string;\n  /** Information about the underlying CDP implementation, e.g. \"React Native Bridgeless [C++ connection]\" */\n  title: string;\n  /** The application ID that is currently running on the device, e.g. \"dev.expo.bareexpo\" */\n  description: string;\n  /** The CDP debugger type, which should always be \"node\" */\n  type: 'node';\n  /** The internal `devtools://..` URL for the debugger to connect to */\n  devtoolsFrontendUrl: string;\n  /** The websocket URL for the debugger to connect to */\n  webSocketDebuggerUrl: string;\n  /**\n   * Human-readable device name\n   * @since react-native@0.73\n   */\n  deviceName: string;\n  /**\n   * React Native specific information, like the unique device ID and native capabilities\n   * @since react-native@0.74\n   */\n  reactNative?: {\n    /** The unique device ID */\n    logicalDeviceId: string;\n    /** All supported native capabilities */\n    capabilities: CustomMessageHandlerConnection['page']['capabilities'];\n  };\n}\n\n/**\n * Launch the React Native DevTools by executing the `POST /open-debugger` request.\n * This endpoint is handled through `@react-native/dev-middleware`.\n */\nexport async function openJsInspector(metroBaseUrl: string, app: MetroInspectorProxyApp) {\n  if (!app.reactNative?.logicalDeviceId) {\n    debug('Failed to open React Native DevTools, target is missing device ID');\n    return false;\n  }\n\n  const url = new URL('/open-debugger', metroBaseUrl);\n  url.searchParams.set('appId', app.description);\n  url.searchParams.set('device', app.reactNative.logicalDeviceId);\n  url.searchParams.set('target', app.id);\n\n  // Request to open the React Native DevTools, but limit it to 1s\n  // This is a workaround as this endpoint might not respond on some devices\n  const response = await fetch(url, {\n    method: 'POST',\n    signal: AbortSignal.timeout(1000),\n  }).catch((error) => {\n    // Only swallow timeout errors\n    if (error.name === 'TimeoutError') {\n      return null;\n    }\n\n    throw error;\n  });\n\n  if (!response) {\n    debug(`No response received from the React Native DevTools.`);\n  } else if (response.ok === false) {\n    debug('Failed to open React Native DevTools, received response:', response.status);\n  }\n\n  return response?.ok ?? true;\n}\n\nexport async function queryInspectorAppAsync(\n  metroServerOrigin: string,\n  appId: string\n): Promise<MetroInspectorProxyApp | null> {\n  const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n  return apps.find((app) => app.description === appId) ?? null;\n}\n\nexport async function queryAllInspectorAppsAsync(\n  metroServerOrigin: string\n): Promise<MetroInspectorProxyApp[]> {\n  const resp = await fetch(`${metroServerOrigin}/json/list`);\n  const apps: MetroInspectorProxyApp[] = transformApps(await resp.json());\n  const results: MetroInspectorProxyApp[] = [];\n  for (const app of apps) {\n    // Only use targets with better reloading support\n    if (!pageIsSupported(app)) {\n      continue;\n    }\n    // Hide targets that are marked as hidden from the inspector, e.g. instances from expo-dev-menu and expo-dev-launcher.\n    if (await appShouldBeIgnoredAsync(app)) {\n      continue;\n    }\n    results.push(app);\n  }\n  return results;\n}\n\nexport async function promptInspectorAppAsync(apps: MetroInspectorProxyApp[]) {\n  if (apps.length === 1) {\n    return apps[0];\n  }\n\n  // Check if multiple devices are connected with the same device names\n  // In this case, append the actual app id (device ID + page number) to the prompt\n  const hasDuplicateNames = apps.some(\n    (app, index) => index !== apps.findIndex((other) => app.deviceName === other.deviceName)\n  );\n\n  const choices = apps.map((app) => {\n    const name = app.deviceName ?? 'Unknown device';\n    return {\n      title: hasDuplicateNames ? chalk`${name}{dim  - ${app.id}}` : name,\n      value: app.id,\n      app,\n    };\n  });\n\n  const value = await selectAsync(chalk`Debug target {dim (Hermes only)}`, choices);\n\n  return choices.find((item) => item.value === value)?.app;\n}\n\n// The description of `React Native Experimental (Improved Chrome Reloads)` target is `don't use` from metro.\n// This function tries to transform the unmeaningful description to appId\nfunction transformApps(apps: MetroInspectorProxyApp[]): MetroInspectorProxyApp[] {\n  const deviceIdToAppId: Record<string, string> = {};\n\n  for (const app of apps) {\n    if (app.description !== \"don't use\") {\n      const deviceId = app.reactNative?.logicalDeviceId ?? app.id.split('-')[0];\n      const appId = app.description;\n      deviceIdToAppId[deviceId] = appId;\n    }\n  }\n\n  return apps.map((app) => {\n    if (app.description === \"don't use\") {\n      const deviceId = app.reactNative?.logicalDeviceId ?? app.id.split('-')[0];\n      app.description = deviceIdToAppId[deviceId] ?? app.description;\n    }\n    return app;\n  });\n}\n\nconst HIDE_FROM_INSPECTOR_ENV = 'globalThis.__expo_hide_from_inspector__';\n\nasync function appShouldBeIgnoredAsync(app: MetroInspectorProxyApp): Promise<boolean> {\n  const hideFromInspector = await evaluateJsFromCdpAsync(\n    app.webSocketDebuggerUrl,\n    HIDE_FROM_INSPECTOR_ENV\n  );\n  debug(\n    `[appShouldBeIgnoredAsync] webSocketDebuggerUrl[${app.webSocketDebuggerUrl}] hideFromInspector[${hideFromInspector}]`\n  );\n  return hideFromInspector !== undefined;\n}\n"],"names":["openJsInspector","queryInspectorAppAsync","queryAllInspectorAppsAsync","promptInspectorAppAsync","debug","require","metroBaseUrl","app","reactNative","logicalDeviceId","url","URL","searchParams","set","description","id","response","fetch","method","signal","AbortSignal","timeout","catch","error","name","ok","status","metroServerOrigin","appId","apps","find","resp","transformApps","json","results","pageIsSupported","appShouldBeIgnoredAsync","push","choices","length","hasDuplicateNames","some","index","findIndex","other","deviceName","map","title","chalk","value","selectAsync","item","deviceIdToAppId","deviceId","split","HIDE_FROM_INSPECTOR_ENV","hideFromInspector","evaluateJsFromCdpAsync","webSocketDebuggerUrl","undefined"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../../../../src/start/server/middleware/inspector/JsInspector.ts"],"sourcesContent":["import type { CustomMessageHandlerConnection } from '@react-native/dev-middleware';\nimport chalk from 'chalk';\n\nimport { evaluateJsFromCdpAsync } from './CdpClient';\nimport { selectAsync } from '../../../../utils/prompts';\nimport { pageIsSupported } from '../../metro/debugging/pageIsSupported';\n\nconst debug = require('debug')(\n  'expo:start:server:middleware:inspector:jsInspector'\n) as typeof console.log;\n\nexport interface MetroInspectorProxyApp {\n  /** Unique device ID combined with the page ID */\n  id: string;\n  /** Information about the underlying CDP implementation, e.g. \"React Native Bridgeless [C++ connection]\" */\n  title: string;\n  /** The application ID that is currently running on the device, e.g. \"dev.expo.bareexpo\" */\n  description: string;\n  /** The CDP debugger type, which should always be \"node\" */\n  type: 'node';\n  /** The internal `devtools://..` URL for the debugger to connect to */\n  devtoolsFrontendUrl: string;\n  /** The websocket URL for the debugger to connect to */\n  webSocketDebuggerUrl: string;\n  /**\n   * Human-readable device name\n   * @since react-native@0.73\n   */\n  deviceName: string;\n  /**\n   * React Native specific information, like the unique device ID and native capabilities\n   * @since react-native@0.74\n   */\n  reactNative?: {\n    /** The unique device ID */\n    logicalDeviceId: string;\n    /** All supported native capabilities */\n    capabilities: CustomMessageHandlerConnection['page']['capabilities'];\n  };\n}\n\n/**\n * Launch the React Native DevTools by executing the `POST /open-debugger` request.\n * This endpoint is handled through `@react-native/dev-middleware`.\n */\nexport async function openJsInspector(metroBaseUrl: string, app: MetroInspectorProxyApp) {\n  if (!app.reactNative?.logicalDeviceId) {\n    debug('Failed to open React Native DevTools, target is missing device ID');\n    return false;\n  }\n\n  const url = new URL('/open-debugger', metroBaseUrl);\n  url.searchParams.set('appId', app.description);\n  url.searchParams.set('device', app.reactNative.logicalDeviceId);\n  url.searchParams.set('target', app.id);\n\n  // Request to open the React Native DevTools, but limit it to 1s\n  // This is a workaround as this endpoint might not respond on some devices\n  const response = await fetch(url, {\n    method: 'POST',\n    signal: AbortSignal.timeout(1000),\n  }).catch((error) => {\n    // Only swallow timeout errors\n    if (error.name === 'TimeoutError') {\n      return null;\n    }\n\n    throw error;\n  });\n\n  if (!response) {\n    debug(`No response received from the React Native DevTools.`);\n  } else if (response.ok === false) {\n    debug('Failed to open React Native DevTools, received response:', response.status);\n  }\n\n  return response?.ok ?? true;\n}\n\nexport async function queryInspectorAppAsync(\n  metroServerOrigin: string,\n  appId: string\n): Promise<MetroInspectorProxyApp | null> {\n  const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n  return apps.find((app) => app.description === appId) ?? null;\n}\n\nexport async function queryAllInspectorAppsAsync(\n  metroServerOrigin: string\n): Promise<MetroInspectorProxyApp[]> {\n  const resp = await fetch(`${metroServerOrigin}/json/list`);\n  // The newest runtime will be at the end of the list,\n  // reversing the result would save time from try-error.\n  const apps: MetroInspectorProxyApp[] = transformApps(await resp.json()).reverse();\n  const results: MetroInspectorProxyApp[] = [];\n  for (const app of apps) {\n    // Only use targets with better reloading support\n    if (!pageIsSupported(app)) {\n      continue;\n    }\n\n    try {\n      // Hide targets that are marked as hidden from the inspector, e.g. instances from expo-dev-menu and expo-dev-launcher.\n      if (await appShouldBeIgnoredAsync(app)) {\n        continue;\n      }\n    } catch (e: unknown) {\n      // If we can't evaluate the JS, we just ignore the error and skips the target.\n      debug(`Can't evaluate the JS on the app:`, JSON.stringify(e, null, 2));\n      continue;\n    }\n\n    results.push(app);\n  }\n  return results;\n}\n\nexport async function promptInspectorAppAsync(apps: MetroInspectorProxyApp[]) {\n  if (apps.length === 1) {\n    return apps[0];\n  }\n\n  // Check if multiple devices are connected with the same device names\n  // In this case, append the actual app id (device ID + page number) to the prompt\n  const hasDuplicateNames = apps.some(\n    (app, index) => index !== apps.findIndex((other) => app.deviceName === other.deviceName)\n  );\n\n  const choices = apps.map((app) => {\n    const name = app.deviceName ?? 'Unknown device';\n    return {\n      title: hasDuplicateNames ? chalk`${name}{dim  - ${app.id}}` : name,\n      value: app.id,\n      app,\n    };\n  });\n\n  const value = await selectAsync(chalk`Debug target {dim (Hermes only)}`, choices);\n\n  return choices.find((item) => item.value === value)?.app;\n}\n\n// The description of `React Native Experimental (Improved Chrome Reloads)` target is `don't use` from metro.\n// This function tries to transform the unmeaningful description to appId\nfunction transformApps(apps: MetroInspectorProxyApp[]): MetroInspectorProxyApp[] {\n  const deviceIdToAppId: Record<string, string> = {};\n\n  for (const app of apps) {\n    if (app.description !== \"don't use\") {\n      const deviceId = app.reactNative?.logicalDeviceId ?? app.id.split('-')[0];\n      const appId = app.description;\n      deviceIdToAppId[deviceId] = appId;\n    }\n  }\n\n  return apps.map((app) => {\n    if (app.description === \"don't use\") {\n      const deviceId = app.reactNative?.logicalDeviceId ?? app.id.split('-')[0];\n      app.description = deviceIdToAppId[deviceId] ?? app.description;\n    }\n    return app;\n  });\n}\n\nconst HIDE_FROM_INSPECTOR_ENV = 'globalThis.__expo_hide_from_inspector__';\n\nasync function appShouldBeIgnoredAsync(app: MetroInspectorProxyApp): Promise<boolean> {\n  const hideFromInspector = await evaluateJsFromCdpAsync(\n    app.webSocketDebuggerUrl,\n    HIDE_FROM_INSPECTOR_ENV\n  );\n  debug(\n    `[appShouldBeIgnoredAsync] webSocketDebuggerUrl[${app.webSocketDebuggerUrl}] hideFromInspector[${hideFromInspector}]`\n  );\n  return hideFromInspector !== undefined;\n}\n"],"names":["openJsInspector","queryInspectorAppAsync","queryAllInspectorAppsAsync","promptInspectorAppAsync","debug","require","metroBaseUrl","app","reactNative","logicalDeviceId","url","URL","searchParams","set","description","id","response","fetch","method","signal","AbortSignal","timeout","catch","error","name","ok","status","metroServerOrigin","appId","apps","find","resp","transformApps","json","reverse","results","pageIsSupported","appShouldBeIgnoredAsync","e","JSON","stringify","push","choices","length","hasDuplicateNames","some","index","findIndex","other","deviceName","map","title","chalk","value","selectAsync","item","deviceIdToAppId","deviceId","split","HIDE_FROM_INSPECTOR_ENV","hideFromInspector","evaluateJsFromCdpAsync","webSocketDebuggerUrl","undefined"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/start/server/middleware/metroOptions.js b/node_modules/@expo/cli/build/src/start/server/middleware/metroOptions.js
index be35dfa..2ba222f 100644
--- a/node_modules/@expo/cli/build/src/start/server/middleware/metroOptions.js
+++ b/node_modules/@expo/cli/build/src/start/server/middleware/metroOptions.js
@@ -136,7 +136,7 @@ function getMetroDirectBundleOptions(options) {
         baseUrl: baseUrl || undefined,
         routerRoot,
         bytecode: bytecode ? "1" : undefined,
-        reactCompiler: reactCompiler || undefined,
+        reactCompiler: reactCompiler ? String(reactCompiler) : undefined,
         dom: domRoot
     };
     // Iterate and delete undefined values
diff --git a/node_modules/@expo/cli/build/src/utils/codesigning.js b/node_modules/@expo/cli/build/src/utils/codesigning.js
index 11ac3b1..79b0ac3 100644
--- a/node_modules/@expo/cli/build/src/utils/codesigning.js
+++ b/node_modules/@expo/cli/build/src/utils/codesigning.js
@@ -28,13 +28,6 @@ function _codeSigningCertificates() {
     };
     return data;
 }
-function _getUserState() {
-    const data = require("@expo/config/build/getUserState");
-    _getUserState = function() {
-        return data;
-    };
-    return data;
-}
 function _jsonFile() {
     const data = /*#__PURE__*/ _interopRequireDefault(require("@expo/json-file"));
     _jsonFile = function() {
@@ -75,6 +68,7 @@ const _errors = require("./errors");
 const _getExpoGoIntermediateCertificate = require("../api/getExpoGoIntermediateCertificate");
 const _getProjectDevelopmentCertificate = require("../api/getProjectDevelopmentCertificate");
 const _appQuery = require("../api/graphql/queries/AppQuery");
+const _userSettings = require("../api/user/UserSettings");
 const _actions = require("../api/user/actions");
 const _generated = require("../graphql/generated");
 const _log = /*#__PURE__*/ _interopRequireWildcard(require("../log"));
@@ -126,7 +120,7 @@ function _interopRequireWildcard(obj, nodeInterop) {
 const debug = require("debug")("expo:codesigning");
 const DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME = "development-code-signing-settings-2.json";
 function getDevelopmentCodeSigningDirectory() {
-    return _path().default.join((0, _getUserState().getExpoHomeDirectory)(), "codesigning");
+    return _path().default.join((0, _userSettings.getExpoHomeDirectory)(), "codesigning");
 }
 function getProjectDevelopmentCodeSigningInfoFile(defaults) {
     function getFile(easProjectId) {
diff --git a/node_modules/@expo/cli/build/src/utils/codesigning.js.map b/node_modules/@expo/cli/build/src/utils/codesigning.js.map
index 60f0a25..1c40a20 100644
--- a/node_modules/@expo/cli/build/src/utils/codesigning.js.map
+++ b/node_modules/@expo/cli/build/src/utils/codesigning.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/utils/codesigning.ts"],"sourcesContent":["import { GraphQLError } from '@0no-co/graphql.web';\nimport {\n  convertCertificatePEMToCertificate,\n  convertKeyPairToPEM,\n  convertCSRToCSRPEM,\n  generateKeyPair,\n  generateCSR,\n  convertPrivateKeyPEMToPrivateKey,\n  validateSelfSignedCertificate,\n  signBufferRSASHA256AndVerify,\n} from '@expo/code-signing-certificates';\nimport { ExpoConfig } from '@expo/config';\nimport { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport JsonFile, { JSONObject } from '@expo/json-file';\nimport { CombinedError } from '@urql/core';\nimport { promises as fs } from 'fs';\nimport { pki as PKI } from 'node-forge';\nimport path from 'path';\nimport { Dictionary, parseDictionary } from 'structured-headers';\n\nimport { env } from './env';\nimport { CommandError } from './errors';\nimport { getExpoGoIntermediateCertificateAsync } from '../api/getExpoGoIntermediateCertificate';\nimport { getProjectDevelopmentCertificateAsync } from '../api/getProjectDevelopmentCertificate';\nimport { AppQuery } from '../api/graphql/queries/AppQuery';\nimport { ensureLoggedInAsync } from '../api/user/actions';\nimport { Actor } from '../api/user/user';\nimport { AppByIdQuery, Permission } from '../graphql/generated';\nimport * as Log from '../log';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:codesigning') as typeof console.log;\n\nexport type CodeSigningInfo = {\n  keyId: string;\n  privateKey: string;\n  certificateForPrivateKey: string;\n  /**\n   * Chain of certificates to serve in the manifest multipart body \"certificate_chain\" part.\n   * The leaf certificate must be the 0th element of the array, followed by any intermediate certificates\n   * necessary to evaluate the chain of trust ending in the implicitly trusted root certificate embedded in\n   * the client.\n   *\n   * An empty array indicates that there is no need to serve the certificate chain in the multipart response.\n   */\n  certificateChainForResponse: string[];\n  /**\n   * Scope key cached for the project when certificate is development Expo Go code signing.\n   * For project-specific code signing (keyId == the project's generated keyId) this is undefined.\n   */\n  scopeKey: string | null;\n};\n\ntype StoredDevelopmentExpoRootCodeSigningInfo = {\n  easProjectId: string | null;\n  scopeKey: string | null;\n  privateKey: string | null;\n  certificateChain: string[] | null;\n};\nconst DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME = 'development-code-signing-settings-2.json';\n\nexport function getDevelopmentCodeSigningDirectory(): string {\n  return path.join(getExpoHomeDirectory(), 'codesigning');\n}\n\nfunction getProjectDevelopmentCodeSigningInfoFile<T extends JSONObject>(defaults: T) {\n  function getFile(easProjectId: string): JsonFile<T> {\n    const filePath = path.join(\n      getDevelopmentCodeSigningDirectory(),\n      easProjectId,\n      DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME\n    );\n    return new JsonFile<T>(filePath);\n  }\n\n  async function readAsync(easProjectId: string): Promise<T> {\n    let projectSettings;\n    try {\n      projectSettings = await getFile(easProjectId).readAsync();\n    } catch {\n      projectSettings = await getFile(easProjectId).writeAsync(defaults, { ensureDir: true });\n    }\n    // Set defaults for any missing fields\n    return { ...defaults, ...projectSettings };\n  }\n\n  async function setAsync(easProjectId: string, json: Partial<T>): Promise<T> {\n    try {\n      return await getFile(easProjectId).mergeAsync(json, {\n        cantReadFileDefault: defaults,\n      });\n    } catch {\n      return await getFile(easProjectId).writeAsync(\n        {\n          ...defaults,\n          ...json,\n        },\n        { ensureDir: true }\n      );\n    }\n  }\n\n  return {\n    getFile,\n    readAsync,\n    setAsync,\n  };\n}\n\nexport const DevelopmentCodeSigningInfoFile =\n  getProjectDevelopmentCodeSigningInfoFile<StoredDevelopmentExpoRootCodeSigningInfo>({\n    easProjectId: null,\n    scopeKey: null,\n    privateKey: null,\n    certificateChain: null,\n  });\n\n/**\n * Get info necessary to generate a response `expo-signature` header given a project and incoming request `expo-expect-signature` header.\n * This only knows how to serve two code signing keyids:\n * - `expo-root` indicates that it should use a development certificate in the `expo-root` chain. See {@link getExpoRootDevelopmentCodeSigningInfoAsync}\n * - <developer's expo-updates keyid> indicates that it should sign with the configured certificate. See {@link getProjectCodeSigningCertificateAsync}\n */\nexport async function getCodeSigningInfoAsync(\n  exp: ExpoConfig,\n  expectSignatureHeader: string | null,\n  privateKeyPath: string | undefined\n): Promise<CodeSigningInfo | null> {\n  if (!expectSignatureHeader) {\n    return null;\n  }\n\n  let parsedExpectSignature: Dictionary;\n  try {\n    parsedExpectSignature = parseDictionary(expectSignatureHeader);\n  } catch {\n    throw new CommandError('Invalid value for expo-expect-signature header');\n  }\n\n  const expectedKeyIdOuter = parsedExpectSignature.get('keyid');\n  if (!expectedKeyIdOuter) {\n    throw new CommandError('keyid not present in expo-expect-signature header');\n  }\n\n  const expectedKeyId = expectedKeyIdOuter[0];\n  if (typeof expectedKeyId !== 'string') {\n    throw new CommandError(\n      `Invalid value for keyid in expo-expect-signature header: ${expectedKeyId}`\n    );\n  }\n\n  let expectedAlg: string | null = null;\n  const expectedAlgOuter = parsedExpectSignature.get('alg');\n  if (expectedAlgOuter) {\n    const expectedAlgTemp = expectedAlgOuter[0];\n    if (typeof expectedAlgTemp !== 'string') {\n      throw new CommandError('Invalid value for alg in expo-expect-signature header');\n    }\n    expectedAlg = expectedAlgTemp;\n  }\n\n  if (expectedKeyId === 'expo-root') {\n    return await getExpoRootDevelopmentCodeSigningInfoAsync(exp);\n  } else if (expectedKeyId === 'expo-go') {\n    throw new CommandError(\n      'Invalid certificate requested: cannot sign with embedded keyid=expo-go key'\n    );\n  } else {\n    return await getProjectCodeSigningCertificateAsync(\n      exp,\n      privateKeyPath,\n      expectedKeyId,\n      expectedAlg\n    );\n  }\n}\n\n/**\n * Get a development code signing certificate for the expo-root -> expo-go -> (development certificate) certificate chain.\n * This requires the user be logged in and online, otherwise try to use the cached development certificate.\n */\nasync function getExpoRootDevelopmentCodeSigningInfoAsync(\n  exp: ExpoConfig\n): Promise<CodeSigningInfo | null> {\n  const easProjectId = exp.extra?.eas?.projectId;\n  // can't check for scope key validity since scope key is derived on the server from projectId and we may be offline.\n  // we rely upon the client certificate check to validate the scope key\n  if (!easProjectId) {\n    debug(\n      `WARN: Expo Application Services (EAS) is not configured for your project. Configuring EAS enables a more secure development experience amongst many other benefits. ${learnMore(\n        'https://docs.expo.dev/eas/'\n      )}`\n    );\n    return null;\n  }\n\n  const developmentCodeSigningInfoFromFile =\n    await DevelopmentCodeSigningInfoFile.readAsync(easProjectId);\n  const validatedCodeSigningInfo = validateStoredDevelopmentExpoRootCertificateCodeSigningInfo(\n    developmentCodeSigningInfoFromFile,\n    easProjectId\n  );\n\n  // 1. If online, ensure logged in, generate key pair and CSR, fetch and cache certificate chain for projectId\n  //    (overwriting existing dev cert in case projectId changed or it has expired)\n  if (!env.EXPO_OFFLINE) {\n    try {\n      return await fetchAndCacheNewDevelopmentCodeSigningInfoAsync(easProjectId);\n    } catch (e: any) {\n      if (validatedCodeSigningInfo) {\n        Log.warn(\n          'There was an error fetching the Expo development certificate, falling back to cached certificate'\n        );\n        return validatedCodeSigningInfo;\n      } else {\n        // need to return null here and say a message\n        throw e;\n      }\n    }\n  }\n\n  // 2. check for cached cert/private key matching projectId and scopeKey of project, if found and valid return private key and cert chain including expo-go cert\n  if (validatedCodeSigningInfo) {\n    return validatedCodeSigningInfo;\n  }\n\n  // 3. if offline, return null\n  Log.warn('Offline and no cached development certificate found, unable to sign manifest');\n  return null;\n}\n\n/**\n * Get the certificate configured for expo-updates for this project.\n */\nasync function getProjectCodeSigningCertificateAsync(\n  exp: ExpoConfig,\n  privateKeyPath: string | undefined,\n  expectedKeyId: string,\n  expectedAlg: string | null\n): Promise<CodeSigningInfo | null> {\n  const codeSigningCertificatePath = exp.updates?.codeSigningCertificate;\n  if (!codeSigningCertificatePath) {\n    return null;\n  }\n\n  if (!privateKeyPath) {\n    throw new CommandError(\n      'Must specify --private-key-path argument to sign development manifest for requested code signing key'\n    );\n  }\n\n  const codeSigningMetadata = exp.updates?.codeSigningMetadata;\n  if (!codeSigningMetadata) {\n    throw new CommandError(\n      'Must specify \"codeSigningMetadata\" under the \"updates\" field of your app config file to use EAS code signing'\n    );\n  }\n\n  const { alg, keyid } = codeSigningMetadata;\n  if (!alg || !keyid) {\n    throw new CommandError(\n      'Must specify \"keyid\" and \"alg\" in the \"codeSigningMetadata\" field under the \"updates\" field of your app config file to use EAS code signing'\n    );\n  }\n\n  if (expectedKeyId !== keyid) {\n    throw new CommandError(`keyid mismatch: client=${expectedKeyId}, project=${keyid}`);\n  }\n\n  if (expectedAlg && expectedAlg !== alg) {\n    throw new CommandError(`\"alg\" field mismatch (client=${expectedAlg}, project=${alg})`);\n  }\n\n  const { privateKeyPEM, certificatePEM } =\n    await getProjectPrivateKeyAndCertificateFromFilePathsAsync({\n      codeSigningCertificatePath,\n      privateKeyPath,\n    });\n\n  return {\n    keyId: keyid,\n    privateKey: privateKeyPEM,\n    certificateForPrivateKey: certificatePEM,\n    certificateChainForResponse: [],\n    scopeKey: null,\n  };\n}\n\nasync function readFileWithErrorAsync(path: string, errorMessage: string): Promise<string> {\n  try {\n    return await fs.readFile(path, 'utf8');\n  } catch {\n    throw new CommandError(errorMessage);\n  }\n}\n\nasync function getProjectPrivateKeyAndCertificateFromFilePathsAsync({\n  codeSigningCertificatePath,\n  privateKeyPath,\n}: {\n  codeSigningCertificatePath: string;\n  privateKeyPath: string;\n}): Promise<{ privateKeyPEM: string; certificatePEM: string }> {\n  const [codeSigningCertificatePEM, privateKeyPEM] = await Promise.all([\n    readFileWithErrorAsync(\n      codeSigningCertificatePath,\n      `Code signing certificate cannot be read from path: ${codeSigningCertificatePath}`\n    ),\n    readFileWithErrorAsync(\n      privateKeyPath,\n      `Code signing private key cannot be read from path: ${privateKeyPath}`\n    ),\n  ]);\n\n  const privateKey = convertPrivateKeyPEMToPrivateKey(privateKeyPEM);\n  const certificate = convertCertificatePEMToCertificate(codeSigningCertificatePEM);\n  validateSelfSignedCertificate(certificate, {\n    publicKey: certificate.publicKey as PKI.rsa.PublicKey,\n    privateKey,\n  });\n\n  return { privateKeyPEM, certificatePEM: codeSigningCertificatePEM };\n}\n\n/**\n * Validate that the cached code signing info is still valid for the current project and\n * that it hasn't expired. If invalid, return null.\n */\nfunction validateStoredDevelopmentExpoRootCertificateCodeSigningInfo(\n  codeSigningInfo: StoredDevelopmentExpoRootCodeSigningInfo,\n  easProjectId: string\n): CodeSigningInfo | null {\n  if (codeSigningInfo.easProjectId !== easProjectId) {\n    return null;\n  }\n\n  const {\n    privateKey: privateKeyPEM,\n    certificateChain: certificatePEMs,\n    scopeKey,\n  } = codeSigningInfo;\n  if (!privateKeyPEM || !certificatePEMs) {\n    return null;\n  }\n\n  const certificateChain = certificatePEMs.map((certificatePEM) =>\n    convertCertificatePEMToCertificate(certificatePEM)\n  );\n\n  // TODO(wschurman): maybe move to @expo/code-signing-certificates\n\n  // ensure all intermediate certificates are valid\n  for (const certificate of certificateChain) {\n    const now = new Date();\n    if (certificate.validity.notBefore > now || certificate.validity.notAfter < now) {\n      return null;\n    }\n  }\n\n  // TODO(wschurman): maybe do more validation, like validation of projectID and scopeKey within eas certificate extension\n\n  return {\n    keyId: 'expo-go',\n    certificateChainForResponse: certificatePEMs,\n    certificateForPrivateKey: certificatePEMs[0],\n    privateKey: privateKeyPEM,\n    scopeKey,\n  };\n}\n\nfunction actorCanGetProjectDevelopmentCertificate(actor: Actor, app: AppByIdQuery['app']['byId']) {\n  const owningAccountId = app.ownerAccount.id;\n\n  const owningAccountIsActorPrimaryAccount =\n    actor.__typename === 'User' || actor.__typename === 'SSOUser'\n      ? actor.primaryAccount.id === owningAccountId\n      : false;\n  const userHasPublishPermissionForOwningAccount = !!actor.accounts\n    .find((account) => account.id === owningAccountId)\n    ?.users?.find((userPermission) => userPermission.actor.id === actor.id)\n    ?.permissions?.includes(Permission.Publish);\n  return owningAccountIsActorPrimaryAccount || userHasPublishPermissionForOwningAccount;\n}\n\nasync function fetchAndCacheNewDevelopmentCodeSigningInfoAsync(\n  easProjectId: string\n): Promise<CodeSigningInfo | null> {\n  const actor = await ensureLoggedInAsync();\n  let app: AppByIdQuery['app']['byId'];\n  try {\n    app = await AppQuery.byIdAsync(easProjectId);\n  } catch (e) {\n    if (e instanceof GraphQLError || e instanceof CombinedError) {\n      return null;\n    }\n    throw e;\n  }\n  if (!actorCanGetProjectDevelopmentCertificate(actor, app)) {\n    return null;\n  }\n\n  const keyPair = generateKeyPair();\n  const keyPairPEM = convertKeyPairToPEM(keyPair);\n  const csr = generateCSR(keyPair, `Development Certificate for ${easProjectId}`);\n  const csrPEM = convertCSRToCSRPEM(csr);\n  const [developmentSigningCertificate, expoGoIntermediateCertificate] = await Promise.all([\n    getProjectDevelopmentCertificateAsync(easProjectId, csrPEM),\n    getExpoGoIntermediateCertificateAsync(easProjectId),\n  ]);\n\n  await DevelopmentCodeSigningInfoFile.setAsync(easProjectId, {\n    easProjectId,\n    scopeKey: app.scopeKey,\n    privateKey: keyPairPEM.privateKeyPEM,\n    certificateChain: [developmentSigningCertificate, expoGoIntermediateCertificate],\n  });\n\n  return {\n    keyId: 'expo-go',\n    certificateChainForResponse: [developmentSigningCertificate, expoGoIntermediateCertificate],\n    certificateForPrivateKey: developmentSigningCertificate,\n    privateKey: keyPairPEM.privateKeyPEM,\n    scopeKey: app.scopeKey,\n  };\n}\n/**\n * Generate the `expo-signature` header for a manifest and code signing info.\n */\nexport function signManifestString(\n  stringifiedManifest: string,\n  codeSigningInfo: CodeSigningInfo\n): string {\n  const privateKey = convertPrivateKeyPEMToPrivateKey(codeSigningInfo.privateKey);\n  const certificate = convertCertificatePEMToCertificate(codeSigningInfo.certificateForPrivateKey);\n  return signBufferRSASHA256AndVerify(\n    privateKey,\n    certificate,\n    Buffer.from(stringifiedManifest, 'utf8')\n  );\n}\n"],"names":["getDevelopmentCodeSigningDirectory","DevelopmentCodeSigningInfoFile","getCodeSigningInfoAsync","signManifestString","debug","require","DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME","path","join","getExpoHomeDirectory","getProjectDevelopmentCodeSigningInfoFile","defaults","getFile","easProjectId","filePath","JsonFile","readAsync","projectSettings","writeAsync","ensureDir","setAsync","json","mergeAsync","cantReadFileDefault","scopeKey","privateKey","certificateChain","exp","expectSignatureHeader","privateKeyPath","parsedExpectSignature","parseDictionary","CommandError","expectedKeyIdOuter","get","expectedKeyId","expectedAlg","expectedAlgOuter","expectedAlgTemp","getExpoRootDevelopmentCodeSigningInfoAsync","getProjectCodeSigningCertificateAsync","extra","eas","projectId","learnMore","developmentCodeSigningInfoFromFile","validatedCodeSigningInfo","validateStoredDevelopmentExpoRootCertificateCodeSigningInfo","env","EXPO_OFFLINE","fetchAndCacheNewDevelopmentCodeSigningInfoAsync","e","Log","warn","codeSigningCertificatePath","updates","codeSigningCertificate","codeSigningMetadata","alg","keyid","privateKeyPEM","certificatePEM","getProjectPrivateKeyAndCertificateFromFilePathsAsync","keyId","certificateForPrivateKey","certificateChainForResponse","readFileWithErrorAsync","errorMessage","fs","readFile","codeSigningCertificatePEM","Promise","all","convertPrivateKeyPEMToPrivateKey","certificate","convertCertificatePEMToCertificate","validateSelfSignedCertificate","publicKey","codeSigningInfo","certificatePEMs","map","now","Date","validity","notBefore","notAfter","actorCanGetProjectDevelopmentCertificate","actor","app","owningAccountId","ownerAccount","id","owningAccountIsActorPrimaryAccount","__typename","primaryAccount","userHasPublishPermissionForOwningAccount","accounts","find","account","users","userPermission","permissions","includes","Permission","Publish","ensureLoggedInAsync","AppQuery","byIdAsync","GraphQLError","CombinedError","keyPair","generateKeyPair","keyPairPEM","convertKeyPairToPEM","csr","generateCSR","csrPEM","convertCSRToCSRPEM","developmentSigningCertificate","expoGoIntermediateCertificate","getProjectDevelopmentCertificateAsync","getExpoGoIntermediateCertificateAsync","stringifiedManifest","signBufferRSASHA256AndVerify","Buffer","from"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/utils/codesigning.ts"],"sourcesContent":["import { GraphQLError } from '@0no-co/graphql.web';\nimport {\n  convertCertificatePEMToCertificate,\n  convertKeyPairToPEM,\n  convertCSRToCSRPEM,\n  generateKeyPair,\n  generateCSR,\n  convertPrivateKeyPEMToPrivateKey,\n  validateSelfSignedCertificate,\n  signBufferRSASHA256AndVerify,\n} from '@expo/code-signing-certificates';\nimport { ExpoConfig } from '@expo/config';\nimport JsonFile, { JSONObject } from '@expo/json-file';\nimport { CombinedError } from '@urql/core';\nimport { promises as fs } from 'fs';\nimport { pki as PKI } from 'node-forge';\nimport path from 'path';\nimport { Dictionary, parseDictionary } from 'structured-headers';\n\nimport { env } from './env';\nimport { CommandError } from './errors';\nimport { getExpoGoIntermediateCertificateAsync } from '../api/getExpoGoIntermediateCertificate';\nimport { getProjectDevelopmentCertificateAsync } from '../api/getProjectDevelopmentCertificate';\nimport { AppQuery } from '../api/graphql/queries/AppQuery';\nimport { getExpoHomeDirectory } from '../api/user/UserSettings';\nimport { ensureLoggedInAsync } from '../api/user/actions';\nimport { Actor } from '../api/user/user';\nimport { AppByIdQuery, Permission } from '../graphql/generated';\nimport * as Log from '../log';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:codesigning') as typeof console.log;\n\nexport type CodeSigningInfo = {\n  keyId: string;\n  privateKey: string;\n  certificateForPrivateKey: string;\n  /**\n   * Chain of certificates to serve in the manifest multipart body \"certificate_chain\" part.\n   * The leaf certificate must be the 0th element of the array, followed by any intermediate certificates\n   * necessary to evaluate the chain of trust ending in the implicitly trusted root certificate embedded in\n   * the client.\n   *\n   * An empty array indicates that there is no need to serve the certificate chain in the multipart response.\n   */\n  certificateChainForResponse: string[];\n  /**\n   * Scope key cached for the project when certificate is development Expo Go code signing.\n   * For project-specific code signing (keyId == the project's generated keyId) this is undefined.\n   */\n  scopeKey: string | null;\n};\n\ntype StoredDevelopmentExpoRootCodeSigningInfo = {\n  easProjectId: string | null;\n  scopeKey: string | null;\n  privateKey: string | null;\n  certificateChain: string[] | null;\n};\nconst DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME = 'development-code-signing-settings-2.json';\n\nexport function getDevelopmentCodeSigningDirectory(): string {\n  return path.join(getExpoHomeDirectory(), 'codesigning');\n}\n\nfunction getProjectDevelopmentCodeSigningInfoFile<T extends JSONObject>(defaults: T) {\n  function getFile(easProjectId: string): JsonFile<T> {\n    const filePath = path.join(\n      getDevelopmentCodeSigningDirectory(),\n      easProjectId,\n      DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME\n    );\n    return new JsonFile<T>(filePath);\n  }\n\n  async function readAsync(easProjectId: string): Promise<T> {\n    let projectSettings;\n    try {\n      projectSettings = await getFile(easProjectId).readAsync();\n    } catch {\n      projectSettings = await getFile(easProjectId).writeAsync(defaults, { ensureDir: true });\n    }\n    // Set defaults for any missing fields\n    return { ...defaults, ...projectSettings };\n  }\n\n  async function setAsync(easProjectId: string, json: Partial<T>): Promise<T> {\n    try {\n      return await getFile(easProjectId).mergeAsync(json, {\n        cantReadFileDefault: defaults,\n      });\n    } catch {\n      return await getFile(easProjectId).writeAsync(\n        {\n          ...defaults,\n          ...json,\n        },\n        { ensureDir: true }\n      );\n    }\n  }\n\n  return {\n    getFile,\n    readAsync,\n    setAsync,\n  };\n}\n\nexport const DevelopmentCodeSigningInfoFile =\n  getProjectDevelopmentCodeSigningInfoFile<StoredDevelopmentExpoRootCodeSigningInfo>({\n    easProjectId: null,\n    scopeKey: null,\n    privateKey: null,\n    certificateChain: null,\n  });\n\n/**\n * Get info necessary to generate a response `expo-signature` header given a project and incoming request `expo-expect-signature` header.\n * This only knows how to serve two code signing keyids:\n * - `expo-root` indicates that it should use a development certificate in the `expo-root` chain. See {@link getExpoRootDevelopmentCodeSigningInfoAsync}\n * - <developer's expo-updates keyid> indicates that it should sign with the configured certificate. See {@link getProjectCodeSigningCertificateAsync}\n */\nexport async function getCodeSigningInfoAsync(\n  exp: ExpoConfig,\n  expectSignatureHeader: string | null,\n  privateKeyPath: string | undefined\n): Promise<CodeSigningInfo | null> {\n  if (!expectSignatureHeader) {\n    return null;\n  }\n\n  let parsedExpectSignature: Dictionary;\n  try {\n    parsedExpectSignature = parseDictionary(expectSignatureHeader);\n  } catch {\n    throw new CommandError('Invalid value for expo-expect-signature header');\n  }\n\n  const expectedKeyIdOuter = parsedExpectSignature.get('keyid');\n  if (!expectedKeyIdOuter) {\n    throw new CommandError('keyid not present in expo-expect-signature header');\n  }\n\n  const expectedKeyId = expectedKeyIdOuter[0];\n  if (typeof expectedKeyId !== 'string') {\n    throw new CommandError(\n      `Invalid value for keyid in expo-expect-signature header: ${expectedKeyId}`\n    );\n  }\n\n  let expectedAlg: string | null = null;\n  const expectedAlgOuter = parsedExpectSignature.get('alg');\n  if (expectedAlgOuter) {\n    const expectedAlgTemp = expectedAlgOuter[0];\n    if (typeof expectedAlgTemp !== 'string') {\n      throw new CommandError('Invalid value for alg in expo-expect-signature header');\n    }\n    expectedAlg = expectedAlgTemp;\n  }\n\n  if (expectedKeyId === 'expo-root') {\n    return await getExpoRootDevelopmentCodeSigningInfoAsync(exp);\n  } else if (expectedKeyId === 'expo-go') {\n    throw new CommandError(\n      'Invalid certificate requested: cannot sign with embedded keyid=expo-go key'\n    );\n  } else {\n    return await getProjectCodeSigningCertificateAsync(\n      exp,\n      privateKeyPath,\n      expectedKeyId,\n      expectedAlg\n    );\n  }\n}\n\n/**\n * Get a development code signing certificate for the expo-root -> expo-go -> (development certificate) certificate chain.\n * This requires the user be logged in and online, otherwise try to use the cached development certificate.\n */\nasync function getExpoRootDevelopmentCodeSigningInfoAsync(\n  exp: ExpoConfig\n): Promise<CodeSigningInfo | null> {\n  const easProjectId = exp.extra?.eas?.projectId;\n  // can't check for scope key validity since scope key is derived on the server from projectId and we may be offline.\n  // we rely upon the client certificate check to validate the scope key\n  if (!easProjectId) {\n    debug(\n      `WARN: Expo Application Services (EAS) is not configured for your project. Configuring EAS enables a more secure development experience amongst many other benefits. ${learnMore(\n        'https://docs.expo.dev/eas/'\n      )}`\n    );\n    return null;\n  }\n\n  const developmentCodeSigningInfoFromFile =\n    await DevelopmentCodeSigningInfoFile.readAsync(easProjectId);\n  const validatedCodeSigningInfo = validateStoredDevelopmentExpoRootCertificateCodeSigningInfo(\n    developmentCodeSigningInfoFromFile,\n    easProjectId\n  );\n\n  // 1. If online, ensure logged in, generate key pair and CSR, fetch and cache certificate chain for projectId\n  //    (overwriting existing dev cert in case projectId changed or it has expired)\n  if (!env.EXPO_OFFLINE) {\n    try {\n      return await fetchAndCacheNewDevelopmentCodeSigningInfoAsync(easProjectId);\n    } catch (e: any) {\n      if (validatedCodeSigningInfo) {\n        Log.warn(\n          'There was an error fetching the Expo development certificate, falling back to cached certificate'\n        );\n        return validatedCodeSigningInfo;\n      } else {\n        // need to return null here and say a message\n        throw e;\n      }\n    }\n  }\n\n  // 2. check for cached cert/private key matching projectId and scopeKey of project, if found and valid return private key and cert chain including expo-go cert\n  if (validatedCodeSigningInfo) {\n    return validatedCodeSigningInfo;\n  }\n\n  // 3. if offline, return null\n  Log.warn('Offline and no cached development certificate found, unable to sign manifest');\n  return null;\n}\n\n/**\n * Get the certificate configured for expo-updates for this project.\n */\nasync function getProjectCodeSigningCertificateAsync(\n  exp: ExpoConfig,\n  privateKeyPath: string | undefined,\n  expectedKeyId: string,\n  expectedAlg: string | null\n): Promise<CodeSigningInfo | null> {\n  const codeSigningCertificatePath = exp.updates?.codeSigningCertificate;\n  if (!codeSigningCertificatePath) {\n    return null;\n  }\n\n  if (!privateKeyPath) {\n    throw new CommandError(\n      'Must specify --private-key-path argument to sign development manifest for requested code signing key'\n    );\n  }\n\n  const codeSigningMetadata = exp.updates?.codeSigningMetadata;\n  if (!codeSigningMetadata) {\n    throw new CommandError(\n      'Must specify \"codeSigningMetadata\" under the \"updates\" field of your app config file to use EAS code signing'\n    );\n  }\n\n  const { alg, keyid } = codeSigningMetadata;\n  if (!alg || !keyid) {\n    throw new CommandError(\n      'Must specify \"keyid\" and \"alg\" in the \"codeSigningMetadata\" field under the \"updates\" field of your app config file to use EAS code signing'\n    );\n  }\n\n  if (expectedKeyId !== keyid) {\n    throw new CommandError(`keyid mismatch: client=${expectedKeyId}, project=${keyid}`);\n  }\n\n  if (expectedAlg && expectedAlg !== alg) {\n    throw new CommandError(`\"alg\" field mismatch (client=${expectedAlg}, project=${alg})`);\n  }\n\n  const { privateKeyPEM, certificatePEM } =\n    await getProjectPrivateKeyAndCertificateFromFilePathsAsync({\n      codeSigningCertificatePath,\n      privateKeyPath,\n    });\n\n  return {\n    keyId: keyid,\n    privateKey: privateKeyPEM,\n    certificateForPrivateKey: certificatePEM,\n    certificateChainForResponse: [],\n    scopeKey: null,\n  };\n}\n\nasync function readFileWithErrorAsync(path: string, errorMessage: string): Promise<string> {\n  try {\n    return await fs.readFile(path, 'utf8');\n  } catch {\n    throw new CommandError(errorMessage);\n  }\n}\n\nasync function getProjectPrivateKeyAndCertificateFromFilePathsAsync({\n  codeSigningCertificatePath,\n  privateKeyPath,\n}: {\n  codeSigningCertificatePath: string;\n  privateKeyPath: string;\n}): Promise<{ privateKeyPEM: string; certificatePEM: string }> {\n  const [codeSigningCertificatePEM, privateKeyPEM] = await Promise.all([\n    readFileWithErrorAsync(\n      codeSigningCertificatePath,\n      `Code signing certificate cannot be read from path: ${codeSigningCertificatePath}`\n    ),\n    readFileWithErrorAsync(\n      privateKeyPath,\n      `Code signing private key cannot be read from path: ${privateKeyPath}`\n    ),\n  ]);\n\n  const privateKey = convertPrivateKeyPEMToPrivateKey(privateKeyPEM);\n  const certificate = convertCertificatePEMToCertificate(codeSigningCertificatePEM);\n  validateSelfSignedCertificate(certificate, {\n    publicKey: certificate.publicKey as PKI.rsa.PublicKey,\n    privateKey,\n  });\n\n  return { privateKeyPEM, certificatePEM: codeSigningCertificatePEM };\n}\n\n/**\n * Validate that the cached code signing info is still valid for the current project and\n * that it hasn't expired. If invalid, return null.\n */\nfunction validateStoredDevelopmentExpoRootCertificateCodeSigningInfo(\n  codeSigningInfo: StoredDevelopmentExpoRootCodeSigningInfo,\n  easProjectId: string\n): CodeSigningInfo | null {\n  if (codeSigningInfo.easProjectId !== easProjectId) {\n    return null;\n  }\n\n  const {\n    privateKey: privateKeyPEM,\n    certificateChain: certificatePEMs,\n    scopeKey,\n  } = codeSigningInfo;\n  if (!privateKeyPEM || !certificatePEMs) {\n    return null;\n  }\n\n  const certificateChain = certificatePEMs.map((certificatePEM) =>\n    convertCertificatePEMToCertificate(certificatePEM)\n  );\n\n  // TODO(wschurman): maybe move to @expo/code-signing-certificates\n\n  // ensure all intermediate certificates are valid\n  for (const certificate of certificateChain) {\n    const now = new Date();\n    if (certificate.validity.notBefore > now || certificate.validity.notAfter < now) {\n      return null;\n    }\n  }\n\n  // TODO(wschurman): maybe do more validation, like validation of projectID and scopeKey within eas certificate extension\n\n  return {\n    keyId: 'expo-go',\n    certificateChainForResponse: certificatePEMs,\n    certificateForPrivateKey: certificatePEMs[0],\n    privateKey: privateKeyPEM,\n    scopeKey,\n  };\n}\n\nfunction actorCanGetProjectDevelopmentCertificate(actor: Actor, app: AppByIdQuery['app']['byId']) {\n  const owningAccountId = app.ownerAccount.id;\n\n  const owningAccountIsActorPrimaryAccount =\n    actor.__typename === 'User' || actor.__typename === 'SSOUser'\n      ? actor.primaryAccount.id === owningAccountId\n      : false;\n  const userHasPublishPermissionForOwningAccount = !!actor.accounts\n    .find((account) => account.id === owningAccountId)\n    ?.users?.find((userPermission) => userPermission.actor.id === actor.id)\n    ?.permissions?.includes(Permission.Publish);\n  return owningAccountIsActorPrimaryAccount || userHasPublishPermissionForOwningAccount;\n}\n\nasync function fetchAndCacheNewDevelopmentCodeSigningInfoAsync(\n  easProjectId: string\n): Promise<CodeSigningInfo | null> {\n  const actor = await ensureLoggedInAsync();\n  let app: AppByIdQuery['app']['byId'];\n  try {\n    app = await AppQuery.byIdAsync(easProjectId);\n  } catch (e) {\n    if (e instanceof GraphQLError || e instanceof CombinedError) {\n      return null;\n    }\n    throw e;\n  }\n  if (!actorCanGetProjectDevelopmentCertificate(actor, app)) {\n    return null;\n  }\n\n  const keyPair = generateKeyPair();\n  const keyPairPEM = convertKeyPairToPEM(keyPair);\n  const csr = generateCSR(keyPair, `Development Certificate for ${easProjectId}`);\n  const csrPEM = convertCSRToCSRPEM(csr);\n  const [developmentSigningCertificate, expoGoIntermediateCertificate] = await Promise.all([\n    getProjectDevelopmentCertificateAsync(easProjectId, csrPEM),\n    getExpoGoIntermediateCertificateAsync(easProjectId),\n  ]);\n\n  await DevelopmentCodeSigningInfoFile.setAsync(easProjectId, {\n    easProjectId,\n    scopeKey: app.scopeKey,\n    privateKey: keyPairPEM.privateKeyPEM,\n    certificateChain: [developmentSigningCertificate, expoGoIntermediateCertificate],\n  });\n\n  return {\n    keyId: 'expo-go',\n    certificateChainForResponse: [developmentSigningCertificate, expoGoIntermediateCertificate],\n    certificateForPrivateKey: developmentSigningCertificate,\n    privateKey: keyPairPEM.privateKeyPEM,\n    scopeKey: app.scopeKey,\n  };\n}\n/**\n * Generate the `expo-signature` header for a manifest and code signing info.\n */\nexport function signManifestString(\n  stringifiedManifest: string,\n  codeSigningInfo: CodeSigningInfo\n): string {\n  const privateKey = convertPrivateKeyPEMToPrivateKey(codeSigningInfo.privateKey);\n  const certificate = convertCertificatePEMToCertificate(codeSigningInfo.certificateForPrivateKey);\n  return signBufferRSASHA256AndVerify(\n    privateKey,\n    certificate,\n    Buffer.from(stringifiedManifest, 'utf8')\n  );\n}\n"],"names":["getDevelopmentCodeSigningDirectory","DevelopmentCodeSigningInfoFile","getCodeSigningInfoAsync","signManifestString","debug","require","DEVELOPMENT_CODE_SIGNING_SETTINGS_FILE_NAME","path","join","getExpoHomeDirectory","getProjectDevelopmentCodeSigningInfoFile","defaults","getFile","easProjectId","filePath","JsonFile","readAsync","projectSettings","writeAsync","ensureDir","setAsync","json","mergeAsync","cantReadFileDefault","scopeKey","privateKey","certificateChain","exp","expectSignatureHeader","privateKeyPath","parsedExpectSignature","parseDictionary","CommandError","expectedKeyIdOuter","get","expectedKeyId","expectedAlg","expectedAlgOuter","expectedAlgTemp","getExpoRootDevelopmentCodeSigningInfoAsync","getProjectCodeSigningCertificateAsync","extra","eas","projectId","learnMore","developmentCodeSigningInfoFromFile","validatedCodeSigningInfo","validateStoredDevelopmentExpoRootCertificateCodeSigningInfo","env","EXPO_OFFLINE","fetchAndCacheNewDevelopmentCodeSigningInfoAsync","e","Log","warn","codeSigningCertificatePath","updates","codeSigningCertificate","codeSigningMetadata","alg","keyid","privateKeyPEM","certificatePEM","getProjectPrivateKeyAndCertificateFromFilePathsAsync","keyId","certificateForPrivateKey","certificateChainForResponse","readFileWithErrorAsync","errorMessage","fs","readFile","codeSigningCertificatePEM","Promise","all","convertPrivateKeyPEMToPrivateKey","certificate","convertCertificatePEMToCertificate","validateSelfSignedCertificate","publicKey","codeSigningInfo","certificatePEMs","map","now","Date","validity","notBefore","notAfter","actorCanGetProjectDevelopmentCertificate","actor","app","owningAccountId","ownerAccount","id","owningAccountIsActorPrimaryAccount","__typename","primaryAccount","userHasPublishPermissionForOwningAccount","accounts","find","account","users","userPermission","permissions","includes","Permission","Publish","ensureLoggedInAsync","AppQuery","byIdAsync","GraphQLError","CombinedError","keyPair","generateKeyPair","keyPairPEM","convertKeyPairToPEM","csr","generateCSR","csrPEM","convertCSRToCSRPEM","developmentSigningCertificate","expoGoIntermediateCertificate","getProjectDevelopmentCertificateAsync","getExpoGoIntermediateCertificateAsync","stringifiedManifest","signBufferRSASHA256AndVerify","Buffer","from"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js b/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js
index 26c7bd4..7ab260f 100644
--- a/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js
+++ b/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js
@@ -12,13 +12,6 @@ _export(exports, {
     getExpoGoVersionEntryAsync: ()=>getExpoGoVersionEntryAsync,
     downloadExpoGoAsync: ()=>downloadExpoGoAsync
 });
-function _getUserState() {
-    const data = require("@expo/config/build/getUserState");
-    _getUserState = function() {
-        return data;
-    };
-    return data;
-}
 function _path() {
     const data = /*#__PURE__*/ _interopRequireDefault(require("path"));
     _path = function() {
@@ -39,6 +32,7 @@ const _ora = require("./ora");
 const _profile = require("./profile");
 const _progress = require("./progress");
 const _getVersions = require("../api/getVersions");
+const _userSettings = require("../api/user/UserSettings");
 const _log = require("../log");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
@@ -49,12 +43,12 @@ const debug = require("debug")("expo:utils:downloadExpoGo");
 const platformSettings = {
     ios: {
         versionsKey: "iosClientUrl",
-        getFilePath: (filename)=>_path().default.join((0, _getUserState().getExpoHomeDirectory)(), "ios-simulator-app-cache", `${filename}.app`),
+        getFilePath: (filename)=>_path().default.join((0, _userSettings.getExpoHomeDirectory)(), "ios-simulator-app-cache", `${filename}.app`),
         shouldExtractResults: true
     },
     android: {
         versionsKey: "androidClientUrl",
-        getFilePath: (filename)=>_path().default.join((0, _getUserState().getExpoHomeDirectory)(), "android-apk-cache", `${filename}.apk`),
+        getFilePath: (filename)=>_path().default.join((0, _userSettings.getExpoHomeDirectory)(), "android-apk-cache", `${filename}.apk`),
         shouldExtractResults: false
     }
 };
@@ -100,7 +94,7 @@ async function downloadExpoGoAsync(platform, { url , sdkVersion  }) {
     try {
         const outputPath = getFilePath(filename);
         debug(`Downloading Expo Go from "${url}" to "${outputPath}".`);
-        debug(`The requested copy of Expo Go might already be cached in: "${(0, _getUserState().getExpoHomeDirectory)()}". You can disable the cache with EXPO_NO_CACHE=1`);
+        debug(`The requested copy of Expo Go might already be cached in: "${(0, _userSettings.getExpoHomeDirectory)()}". You can disable the cache with EXPO_NO_CACHE=1`);
         await (0, _profile.profile)(_downloadAppAsync.downloadAppAsync)({
             url,
             // Save all encrypted cache data to `~/.expo/expo-go`
diff --git a/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js.map b/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js.map
index 48298ce..98c170e 100644
--- a/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js.map
+++ b/node_modules/@expo/cli/build/src/utils/downloadExpoGoAsync.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/utils/downloadExpoGoAsync.ts"],"sourcesContent":["import { getExpoHomeDirectory } from '@expo/config/build/getUserState';\nimport path from 'path';\nimport ProgressBar from 'progress';\nimport { gt } from 'semver';\n\nimport { downloadAppAsync } from './downloadAppAsync';\nimport { CommandError } from './errors';\nimport { ora } from './ora';\nimport { profile } from './profile';\nimport { createProgressBar } from './progress';\nimport { getVersionsAsync, SDKVersion } from '../api/getVersions';\nimport { Log } from '../log';\n\nconst debug = require('debug')('expo:utils:downloadExpoGo') as typeof console.log;\n\nconst platformSettings: Record<\n  string,\n  {\n    shouldExtractResults: boolean;\n    versionsKey: keyof SDKVersion;\n    getFilePath: (filename: string) => string;\n  }\n> = {\n  ios: {\n    versionsKey: 'iosClientUrl',\n    getFilePath: (filename) =>\n      path.join(getExpoHomeDirectory(), 'ios-simulator-app-cache', `${filename}.app`),\n    shouldExtractResults: true,\n  },\n  android: {\n    versionsKey: 'androidClientUrl',\n    getFilePath: (filename) =>\n      path.join(getExpoHomeDirectory(), 'android-apk-cache', `${filename}.apk`),\n    shouldExtractResults: false,\n  },\n};\n\n/**\n * @internal exposed for testing.\n * @returns the matching `SDKVersion` object from the Expo API.\n */\nexport async function getExpoGoVersionEntryAsync(sdkVersion: string): Promise<SDKVersion> {\n  const { sdkVersions: versions } = await getVersionsAsync();\n  let version: SDKVersion;\n\n  if (sdkVersion.toUpperCase() === 'UNVERSIONED') {\n    // find the latest version\n    const latestVersionKey = Object.keys(versions).reduce((a, b) => {\n      if (gt(b, a)) {\n        return b;\n      }\n      return a;\n    }, '0.0.0');\n\n    Log.warn(\n      `Downloading the latest Expo Go client (${latestVersionKey}). This will not fully conform to UNVERSIONED.`\n    );\n    version = versions[latestVersionKey];\n  } else {\n    version = versions[sdkVersion];\n  }\n\n  if (!version) {\n    throw new CommandError(`Unable to find a version of Expo Go for SDK ${sdkVersion}`);\n  }\n  return version;\n}\n\n/** Download the Expo Go app from the Expo servers (if only it was this easy for every app). */\nexport async function downloadExpoGoAsync(\n  platform: keyof typeof platformSettings,\n  {\n    url,\n    sdkVersion,\n  }: {\n    url?: string;\n    sdkVersion: string;\n  }\n): Promise<string> {\n  const { getFilePath, versionsKey, shouldExtractResults } = platformSettings[platform];\n\n  const spinner = ora({ text: 'Fetching Expo Go', color: 'white' }).start();\n\n  let bar: ProgressBar | null = null;\n\n  try {\n    if (!url) {\n      const version = await getExpoGoVersionEntryAsync(sdkVersion);\n\n      debug(`Installing Expo Go version for SDK ${sdkVersion} at URL: ${version[versionsKey]}`);\n      url = version[versionsKey] as string;\n    }\n  } catch (error) {\n    spinner.fail();\n    throw error;\n  }\n\n  const filename = path.parse(url).name;\n\n  try {\n    const outputPath = getFilePath(filename);\n    debug(`Downloading Expo Go from \"${url}\" to \"${outputPath}\".`);\n    debug(\n      `The requested copy of Expo Go might already be cached in: \"${getExpoHomeDirectory()}\". You can disable the cache with EXPO_NO_CACHE=1`\n    );\n    await profile(downloadAppAsync)({\n      url,\n      // Save all encrypted cache data to `~/.expo/expo-go`\n      cacheDirectory: 'expo-go',\n      outputPath,\n      extract: shouldExtractResults,\n      onProgress({ progress, total }) {\n        if (progress && total) {\n          if (!bar) {\n            if (spinner.isSpinning) {\n              spinner.stop();\n            }\n            bar = createProgressBar('Downloading the Expo Go app [:bar] :percent :etas', {\n              width: 64,\n              total: 100,\n              // clear: true,\n              complete: '=',\n              incomplete: ' ',\n            });\n          } else {\n            bar!.update(progress, total);\n          }\n        }\n      },\n    });\n    return outputPath;\n  } finally {\n    spinner.stop();\n    // @ts-expect-error\n    bar?.terminate();\n  }\n}\n"],"names":["getExpoGoVersionEntryAsync","downloadExpoGoAsync","debug","require","platformSettings","ios","versionsKey","getFilePath","filename","path","join","getExpoHomeDirectory","shouldExtractResults","android","sdkVersion","sdkVersions","versions","getVersionsAsync","version","toUpperCase","latestVersionKey","Object","keys","reduce","a","b","gt","Log","warn","CommandError","platform","url","spinner","ora","text","color","start","bar","error","fail","parse","name","outputPath","profile","downloadAppAsync","cacheDirectory","extract","onProgress","progress","total","isSpinning","stop","createProgressBar","width","complete","incomplete","update","terminate"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/utils/downloadExpoGoAsync.ts"],"sourcesContent":["import path from 'path';\nimport ProgressBar from 'progress';\nimport { gt } from 'semver';\n\nimport { downloadAppAsync } from './downloadAppAsync';\nimport { CommandError } from './errors';\nimport { ora } from './ora';\nimport { profile } from './profile';\nimport { createProgressBar } from './progress';\nimport { getVersionsAsync, SDKVersion } from '../api/getVersions';\nimport { getExpoHomeDirectory } from '../api/user/UserSettings';\nimport { Log } from '../log';\n\nconst debug = require('debug')('expo:utils:downloadExpoGo') as typeof console.log;\n\nconst platformSettings: Record<\n  string,\n  {\n    shouldExtractResults: boolean;\n    versionsKey: keyof SDKVersion;\n    getFilePath: (filename: string) => string;\n  }\n> = {\n  ios: {\n    versionsKey: 'iosClientUrl',\n    getFilePath: (filename) =>\n      path.join(getExpoHomeDirectory(), 'ios-simulator-app-cache', `${filename}.app`),\n    shouldExtractResults: true,\n  },\n  android: {\n    versionsKey: 'androidClientUrl',\n    getFilePath: (filename) =>\n      path.join(getExpoHomeDirectory(), 'android-apk-cache', `${filename}.apk`),\n    shouldExtractResults: false,\n  },\n};\n\n/**\n * @internal exposed for testing.\n * @returns the matching `SDKVersion` object from the Expo API.\n */\nexport async function getExpoGoVersionEntryAsync(sdkVersion: string): Promise<SDKVersion> {\n  const { sdkVersions: versions } = await getVersionsAsync();\n  let version: SDKVersion;\n\n  if (sdkVersion.toUpperCase() === 'UNVERSIONED') {\n    // find the latest version\n    const latestVersionKey = Object.keys(versions).reduce((a, b) => {\n      if (gt(b, a)) {\n        return b;\n      }\n      return a;\n    }, '0.0.0');\n\n    Log.warn(\n      `Downloading the latest Expo Go client (${latestVersionKey}). This will not fully conform to UNVERSIONED.`\n    );\n    version = versions[latestVersionKey];\n  } else {\n    version = versions[sdkVersion];\n  }\n\n  if (!version) {\n    throw new CommandError(`Unable to find a version of Expo Go for SDK ${sdkVersion}`);\n  }\n  return version;\n}\n\n/** Download the Expo Go app from the Expo servers (if only it was this easy for every app). */\nexport async function downloadExpoGoAsync(\n  platform: keyof typeof platformSettings,\n  {\n    url,\n    sdkVersion,\n  }: {\n    url?: string;\n    sdkVersion: string;\n  }\n): Promise<string> {\n  const { getFilePath, versionsKey, shouldExtractResults } = platformSettings[platform];\n\n  const spinner = ora({ text: 'Fetching Expo Go', color: 'white' }).start();\n\n  let bar: ProgressBar | null = null;\n\n  try {\n    if (!url) {\n      const version = await getExpoGoVersionEntryAsync(sdkVersion);\n\n      debug(`Installing Expo Go version for SDK ${sdkVersion} at URL: ${version[versionsKey]}`);\n      url = version[versionsKey] as string;\n    }\n  } catch (error) {\n    spinner.fail();\n    throw error;\n  }\n\n  const filename = path.parse(url).name;\n\n  try {\n    const outputPath = getFilePath(filename);\n    debug(`Downloading Expo Go from \"${url}\" to \"${outputPath}\".`);\n    debug(\n      `The requested copy of Expo Go might already be cached in: \"${getExpoHomeDirectory()}\". You can disable the cache with EXPO_NO_CACHE=1`\n    );\n    await profile(downloadAppAsync)({\n      url,\n      // Save all encrypted cache data to `~/.expo/expo-go`\n      cacheDirectory: 'expo-go',\n      outputPath,\n      extract: shouldExtractResults,\n      onProgress({ progress, total }) {\n        if (progress && total) {\n          if (!bar) {\n            if (spinner.isSpinning) {\n              spinner.stop();\n            }\n            bar = createProgressBar('Downloading the Expo Go app [:bar] :percent :etas', {\n              width: 64,\n              total: 100,\n              // clear: true,\n              complete: '=',\n              incomplete: ' ',\n            });\n          } else {\n            bar!.update(progress, total);\n          }\n        }\n      },\n    });\n    return outputPath;\n  } finally {\n    spinner.stop();\n    // @ts-expect-error\n    bar?.terminate();\n  }\n}\n"],"names":["getExpoGoVersionEntryAsync","downloadExpoGoAsync","debug","require","platformSettings","ios","versionsKey","getFilePath","filename","path","join","getExpoHomeDirectory","shouldExtractResults","android","sdkVersion","sdkVersions","versions","getVersionsAsync","version","toUpperCase","latestVersionKey","Object","keys","reduce","a","b","gt","Log","warn","CommandError","platform","url","spinner","ora","text","color","start","bar","error","fail","parse","name","outputPath","profile","downloadAppAsync","cacheDirectory","extract","onProgress","progress","total","isSpinning","stop","createProgressBar","width","complete","incomplete","update","terminate"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/env.js b/node_modules/@expo/cli/build/src/utils/env.js
index e9afbba..497bcf9 100644
--- a/node_modules/@expo/cli/build/src/utils/env.js
+++ b/node_modules/@expo/cli/build/src/utils/env.js
@@ -175,6 +175,9 @@ class Env {
     /** Enable unstable/experimental support for deploying the native server in `npx expo run` commands. */ get EXPO_UNSTABLE_DEPLOY_SERVER() {
         return (0, _getenv().boolish)("EXPO_UNSTABLE_DEPLOY_SERVER", false);
     }
+    /** Is running in EAS Build. This is set by EAS: https://docs.expo.dev/eas/environment-variables/ */ get EAS_BUILD() {
+        return (0, _getenv().boolish)("EAS_BUILD", false);
+    }
     /** Disable the React Native Directory compatibility check for new architecture when installing packages */ get EXPO_NO_NEW_ARCH_COMPAT_CHECK() {
         return (0, _getenv().boolish)("EXPO_NO_NEW_ARCH_COMPAT_CHECK", false);
     }
diff --git a/node_modules/@expo/cli/build/src/utils/env.js.map b/node_modules/@expo/cli/build/src/utils/env.js.map
index fe47067..76fc704 100644
--- a/node_modules/@expo/cli/build/src/utils/env.js.map
+++ b/node_modules/@expo/cli/build/src/utils/env.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/utils/env.ts"],"sourcesContent":["import { boolish, int, string } from 'getenv';\n\n// @expo/webpack-config -> expo-pwa -> @expo/image-utils: EXPO_IMAGE_UTILS_NO_SHARP\n\n// TODO: EXPO_CLI_USERNAME, EXPO_CLI_PASSWORD\n\nclass Env {\n  /** Enable profiling metrics */\n  get EXPO_PROFILE() {\n    return boolish('EXPO_PROFILE', false);\n  }\n\n  /** Enable debug logging */\n  get EXPO_DEBUG() {\n    return boolish('EXPO_DEBUG', false);\n  }\n\n  /** Disable all network requests */\n  get EXPO_OFFLINE() {\n    return boolish('EXPO_OFFLINE', false);\n  }\n\n  /** Enable the beta version of Expo (TODO: Should this just be in the beta version of expo releases?) */\n  get EXPO_BETA() {\n    return boolish('EXPO_BETA', false);\n  }\n\n  /** Enable staging API environment */\n  get EXPO_STAGING() {\n    return boolish('EXPO_STAGING', false);\n  }\n\n  /** Enable local API environment */\n  get EXPO_LOCAL() {\n    return boolish('EXPO_LOCAL', false);\n  }\n\n  /** Is running in non-interactive CI mode */\n  get CI() {\n    return boolish('CI', false);\n  }\n\n  /** Disable telemetry (analytics) */\n  get EXPO_NO_TELEMETRY() {\n    return boolish('EXPO_NO_TELEMETRY', false);\n  }\n\n  /** Disable detaching telemetry to separate process */\n  get EXPO_NO_TELEMETRY_DETACH() {\n    return boolish('EXPO_NO_TELEMETRY_DETACH', false);\n  }\n\n  /** local directory to the universe repo for testing locally */\n  get EXPO_UNIVERSE_DIR() {\n    return string('EXPO_UNIVERSE_DIR', '');\n  }\n\n  /** @deprecated Default Webpack host string */\n  get WEB_HOST() {\n    return string('WEB_HOST', '0.0.0.0');\n  }\n\n  /** Skip warning users about a dirty git status */\n  get EXPO_NO_GIT_STATUS() {\n    return boolish('EXPO_NO_GIT_STATUS', false);\n  }\n  /** Disable auto web setup */\n  get EXPO_NO_WEB_SETUP() {\n    return boolish('EXPO_NO_WEB_SETUP', false);\n  }\n  /** Disable auto TypeScript setup */\n  get EXPO_NO_TYPESCRIPT_SETUP() {\n    return boolish('EXPO_NO_TYPESCRIPT_SETUP', false);\n  }\n  /** Disable all API caches. Does not disable bundler caches. */\n  get EXPO_NO_CACHE() {\n    return boolish('EXPO_NO_CACHE', false);\n  }\n  /** Disable the app select redirect page. */\n  get EXPO_NO_REDIRECT_PAGE() {\n    return boolish('EXPO_NO_REDIRECT_PAGE', false);\n  }\n  /** The React Metro port that's baked into react-native scripts and tools. */\n  get RCT_METRO_PORT() {\n    return int('RCT_METRO_PORT', 0);\n  }\n  /** Skip validating the manifest during `export`. */\n  get EXPO_SKIP_MANIFEST_VALIDATION_TOKEN(): boolean {\n    return !!string('EXPO_SKIP_MANIFEST_VALIDATION_TOKEN', '');\n  }\n\n  /** Public folder path relative to the project root. Default to `public` */\n  get EXPO_PUBLIC_FOLDER(): string {\n    return string('EXPO_PUBLIC_FOLDER', 'public');\n  }\n\n  /** Higher priority `$EDIOTR` variable for indicating which editor to use when pressing `o` in the Terminal UI. */\n  get EXPO_EDITOR(): string {\n    return string('EXPO_EDITOR', '');\n  }\n\n  /**\n   * Overwrite the dev server URL, disregarding the `--port`, `--host`, `--tunnel`, `--lan`, `--localhost` arguments.\n   * This is useful for browser editors that require custom proxy URLs.\n   */\n  get EXPO_PACKAGER_PROXY_URL(): string {\n    return string('EXPO_PACKAGER_PROXY_URL', '');\n  }\n\n  /**\n   * **Experimental** - Disable using `exp.direct` as the hostname for\n   * `--tunnel` connections. This enables **https://** forwarding which\n   * can be used to test universal links on iOS.\n   *\n   * This may cause issues with `expo-linking` and Expo Go.\n   *\n   * Select the exact subdomain by passing a string value that is not one of: `true`, `false`, `1`, `0`.\n   */\n  get EXPO_TUNNEL_SUBDOMAIN(): string | boolean {\n    const subdomain = string('EXPO_TUNNEL_SUBDOMAIN', '');\n    if (['0', 'false', ''].includes(subdomain)) {\n      return false;\n    } else if (['1', 'true'].includes(subdomain)) {\n      return true;\n    }\n    return subdomain;\n  }\n\n  /**\n   * Force Expo CLI to use the [`resolver.resolverMainFields`](https://facebook.github.io/metro/docs/configuration/#resolvermainfields) from the project `metro.config.js` for all platforms.\n   *\n   * By default, Expo CLI will use `['browser', 'module', 'main']` (default for Webpack) for web and the user-defined main fields for other platforms.\n   */\n  get EXPO_METRO_NO_MAIN_FIELD_OVERRIDE(): boolean {\n    return boolish('EXPO_METRO_NO_MAIN_FIELD_OVERRIDE', false);\n  }\n\n  /**\n   * HTTP/HTTPS proxy to connect to for network requests. Configures [https-proxy-agent](https://www.npmjs.com/package/https-proxy-agent).\n   */\n  get HTTP_PROXY(): string {\n    return process.env.HTTP_PROXY || process.env.http_proxy || '';\n  }\n\n  /**\n   * Use the network inspector by overriding the metro inspector proxy with a custom version.\n   * @deprecated This has been replaced by `@react-native/dev-middleware` and is now unused.\n   */\n  get EXPO_NO_INSPECTOR_PROXY(): boolean {\n    return boolish('EXPO_NO_INSPECTOR_PROXY', false);\n  }\n\n  /** Disable lazy bundling in Metro bundler. */\n  get EXPO_NO_METRO_LAZY() {\n    return boolish('EXPO_NO_METRO_LAZY', false);\n  }\n\n  /** Enable the unstable inverse dependency stack trace for Metro bundling errors. */\n  get EXPO_METRO_UNSTABLE_ERRORS() {\n    return boolish('EXPO_METRO_UNSTABLE_ERRORS', false);\n  }\n\n  /** Enable the unstable fast resolver for Metro. */\n  get EXPO_USE_FAST_RESOLVER() {\n    return boolish('EXPO_USE_FAST_RESOLVER', false);\n  }\n\n  /** Disable Environment Variable injection in client bundles. */\n  get EXPO_NO_CLIENT_ENV_VARS(): boolean {\n    return boolish('EXPO_NO_CLIENT_ENV_VARS', false);\n  }\n\n  /** Set the default `user` that should be passed to `--user` with ADB commands. Used for installing APKs on Android devices with multiple profiles. Defaults to `0`. */\n  get EXPO_ADB_USER(): string {\n    return string('EXPO_ADB_USER', '0');\n  }\n\n  /** Used internally to enable E2E utilities. This behavior is not stable to external users. */\n  get __EXPO_E2E_TEST(): boolean {\n    return boolish('__EXPO_E2E_TEST', false);\n  }\n\n  /** Unstable: Force single-bundle exports in production. */\n  get EXPO_NO_BUNDLE_SPLITTING(): boolean {\n    return boolish('EXPO_NO_BUNDLE_SPLITTING', false);\n  }\n\n  /** Enable unstable/experimental Atlas to gather bundle information during development or export */\n  get EXPO_UNSTABLE_ATLAS() {\n    return boolish('EXPO_UNSTABLE_ATLAS', false);\n  }\n\n  /** Unstable: Enable tree shaking for Metro. */\n  get EXPO_UNSTABLE_TREE_SHAKING() {\n    return boolish('EXPO_UNSTABLE_TREE_SHAKING', false);\n  }\n\n  /** Unstable: Enable eager bundling where transformation runs uncached after the entire bundle has been created. This is required for production tree shaking and less optimized for development bundling. */\n  get EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH() {\n    return boolish('EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH', false);\n  }\n\n  /** Enable the use of Expo's custom metro require implementation. The custom require supports better debugging, tree shaking, and React Server Components. */\n  get EXPO_USE_METRO_REQUIRE() {\n    return boolish('EXPO_USE_METRO_REQUIRE', false);\n  }\n\n  /** Internal key used to pass eager bundle data from the CLI to the native run scripts during `npx expo run` commands. */\n  get __EXPO_EAGER_BUNDLE_OPTIONS() {\n    return string('__EXPO_EAGER_BUNDLE_OPTIONS', '');\n  }\n\n  /** Disable server deployment during production builds (during `expo export:embed`). This is useful for testing API routes and server components against a local server. */\n  get EXPO_NO_DEPLOY(): boolean {\n    return boolish('EXPO_NO_DEPLOY', false);\n  }\n\n  /** Enable hydration during development when rendering Expo Web */\n  get EXPO_WEB_DEV_HYDRATE(): boolean {\n    return boolish('EXPO_WEB_DEV_HYDRATE', false);\n  }\n\n  /** Enable experimental React Server Functions support. */\n  get EXPO_UNSTABLE_SERVER_FUNCTIONS(): boolean {\n    return boolish('EXPO_UNSTABLE_SERVER_FUNCTIONS', false);\n  }\n\n  /** Enable unstable/experimental mode where React Native Web isn't required to run Expo apps on web. */\n  get EXPO_NO_REACT_NATIVE_WEB(): boolean {\n    return boolish('EXPO_NO_REACT_NATIVE_WEB', false);\n  }\n\n  /** Enable unstable/experimental support for deploying the native server in `npx expo run` commands. */\n  get EXPO_UNSTABLE_DEPLOY_SERVER(): boolean {\n    return boolish('EXPO_UNSTABLE_DEPLOY_SERVER', false);\n  }\n\n  /** Disable the React Native Directory compatibility check for new architecture when installing packages */\n  get EXPO_NO_NEW_ARCH_COMPAT_CHECK(): boolean {\n    return boolish('EXPO_NO_NEW_ARCH_COMPAT_CHECK', false);\n  }\n}\n\nexport const env = new Env();\n"],"names":["env","Env","EXPO_PROFILE","boolish","EXPO_DEBUG","EXPO_OFFLINE","EXPO_BETA","EXPO_STAGING","EXPO_LOCAL","CI","EXPO_NO_TELEMETRY","EXPO_NO_TELEMETRY_DETACH","EXPO_UNIVERSE_DIR","string","WEB_HOST","EXPO_NO_GIT_STATUS","EXPO_NO_WEB_SETUP","EXPO_NO_TYPESCRIPT_SETUP","EXPO_NO_CACHE","EXPO_NO_REDIRECT_PAGE","RCT_METRO_PORT","int","EXPO_SKIP_MANIFEST_VALIDATION_TOKEN","EXPO_PUBLIC_FOLDER","EXPO_EDITOR","EXPO_PACKAGER_PROXY_URL","EXPO_TUNNEL_SUBDOMAIN","subdomain","includes","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","HTTP_PROXY","process","http_proxy","EXPO_NO_INSPECTOR_PROXY","EXPO_NO_METRO_LAZY","EXPO_METRO_UNSTABLE_ERRORS","EXPO_USE_FAST_RESOLVER","EXPO_NO_CLIENT_ENV_VARS","EXPO_ADB_USER","__EXPO_E2E_TEST","EXPO_NO_BUNDLE_SPLITTING","EXPO_UNSTABLE_ATLAS","EXPO_UNSTABLE_TREE_SHAKING","EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH","EXPO_USE_METRO_REQUIRE","__EXPO_EAGER_BUNDLE_OPTIONS","EXPO_NO_DEPLOY","EXPO_WEB_DEV_HYDRATE","EXPO_UNSTABLE_SERVER_FUNCTIONS","EXPO_NO_REACT_NATIVE_WEB","EXPO_UNSTABLE_DEPLOY_SERVER","EXPO_NO_NEW_ARCH_COMPAT_CHECK"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/utils/env.ts"],"sourcesContent":["import { boolish, int, string } from 'getenv';\n\n// @expo/webpack-config -> expo-pwa -> @expo/image-utils: EXPO_IMAGE_UTILS_NO_SHARP\n\n// TODO: EXPO_CLI_USERNAME, EXPO_CLI_PASSWORD\n\nclass Env {\n  /** Enable profiling metrics */\n  get EXPO_PROFILE() {\n    return boolish('EXPO_PROFILE', false);\n  }\n\n  /** Enable debug logging */\n  get EXPO_DEBUG() {\n    return boolish('EXPO_DEBUG', false);\n  }\n\n  /** Disable all network requests */\n  get EXPO_OFFLINE() {\n    return boolish('EXPO_OFFLINE', false);\n  }\n\n  /** Enable the beta version of Expo (TODO: Should this just be in the beta version of expo releases?) */\n  get EXPO_BETA() {\n    return boolish('EXPO_BETA', false);\n  }\n\n  /** Enable staging API environment */\n  get EXPO_STAGING() {\n    return boolish('EXPO_STAGING', false);\n  }\n\n  /** Enable local API environment */\n  get EXPO_LOCAL() {\n    return boolish('EXPO_LOCAL', false);\n  }\n\n  /** Is running in non-interactive CI mode */\n  get CI() {\n    return boolish('CI', false);\n  }\n\n  /** Disable telemetry (analytics) */\n  get EXPO_NO_TELEMETRY() {\n    return boolish('EXPO_NO_TELEMETRY', false);\n  }\n\n  /** Disable detaching telemetry to separate process */\n  get EXPO_NO_TELEMETRY_DETACH() {\n    return boolish('EXPO_NO_TELEMETRY_DETACH', false);\n  }\n\n  /** local directory to the universe repo for testing locally */\n  get EXPO_UNIVERSE_DIR() {\n    return string('EXPO_UNIVERSE_DIR', '');\n  }\n\n  /** @deprecated Default Webpack host string */\n  get WEB_HOST() {\n    return string('WEB_HOST', '0.0.0.0');\n  }\n\n  /** Skip warning users about a dirty git status */\n  get EXPO_NO_GIT_STATUS() {\n    return boolish('EXPO_NO_GIT_STATUS', false);\n  }\n  /** Disable auto web setup */\n  get EXPO_NO_WEB_SETUP() {\n    return boolish('EXPO_NO_WEB_SETUP', false);\n  }\n  /** Disable auto TypeScript setup */\n  get EXPO_NO_TYPESCRIPT_SETUP() {\n    return boolish('EXPO_NO_TYPESCRIPT_SETUP', false);\n  }\n  /** Disable all API caches. Does not disable bundler caches. */\n  get EXPO_NO_CACHE() {\n    return boolish('EXPO_NO_CACHE', false);\n  }\n  /** Disable the app select redirect page. */\n  get EXPO_NO_REDIRECT_PAGE() {\n    return boolish('EXPO_NO_REDIRECT_PAGE', false);\n  }\n  /** The React Metro port that's baked into react-native scripts and tools. */\n  get RCT_METRO_PORT() {\n    return int('RCT_METRO_PORT', 0);\n  }\n  /** Skip validating the manifest during `export`. */\n  get EXPO_SKIP_MANIFEST_VALIDATION_TOKEN(): boolean {\n    return !!string('EXPO_SKIP_MANIFEST_VALIDATION_TOKEN', '');\n  }\n\n  /** Public folder path relative to the project root. Default to `public` */\n  get EXPO_PUBLIC_FOLDER(): string {\n    return string('EXPO_PUBLIC_FOLDER', 'public');\n  }\n\n  /** Higher priority `$EDIOTR` variable for indicating which editor to use when pressing `o` in the Terminal UI. */\n  get EXPO_EDITOR(): string {\n    return string('EXPO_EDITOR', '');\n  }\n\n  /**\n   * Overwrite the dev server URL, disregarding the `--port`, `--host`, `--tunnel`, `--lan`, `--localhost` arguments.\n   * This is useful for browser editors that require custom proxy URLs.\n   */\n  get EXPO_PACKAGER_PROXY_URL(): string {\n    return string('EXPO_PACKAGER_PROXY_URL', '');\n  }\n\n  /**\n   * **Experimental** - Disable using `exp.direct` as the hostname for\n   * `--tunnel` connections. This enables **https://** forwarding which\n   * can be used to test universal links on iOS.\n   *\n   * This may cause issues with `expo-linking` and Expo Go.\n   *\n   * Select the exact subdomain by passing a string value that is not one of: `true`, `false`, `1`, `0`.\n   */\n  get EXPO_TUNNEL_SUBDOMAIN(): string | boolean {\n    const subdomain = string('EXPO_TUNNEL_SUBDOMAIN', '');\n    if (['0', 'false', ''].includes(subdomain)) {\n      return false;\n    } else if (['1', 'true'].includes(subdomain)) {\n      return true;\n    }\n    return subdomain;\n  }\n\n  /**\n   * Force Expo CLI to use the [`resolver.resolverMainFields`](https://facebook.github.io/metro/docs/configuration/#resolvermainfields) from the project `metro.config.js` for all platforms.\n   *\n   * By default, Expo CLI will use `['browser', 'module', 'main']` (default for Webpack) for web and the user-defined main fields for other platforms.\n   */\n  get EXPO_METRO_NO_MAIN_FIELD_OVERRIDE(): boolean {\n    return boolish('EXPO_METRO_NO_MAIN_FIELD_OVERRIDE', false);\n  }\n\n  /**\n   * HTTP/HTTPS proxy to connect to for network requests. Configures [https-proxy-agent](https://www.npmjs.com/package/https-proxy-agent).\n   */\n  get HTTP_PROXY(): string {\n    return process.env.HTTP_PROXY || process.env.http_proxy || '';\n  }\n\n  /**\n   * Use the network inspector by overriding the metro inspector proxy with a custom version.\n   * @deprecated This has been replaced by `@react-native/dev-middleware` and is now unused.\n   */\n  get EXPO_NO_INSPECTOR_PROXY(): boolean {\n    return boolish('EXPO_NO_INSPECTOR_PROXY', false);\n  }\n\n  /** Disable lazy bundling in Metro bundler. */\n  get EXPO_NO_METRO_LAZY() {\n    return boolish('EXPO_NO_METRO_LAZY', false);\n  }\n\n  /** Enable the unstable inverse dependency stack trace for Metro bundling errors. */\n  get EXPO_METRO_UNSTABLE_ERRORS() {\n    return boolish('EXPO_METRO_UNSTABLE_ERRORS', false);\n  }\n\n  /** Enable the unstable fast resolver for Metro. */\n  get EXPO_USE_FAST_RESOLVER() {\n    return boolish('EXPO_USE_FAST_RESOLVER', false);\n  }\n\n  /** Disable Environment Variable injection in client bundles. */\n  get EXPO_NO_CLIENT_ENV_VARS(): boolean {\n    return boolish('EXPO_NO_CLIENT_ENV_VARS', false);\n  }\n\n  /** Set the default `user` that should be passed to `--user` with ADB commands. Used for installing APKs on Android devices with multiple profiles. Defaults to `0`. */\n  get EXPO_ADB_USER(): string {\n    return string('EXPO_ADB_USER', '0');\n  }\n\n  /** Used internally to enable E2E utilities. This behavior is not stable to external users. */\n  get __EXPO_E2E_TEST(): boolean {\n    return boolish('__EXPO_E2E_TEST', false);\n  }\n\n  /** Unstable: Force single-bundle exports in production. */\n  get EXPO_NO_BUNDLE_SPLITTING(): boolean {\n    return boolish('EXPO_NO_BUNDLE_SPLITTING', false);\n  }\n\n  /** Enable unstable/experimental Atlas to gather bundle information during development or export */\n  get EXPO_UNSTABLE_ATLAS() {\n    return boolish('EXPO_UNSTABLE_ATLAS', false);\n  }\n\n  /** Unstable: Enable tree shaking for Metro. */\n  get EXPO_UNSTABLE_TREE_SHAKING() {\n    return boolish('EXPO_UNSTABLE_TREE_SHAKING', false);\n  }\n\n  /** Unstable: Enable eager bundling where transformation runs uncached after the entire bundle has been created. This is required for production tree shaking and less optimized for development bundling. */\n  get EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH() {\n    return boolish('EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH', false);\n  }\n\n  /** Enable the use of Expo's custom metro require implementation. The custom require supports better debugging, tree shaking, and React Server Components. */\n  get EXPO_USE_METRO_REQUIRE() {\n    return boolish('EXPO_USE_METRO_REQUIRE', false);\n  }\n\n  /** Internal key used to pass eager bundle data from the CLI to the native run scripts during `npx expo run` commands. */\n  get __EXPO_EAGER_BUNDLE_OPTIONS() {\n    return string('__EXPO_EAGER_BUNDLE_OPTIONS', '');\n  }\n\n  /** Disable server deployment during production builds (during `expo export:embed`). This is useful for testing API routes and server components against a local server. */\n  get EXPO_NO_DEPLOY(): boolean {\n    return boolish('EXPO_NO_DEPLOY', false);\n  }\n\n  /** Enable hydration during development when rendering Expo Web */\n  get EXPO_WEB_DEV_HYDRATE(): boolean {\n    return boolish('EXPO_WEB_DEV_HYDRATE', false);\n  }\n\n  /** Enable experimental React Server Functions support. */\n  get EXPO_UNSTABLE_SERVER_FUNCTIONS(): boolean {\n    return boolish('EXPO_UNSTABLE_SERVER_FUNCTIONS', false);\n  }\n\n  /** Enable unstable/experimental mode where React Native Web isn't required to run Expo apps on web. */\n  get EXPO_NO_REACT_NATIVE_WEB(): boolean {\n    return boolish('EXPO_NO_REACT_NATIVE_WEB', false);\n  }\n\n  /** Enable unstable/experimental support for deploying the native server in `npx expo run` commands. */\n  get EXPO_UNSTABLE_DEPLOY_SERVER(): boolean {\n    return boolish('EXPO_UNSTABLE_DEPLOY_SERVER', false);\n  }\n\n  /** Is running in EAS Build. This is set by EAS: https://docs.expo.dev/eas/environment-variables/ */\n  get EAS_BUILD(): boolean {\n    return boolish('EAS_BUILD', false);\n  }\n\n  /** Disable the React Native Directory compatibility check for new architecture when installing packages */\n  get EXPO_NO_NEW_ARCH_COMPAT_CHECK(): boolean {\n    return boolish('EXPO_NO_NEW_ARCH_COMPAT_CHECK', false);\n  }\n}\n\nexport const env = new Env();\n"],"names":["env","Env","EXPO_PROFILE","boolish","EXPO_DEBUG","EXPO_OFFLINE","EXPO_BETA","EXPO_STAGING","EXPO_LOCAL","CI","EXPO_NO_TELEMETRY","EXPO_NO_TELEMETRY_DETACH","EXPO_UNIVERSE_DIR","string","WEB_HOST","EXPO_NO_GIT_STATUS","EXPO_NO_WEB_SETUP","EXPO_NO_TYPESCRIPT_SETUP","EXPO_NO_CACHE","EXPO_NO_REDIRECT_PAGE","RCT_METRO_PORT","int","EXPO_SKIP_MANIFEST_VALIDATION_TOKEN","EXPO_PUBLIC_FOLDER","EXPO_EDITOR","EXPO_PACKAGER_PROXY_URL","EXPO_TUNNEL_SUBDOMAIN","subdomain","includes","EXPO_METRO_NO_MAIN_FIELD_OVERRIDE","HTTP_PROXY","process","http_proxy","EXPO_NO_INSPECTOR_PROXY","EXPO_NO_METRO_LAZY","EXPO_METRO_UNSTABLE_ERRORS","EXPO_USE_FAST_RESOLVER","EXPO_NO_CLIENT_ENV_VARS","EXPO_ADB_USER","__EXPO_E2E_TEST","EXPO_NO_BUNDLE_SPLITTING","EXPO_UNSTABLE_ATLAS","EXPO_UNSTABLE_TREE_SHAKING","EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH","EXPO_USE_METRO_REQUIRE","__EXPO_EAGER_BUNDLE_OPTIONS","EXPO_NO_DEPLOY","EXPO_WEB_DEV_HYDRATE","EXPO_UNSTABLE_SERVER_FUNCTIONS","EXPO_NO_REACT_NATIVE_WEB","EXPO_UNSTABLE_DEPLOY_SERVER","EAS_BUILD","EXPO_NO_NEW_ARCH_COMPAT_CHECK"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/getAccountUsername.js b/node_modules/@expo/cli/build/src/utils/getAccountUsername.js
new file mode 100644
index 0000000..a65119a
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/utils/getAccountUsername.js
@@ -0,0 +1,22 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", {
+    value: true
+});
+Object.defineProperty(exports, "getAccountUsername", {
+    enumerable: true,
+    get: ()=>getAccountUsername
+});
+const _userSettings = require("../api/user/UserSettings");
+const ANONYMOUS_USERNAME = "anonymous";
+function getAccountUsername(manifest = {}) {
+    var ref;
+    // TODO: Must match what's generated in Expo Go.
+    const username = manifest.owner || process.env.EXPO_CLI_USERNAME || process.env.EAS_BUILD_USERNAME;
+    if (username) {
+        return username;
+    }
+    // Statically get the username from the global user state.
+    return ((ref = (0, _userSettings.getSettings)().read().auth) == null ? void 0 : ref.username) || ANONYMOUS_USERNAME;
+}
+
+//# sourceMappingURL=getAccountUsername.js.map
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/getAccountUsername.js.map b/node_modules/@expo/cli/build/src/utils/getAccountUsername.js.map
new file mode 100644
index 0000000..787582e
--- /dev/null
+++ b/node_modules/@expo/cli/build/src/utils/getAccountUsername.js.map
@@ -0,0 +1 @@
+{"version":3,"sources":["../../../src/utils/getAccountUsername.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\n\nimport { getSettings } from '../api/user/UserSettings';\n\nconst ANONYMOUS_USERNAME = 'anonymous';\n\n/**\n * Get the owner of the project from the manifest if specified, falling back to a bunch of different things\n * which may or may not be the owner of the project.\n *\n * @deprecated This may not actually be the owner of the project. Prefer to fetch the project owner using\n * the EAS project ID, falling back to the `owner` field.\n */\nexport function getAccountUsername(manifest: Pick<ExpoConfig, 'owner'> = {}): string {\n  // TODO: Must match what's generated in Expo Go.\n  const username =\n    manifest.owner || process.env.EXPO_CLI_USERNAME || process.env.EAS_BUILD_USERNAME;\n  if (username) {\n    return username;\n  }\n  // Statically get the username from the global user state.\n  return getSettings().read().auth?.username || ANONYMOUS_USERNAME;\n}\n"],"names":["getAccountUsername","ANONYMOUS_USERNAME","manifest","getSettings","username","owner","process","env","EXPO_CLI_USERNAME","EAS_BUILD_USERNAME","read","auth"],"mappings":"AAAA;;;;+BAagBA,oBAAkB;;aAAlBA,kBAAkB;;8BAXN,0BAA0B;AAEtD,MAAMC,kBAAkB,GAAG,WAAW,AAAC;AAShC,SAASD,kBAAkB,CAACE,QAAmC,GAAG,EAAE,EAAU;QAQ5EC,GAAyB;IAPhC,gDAAgD;IAChD,MAAMC,QAAQ,GACZF,QAAQ,CAACG,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAIF,OAAO,CAACC,GAAG,CAACE,kBAAkB,AAAC;IACpF,IAAIL,QAAQ,EAAE;QACZ,OAAOA,QAAQ,CAAC;IAClB,CAAC;IACD,0DAA0D;IAC1D,OAAOD,CAAAA,CAAAA,GAAyB,GAAzBA,IAAAA,aAAW,YAAA,GAAE,CAACO,IAAI,EAAE,CAACC,IAAI,SAAU,GAAnCR,KAAAA,CAAmC,GAAnCA,GAAyB,CAAEC,QAAQ,CAAA,IAAIH,kBAAkB,CAAC;AACnE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js b/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js
index 7ab0393..6175fb0 100644
--- a/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js
+++ b/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js
@@ -32,6 +32,7 @@ const _modifyConfigAsync = require("./modifyConfigAsync");
 const _prompts = /*#__PURE__*/ _interopRequireWildcard(require("./prompts"));
 const _validateApplicationId = require("./validateApplicationId");
 const _log = /*#__PURE__*/ _interopRequireWildcard(require("../log"));
+const _getAccountUsername = require("./getAccountUsername");
 function _interopRequireDefault(obj) {
     return obj && obj.__esModule ? obj : {
         default: obj
@@ -79,7 +80,7 @@ function _interopRequireWildcard(obj, nodeInterop) {
 const debug = require("debug")("expo:app-id");
 function getExpoUsername(exp) {
     // Account for if the environment variable was an empty string.
-    return (0, _config().getAccountUsername)(exp) || "anonymous";
+    return (0, _getAccountUsername.getAccountUsername)(exp) || "anonymous";
 }
 const NO_BUNDLE_ID_MESSAGE = `Project must have a \`ios.bundleIdentifier\` set in the Expo config (app.json or app.config.js).`;
 const NO_PACKAGE_MESSAGE = `Project must have a \`android.package\` set in the Expo config (app.json or app.config.js).`;
diff --git a/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js.map b/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js.map
index 699dd5f..0272490 100644
--- a/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js.map
+++ b/node_modules/@expo/cli/build/src/utils/getOrPromptApplicationId.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/utils/getOrPromptApplicationId.ts"],"sourcesContent":["import { ExpoConfig, getAccountUsername, getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { memoize } from './fn';\nimport { learnMore } from './link';\nimport { attemptModification } from './modifyConfigAsync';\nimport prompt, { confirmAsync } from './prompts';\nimport {\n  assertValidBundleId,\n  assertValidPackage,\n  getBundleIdWarningAsync,\n  getPackageNameWarningAsync,\n  getSanitizedBundleIdentifier,\n  getSanitizedPackage,\n  validateBundleId,\n  validatePackage,\n  validatePackageWithWarning,\n} from './validateApplicationId';\nimport * as Log from '../log';\n\nconst debug = require('debug')('expo:app-id') as typeof console.log;\n\nfunction getExpoUsername(exp: ExpoConfig) {\n  // Account for if the environment variable was an empty string.\n  return getAccountUsername(exp) || 'anonymous';\n}\n\nconst NO_BUNDLE_ID_MESSAGE = `Project must have a \\`ios.bundleIdentifier\\` set in the Expo config (app.json or app.config.js).`;\n\nconst NO_PACKAGE_MESSAGE = `Project must have a \\`android.package\\` set in the Expo config (app.json or app.config.js).`;\n\n/**\n * Get the bundle identifier from the Expo config or prompt the user to choose a new bundle identifier.\n * Prompted value will be validated against the App Store and a local regex.\n * If the project Expo config is a static JSON file, the bundle identifier will be updated in the config automatically.\n */\nexport async function getOrPromptForBundleIdentifier(\n  projectRoot: string,\n  exp: ExpoConfig = getConfig(projectRoot).exp\n): Promise<string> {\n  const current = exp.ios?.bundleIdentifier;\n  if (current) {\n    assertValidBundleId(current);\n    return current;\n  }\n\n  return promptForBundleIdWithInitialAsync(projectRoot, exp, getRecommendedBundleId(exp));\n}\n\nconst memoLog = memoize(Log.log);\n\nasync function promptForBundleIdWithInitialAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  bundleIdentifier?: string\n): Promise<string> {\n  if (!bundleIdentifier) {\n    memoLog(\n      chalk`\\n{bold 📝  iOS Bundle Identifier} {dim ${learnMore(\n        'https://expo.fyi/bundle-identifier'\n      )}}\\n`\n    );\n\n    // Prompt the user for the bundle ID.\n    // Even if the project is using a dynamic config we can still\n    // prompt a better error message, recommend a default value, and help the user\n    // validate their custom bundle ID upfront.\n    const { input } = await prompt(\n      {\n        type: 'text',\n        name: 'input',\n        // The Apple helps people know this isn't an EAS feature.\n        message: `What would you like your iOS bundle identifier to be?`,\n        validate: validateBundleId,\n      },\n      {\n        nonInteractiveHelp: NO_BUNDLE_ID_MESSAGE,\n      }\n    );\n    bundleIdentifier = input as string;\n  }\n\n  // Warn the user if the bundle ID is already in use.\n  const warning = await getBundleIdWarningAsync(bundleIdentifier);\n\n  if (warning && !(await warnAndConfirmAsync(warning))) {\n    // Cycle the Bundle ID prompt to try again.\n    return await promptForBundleIdWithInitialAsync(projectRoot, exp);\n  }\n\n  // Apply the changes to the config.\n  if (\n    await attemptModification(\n      projectRoot,\n      {\n        ios: { ...(exp.ios || {}), bundleIdentifier },\n      },\n      { ios: { bundleIdentifier } }\n    )\n  ) {\n    Log.log(chalk.gray`\\u203A Apple bundle identifier: ${bundleIdentifier}`);\n  }\n\n  return bundleIdentifier;\n}\n\nasync function warnAndConfirmAsync(warning: string): Promise<boolean> {\n  Log.log();\n  Log.warn(warning);\n  Log.log();\n  if (\n    !(await confirmAsync({\n      message: `Continue?`,\n      initial: true,\n    }))\n  ) {\n    return false;\n  }\n  return true;\n}\n\n// Recommend a bundle identifier based on the username and project slug.\nfunction getRecommendedBundleId(exp: ExpoConfig): string | undefined {\n  const possibleIdFromAndroid = exp.android?.package\n    ? getSanitizedBundleIdentifier(exp.android.package)\n    : undefined;\n  // Attempt to use the android package name first since it's convenient to have them aligned.\n  if (possibleIdFromAndroid && validateBundleId(possibleIdFromAndroid)) {\n    return possibleIdFromAndroid;\n  } else {\n    const username = getExpoUsername(exp);\n    const possibleId = getSanitizedBundleIdentifier(`com.${username}.${exp.slug}`);\n    if (validateBundleId(possibleId)) {\n      return possibleId;\n    }\n  }\n\n  return undefined;\n}\n\n// Recommend a package name based on the username and project slug.\nfunction getRecommendedPackageName(exp: ExpoConfig): string | undefined {\n  const possibleIdFromApple = exp.ios?.bundleIdentifier\n    ? getSanitizedPackage(exp.ios.bundleIdentifier)\n    : undefined;\n\n  // Attempt to use the ios bundle id first since it's convenient to have them aligned.\n  if (possibleIdFromApple && validatePackage(possibleIdFromApple)) {\n    return possibleIdFromApple;\n  } else {\n    const username = getExpoUsername(exp);\n    const possibleId = getSanitizedPackage(`com.${username}.${exp.slug}`);\n    if (validatePackage(possibleId)) {\n      return possibleId;\n    } else {\n      debug(\n        `Recommended package name is invalid: \"${possibleId}\" (username: ${username}, slug: ${exp.slug})`\n      );\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the package name from the Expo config or prompt the user to choose a new package name.\n * Prompted value will be validated against the Play Store and a local regex.\n * If the project Expo config is a static JSON file, the package name will be updated in the config automatically.\n */\nexport async function getOrPromptForPackage(\n  projectRoot: string,\n  exp: ExpoConfig = getConfig(projectRoot).exp\n): Promise<string> {\n  const current = exp.android?.package;\n  if (current) {\n    assertValidPackage(current);\n    return current;\n  }\n\n  return await promptForPackageAsync(projectRoot, exp);\n}\n\nfunction promptForPackageAsync(projectRoot: string, exp: ExpoConfig): Promise<string> {\n  return promptForPackageWithInitialAsync(projectRoot, exp, getRecommendedPackageName(exp));\n}\n\nasync function promptForPackageWithInitialAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  packageName?: string\n): Promise<string> {\n  if (!packageName) {\n    memoLog(\n      chalk`\\n{bold 📝  Android package} {dim ${learnMore('https://expo.fyi/android-package')}}\\n`\n    );\n\n    // Prompt the user for the android package.\n    // Even if the project is using a dynamic config we can still\n    // prompt a better error message, recommend a default value, and help the user\n    // validate their custom android package upfront.\n    const { input } = await prompt(\n      {\n        type: 'text',\n        name: 'input',\n        message: `What would you like your Android package name to be?`,\n        validate: validatePackageWithWarning,\n      },\n      {\n        nonInteractiveHelp: NO_PACKAGE_MESSAGE,\n      }\n    );\n    packageName = input as string;\n  }\n\n  // Warn the user if the package name is already in use.\n  const warning = await getPackageNameWarningAsync(packageName);\n  if (warning && !(await warnAndConfirmAsync(warning))) {\n    // Cycle the Package name prompt to try again.\n    return promptForPackageWithInitialAsync(projectRoot, exp);\n  }\n\n  // Apply the changes to the config.\n  if (\n    await attemptModification(\n      projectRoot,\n      {\n        android: { ...(exp.android || {}), package: packageName },\n      },\n      {\n        android: { package: packageName },\n      }\n    )\n  ) {\n    Log.log(chalk.gray`\\u203A Android package name: ${packageName}`);\n  }\n\n  return packageName;\n}\n"],"names":["getOrPromptForBundleIdentifier","getOrPromptForPackage","debug","require","getExpoUsername","exp","getAccountUsername","NO_BUNDLE_ID_MESSAGE","NO_PACKAGE_MESSAGE","projectRoot","getConfig","current","ios","bundleIdentifier","assertValidBundleId","promptForBundleIdWithInitialAsync","getRecommendedBundleId","memoLog","memoize","Log","log","chalk","learnMore","input","prompt","type","name","message","validate","validateBundleId","nonInteractiveHelp","warning","getBundleIdWarningAsync","warnAndConfirmAsync","attemptModification","gray","warn","confirmAsync","initial","possibleIdFromAndroid","android","package","getSanitizedBundleIdentifier","undefined","username","possibleId","slug","getRecommendedPackageName","possibleIdFromApple","getSanitizedPackage","validatePackage","assertValidPackage","promptForPackageAsync","promptForPackageWithInitialAsync","packageName","validatePackageWithWarning","getPackageNameWarningAsync"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/utils/getOrPromptApplicationId.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport { memoize } from './fn';\nimport { learnMore } from './link';\nimport { attemptModification } from './modifyConfigAsync';\nimport prompt, { confirmAsync } from './prompts';\nimport {\n  assertValidBundleId,\n  assertValidPackage,\n  getBundleIdWarningAsync,\n  getPackageNameWarningAsync,\n  getSanitizedBundleIdentifier,\n  getSanitizedPackage,\n  validateBundleId,\n  validatePackage,\n  validatePackageWithWarning,\n} from './validateApplicationId';\nimport * as Log from '../log';\nimport { getAccountUsername } from './getAccountUsername';\n\nconst debug = require('debug')('expo:app-id') as typeof console.log;\n\nfunction getExpoUsername(exp: ExpoConfig) {\n  // Account for if the environment variable was an empty string.\n  return getAccountUsername(exp) || 'anonymous';\n}\n\nconst NO_BUNDLE_ID_MESSAGE = `Project must have a \\`ios.bundleIdentifier\\` set in the Expo config (app.json or app.config.js).`;\n\nconst NO_PACKAGE_MESSAGE = `Project must have a \\`android.package\\` set in the Expo config (app.json or app.config.js).`;\n\n/**\n * Get the bundle identifier from the Expo config or prompt the user to choose a new bundle identifier.\n * Prompted value will be validated against the App Store and a local regex.\n * If the project Expo config is a static JSON file, the bundle identifier will be updated in the config automatically.\n */\nexport async function getOrPromptForBundleIdentifier(\n  projectRoot: string,\n  exp: ExpoConfig = getConfig(projectRoot).exp\n): Promise<string> {\n  const current = exp.ios?.bundleIdentifier;\n  if (current) {\n    assertValidBundleId(current);\n    return current;\n  }\n\n  return promptForBundleIdWithInitialAsync(projectRoot, exp, getRecommendedBundleId(exp));\n}\n\nconst memoLog = memoize(Log.log);\n\nasync function promptForBundleIdWithInitialAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  bundleIdentifier?: string\n): Promise<string> {\n  if (!bundleIdentifier) {\n    memoLog(\n      chalk`\\n{bold 📝  iOS Bundle Identifier} {dim ${learnMore(\n        'https://expo.fyi/bundle-identifier'\n      )}}\\n`\n    );\n\n    // Prompt the user for the bundle ID.\n    // Even if the project is using a dynamic config we can still\n    // prompt a better error message, recommend a default value, and help the user\n    // validate their custom bundle ID upfront.\n    const { input } = await prompt(\n      {\n        type: 'text',\n        name: 'input',\n        // The Apple helps people know this isn't an EAS feature.\n        message: `What would you like your iOS bundle identifier to be?`,\n        validate: validateBundleId,\n      },\n      {\n        nonInteractiveHelp: NO_BUNDLE_ID_MESSAGE,\n      }\n    );\n    bundleIdentifier = input as string;\n  }\n\n  // Warn the user if the bundle ID is already in use.\n  const warning = await getBundleIdWarningAsync(bundleIdentifier);\n\n  if (warning && !(await warnAndConfirmAsync(warning))) {\n    // Cycle the Bundle ID prompt to try again.\n    return await promptForBundleIdWithInitialAsync(projectRoot, exp);\n  }\n\n  // Apply the changes to the config.\n  if (\n    await attemptModification(\n      projectRoot,\n      {\n        ios: { ...(exp.ios || {}), bundleIdentifier },\n      },\n      { ios: { bundleIdentifier } }\n    )\n  ) {\n    Log.log(chalk.gray`\\u203A Apple bundle identifier: ${bundleIdentifier}`);\n  }\n\n  return bundleIdentifier;\n}\n\nasync function warnAndConfirmAsync(warning: string): Promise<boolean> {\n  Log.log();\n  Log.warn(warning);\n  Log.log();\n  if (\n    !(await confirmAsync({\n      message: `Continue?`,\n      initial: true,\n    }))\n  ) {\n    return false;\n  }\n  return true;\n}\n\n// Recommend a bundle identifier based on the username and project slug.\nfunction getRecommendedBundleId(exp: ExpoConfig): string | undefined {\n  const possibleIdFromAndroid = exp.android?.package\n    ? getSanitizedBundleIdentifier(exp.android.package)\n    : undefined;\n  // Attempt to use the android package name first since it's convenient to have them aligned.\n  if (possibleIdFromAndroid && validateBundleId(possibleIdFromAndroid)) {\n    return possibleIdFromAndroid;\n  } else {\n    const username = getExpoUsername(exp);\n    const possibleId = getSanitizedBundleIdentifier(`com.${username}.${exp.slug}`);\n    if (validateBundleId(possibleId)) {\n      return possibleId;\n    }\n  }\n\n  return undefined;\n}\n\n// Recommend a package name based on the username and project slug.\nfunction getRecommendedPackageName(exp: ExpoConfig): string | undefined {\n  const possibleIdFromApple = exp.ios?.bundleIdentifier\n    ? getSanitizedPackage(exp.ios.bundleIdentifier)\n    : undefined;\n\n  // Attempt to use the ios bundle id first since it's convenient to have them aligned.\n  if (possibleIdFromApple && validatePackage(possibleIdFromApple)) {\n    return possibleIdFromApple;\n  } else {\n    const username = getExpoUsername(exp);\n    const possibleId = getSanitizedPackage(`com.${username}.${exp.slug}`);\n    if (validatePackage(possibleId)) {\n      return possibleId;\n    } else {\n      debug(\n        `Recommended package name is invalid: \"${possibleId}\" (username: ${username}, slug: ${exp.slug})`\n      );\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the package name from the Expo config or prompt the user to choose a new package name.\n * Prompted value will be validated against the Play Store and a local regex.\n * If the project Expo config is a static JSON file, the package name will be updated in the config automatically.\n */\nexport async function getOrPromptForPackage(\n  projectRoot: string,\n  exp: ExpoConfig = getConfig(projectRoot).exp\n): Promise<string> {\n  const current = exp.android?.package;\n  if (current) {\n    assertValidPackage(current);\n    return current;\n  }\n\n  return await promptForPackageAsync(projectRoot, exp);\n}\n\nfunction promptForPackageAsync(projectRoot: string, exp: ExpoConfig): Promise<string> {\n  return promptForPackageWithInitialAsync(projectRoot, exp, getRecommendedPackageName(exp));\n}\n\nasync function promptForPackageWithInitialAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  packageName?: string\n): Promise<string> {\n  if (!packageName) {\n    memoLog(\n      chalk`\\n{bold 📝  Android package} {dim ${learnMore('https://expo.fyi/android-package')}}\\n`\n    );\n\n    // Prompt the user for the android package.\n    // Even if the project is using a dynamic config we can still\n    // prompt a better error message, recommend a default value, and help the user\n    // validate their custom android package upfront.\n    const { input } = await prompt(\n      {\n        type: 'text',\n        name: 'input',\n        message: `What would you like your Android package name to be?`,\n        validate: validatePackageWithWarning,\n      },\n      {\n        nonInteractiveHelp: NO_PACKAGE_MESSAGE,\n      }\n    );\n    packageName = input as string;\n  }\n\n  // Warn the user if the package name is already in use.\n  const warning = await getPackageNameWarningAsync(packageName);\n  if (warning && !(await warnAndConfirmAsync(warning))) {\n    // Cycle the Package name prompt to try again.\n    return promptForPackageWithInitialAsync(projectRoot, exp);\n  }\n\n  // Apply the changes to the config.\n  if (\n    await attemptModification(\n      projectRoot,\n      {\n        android: { ...(exp.android || {}), package: packageName },\n      },\n      {\n        android: { package: packageName },\n      }\n    )\n  ) {\n    Log.log(chalk.gray`\\u203A Android package name: ${packageName}`);\n  }\n\n  return packageName;\n}\n"],"names":["getOrPromptForBundleIdentifier","getOrPromptForPackage","debug","require","getExpoUsername","exp","getAccountUsername","NO_BUNDLE_ID_MESSAGE","NO_PACKAGE_MESSAGE","projectRoot","getConfig","current","ios","bundleIdentifier","assertValidBundleId","promptForBundleIdWithInitialAsync","getRecommendedBundleId","memoLog","memoize","Log","log","chalk","learnMore","input","prompt","type","name","message","validate","validateBundleId","nonInteractiveHelp","warning","getBundleIdWarningAsync","warnAndConfirmAsync","attemptModification","gray","warn","confirmAsync","initial","possibleIdFromAndroid","android","package","getSanitizedBundleIdentifier","undefined","username","possibleId","slug","getRecommendedPackageName","possibleIdFromApple","getSanitizedPackage","validatePackage","assertValidPackage","promptForPackageAsync","promptForPackageWithInitialAsync","packageName","validatePackageWithWarning","getPackageNameWarningAsync"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@expo/cli/build/src/utils/telemetry/clients/FetchClient.js b/node_modules/@expo/cli/build/src/utils/telemetry/clients/FetchClient.js
index 7ccda8b..d1d108d 100644
--- a/node_modules/@expo/cli/build/src/utils/telemetry/clients/FetchClient.js
+++ b/node_modules/@expo/cli/build/src/utils/telemetry/clients/FetchClient.js
@@ -31,7 +31,7 @@ class FetchClient {
         this.headers = {
             accept: "application/json",
             "content-type": "application/json",
-            "user-agent": `expo-cli/${"0.22.9"}`,
+            "user-agent": `expo-cli/${"0.21.8"}`,
             authorization: "Basic " + _nodeBuffer().Buffer.from(`${target}:`).toString("base64")
         };
     }
diff --git a/node_modules/@expo/cli/build/src/utils/telemetry/utils/context.js b/node_modules/@expo/cli/build/src/utils/telemetry/utils/context.js
index c84e454..af70516 100644
--- a/node_modules/@expo/cli/build/src/utils/telemetry/utils/context.js
+++ b/node_modules/@expo/cli/build/src/utils/telemetry/utils/context.js
@@ -79,7 +79,7 @@ function createContext() {
         cpu: summarizeCpuInfo(),
         app: {
             name: "expo/cli",
-            version: "0.22.9"
+            version: "0.21.8"
         },
         ci: _ciInfo().isCI ? {
             name: _ciInfo().name,
